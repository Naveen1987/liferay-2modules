/*
SQLyog Ultimate v8.55 
MySQL - 5.7.12-log : Database - liferaynew_1
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*Table structure for table `wiki_comment_table` */

DROP TABLE IF EXISTS `wiki_comment_table`;

CREATE TABLE `wiki_comment_table` (
  `comment_ID` bigint(20) NOT NULL,
  `Comment_data` text,
  `Comment_User` varchar(500) DEFAULT NULL,
  `Comment_Date` varchar(1000) DEFAULT NULL,
  `PageID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`comment_ID`),
  KEY `FK_wiki_comment_table` (`PageID`),
  CONSTRAINT `FK_wiki_comment_table` FOREIGN KEY (`PageID`) REFERENCES `wiki_page_table` (`PageID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `wiki_comment_table` */

insert  into `wiki_comment_table`(`comment_ID`,`Comment_data`,`Comment_User`,`Comment_Date`,`PageID`) values (1,'This is me','Test','6/9/2017',1);

/*Table structure for table `wiki_node_table` */

DROP TABLE IF EXISTS `wiki_node_table`;

CREATE TABLE `wiki_node_table` (
  `NodeID` bigint(20) NOT NULL,
  `NodeName` varchar(500) DEFAULT NULL,
  `NodeDescription` varchar(1000) DEFAULT NULL,
  `NodeCreationDate` varchar(200) DEFAULT NULL,
  `NodeCreator` varchar(200) DEFAULT NULL,
  `NodeModificationDate` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`NodeID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `wiki_node_table` */

insert  into `wiki_node_table`(`NodeID`,`NodeName`,`NodeDescription`,`NodeCreationDate`,`NodeCreator`,`NodeModificationDate`) values (1,'Main','This is my First','6/9/2017','Test','6/9/2017'),(2,'Second',NULL,NULL,NULL,NULL),(42918,'THREE',NULL,'6/12/2017','Test Test',NULL);

/*Table structure for table `wiki_page_table` */

DROP TABLE IF EXISTS `wiki_page_table`;

CREATE TABLE `wiki_page_table` (
  `PageID` bigint(20) NOT NULL,
  `PageName` varchar(500) DEFAULT NULL,
  `PageDescription` varchar(1000) DEFAULT NULL,
  `PageRating` varchar(100) DEFAULT NULL,
  `PageVersion` varchar(100) DEFAULT NULL,
  `NodeID` bigint(20) DEFAULT NULL,
  `Page_Creation_Date` varchar(500) DEFAULT NULL,
  `Page_creator` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`PageID`),
  KEY `FK_wiki_page_table` (`NodeID`),
  CONSTRAINT `FK_wiki_page_table` FOREIGN KEY (`NodeID`) REFERENCES `wiki_node_table` (`NodeID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `wiki_page_table` */

insert  into `wiki_page_table`(`PageID`,`PageName`,`PageDescription`,`PageRating`,`PageVersion`,`NodeID`,`Page_Creation_Date`,`Page_creator`) values (1,'ONE','This is One Page','5','2',1,'6/9/2017','TEST'),(2,'TWO','This is Two Page','5','1',1,'6/9/2017','TEST'),(42919,'THREE ONE',NULL,NULL,NULL,42918,'6/12/2017','Test Test');

/*Table structure for table `wiki_pagedata_table` */

DROP TABLE IF EXISTS `wiki_pagedata_table`;

CREATE TABLE `wiki_pagedata_table` (
  `Page_ModID` bigint(20) NOT NULL,
  `PageData` longtext,
  `PageEdit_User` varchar(500) DEFAULT NULL,
  `Page_editDate` varchar(500) DEFAULT NULL,
  `Page_Version` varchar(500) DEFAULT NULL,
  `PageID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`Page_ModID`),
  KEY `FK_wiki_pagedata_table` (`PageID`),
  CONSTRAINT `FK_wiki_pagedata_table` FOREIGN KEY (`PageID`) REFERENCES `wiki_page_table` (`PageID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `wiki_pagedata_table` */

insert  into `wiki_pagedata_table`(`Page_ModID`,`PageData`,`PageEdit_User`,`Page_editDate`,`Page_Version`,`PageID`) values (1,'Hello','Test','6/9/2017','1',1),(2,'Hello Bye','Test','6/9/2017','2',1),(3,'this is two','Test','6/9/2017','3',1),(44472,'<p><b>Java</b>&nbsp;is a general-purpose&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_language\" title=\"Programming language\">computer programming language</a>&nbsp;that is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_computing\" title=\"Concurrent computing\">concurrent</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class-based_programming\" title=\"Class-based programming\">class-based</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" title=\"Object-oriented programming\">object-oriented</a>,<sup id=\"cite_ref-FOOTNOTEGoslingJoySteeleBracha20141_14-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-FOOTNOTEGoslingJoySteeleBracha20141-14\">[14]</a></sup>&nbsp;and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"<a href=\"https://en.wikipedia.org/wiki/Write_once,_run_anywhere\" title=\"Write once, run anywhere\">write once, run anywhere</a>\" (WORA),<sup id=\"cite_ref-15\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-15\">[15]</a></sup>&nbsp;meaning that&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compiled</a>&nbsp;Java code can run on all platforms that support Java without the need for recompilation.<sup id=\"cite_ref-design_goals_16-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;Java applications are typically compiled to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">bytecode</a>&nbsp;that can run on any&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;(JVM) regardless of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_architecture\" title=\"Computer architecture\">computer architecture</a>. As of 2016, Java is one of the most&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">popular programming languages in use</a>,<sup id=\"cite_ref-17\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-17\">[17]</a></sup><sup id=\"cite_ref-18\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-18\">[18]</a></sup><sup id=\"cite_ref-languagepopularity2013_19-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-languagepopularity2013-19\">[19]</a></sup><sup id=\"cite_ref-20\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-20\">[20]</a></sup>&nbsp;particularly for client-server web applications, with a reported 9 million developers.<sup id=\"cite_ref-21\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-21\">[21]</a></sup>&nbsp;Java was originally developed by&nbsp;<a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>&nbsp;at&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;(which has since been&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_acquisition_by_Oracle\" title=\"Sun acquisition by Oracle\">acquired by Oracle Corporation</a>) and released in 1995 as a core component of Sun Microsystems\'&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java platform</a>. The language derives much of its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Syntax_(programming_languages)\" title=\"Syntax (programming languages)\">syntax</a>&nbsp;from&nbsp;<a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\" title=\"C (programming language)\">C</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>, but it has fewer&nbsp;<a href=\"https://en.wikipedia.org/wiki/Low-level_programming_language\" title=\"Low-level programming language\">low-level</a>&nbsp;facilities than either of them.</p>\n\n<p>The original and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Reference_implementation\" title=\"Reference implementation\">reference implementation</a>&nbsp;Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compilers</a>, virtual machines, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Library_(computing)\" title=\"Library (computing)\">class libraries</a>&nbsp;were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>, Sun&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_relicensing\" title=\"Software relicensing\">relicensed</a>&nbsp;most of its Java technologies under the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>. Others have also developed alternative implementations of these Sun technologies, such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Compiler_for_Java\" title=\"GNU Compiler for Java\">GNU Compiler for Java</a>&nbsp;(bytecode compiler),&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Classpath\" title=\"GNU Classpath\">GNU Classpath</a>&nbsp;(standard libraries), and&nbsp;<a href=\"https://en.wikipedia.org/wiki/IcedTea\" title=\"IcedTea\">IcedTea</a>-Web (browser plugin for applets).</p>\n\n<p>The latest version is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 8</a>&nbsp;which is the only version currently supported for free by Oracle, although earlier versions are supported both by Oracle and other companies on a commercial basis.</p>','Test Test','6/12/2017','4',1),(44473,'<p><b>Java</b>&nbsp;is a general-purpose&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_language\" title=\"Programming language\">computer programming language</a>&nbsp;that is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_computing\" title=\"Concurrent computing\">concurrent</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class-based_programming\" title=\"Class-based programming\">class-based</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" title=\"Object-oriented programming\">object-oriented</a>,<sup id=\"cite_ref-FOOTNOTEGoslingJoySteeleBracha20141_14-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-FOOTNOTEGoslingJoySteeleBracha20141-14\">[14]</a></sup>&nbsp;and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"<a href=\"https://en.wikipedia.org/wiki/Write_once,_run_anywhere\" title=\"Write once, run anywhere\">write once, run anywhere</a>\" (WORA),<sup id=\"cite_ref-15\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-15\">[15]</a></sup>&nbsp;meaning that&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compiled</a>&nbsp;Java code can run on all platforms that support Java without the need for recompilation.<sup id=\"cite_ref-design_goals_16-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;Java applications are typically compiled to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">bytecode</a>&nbsp;that can run on any&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;(JVM) regardless of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_architecture\" title=\"Computer architecture\">computer architecture</a>. As of 2016, Java is one of the most&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">popular programming languages in use</a>,<sup id=\"cite_ref-17\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-17\">[17]</a></sup><sup id=\"cite_ref-18\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-18\">[18]</a></sup><sup id=\"cite_ref-languagepopularity2013_19-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-languagepopularity2013-19\">[19]</a></sup><sup id=\"cite_ref-20\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-20\">[20]</a></sup>&nbsp;particularly for client-server web applications, with a reported 9 million developers.<sup id=\"cite_ref-21\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-21\">[21]</a></sup>&nbsp;Java was originally developed by&nbsp;<a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>&nbsp;at&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;(which has since been&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_acquisition_by_Oracle\" title=\"Sun acquisition by Oracle\">acquired by Oracle Corporation</a>) and released in 1995 as a core component of Sun Microsystems\'&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java platform</a>. The language derives much of its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Syntax_(programming_languages)\" title=\"Syntax (programming languages)\">syntax</a>&nbsp;from&nbsp;<a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\" title=\"C (programming language)\">C</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>, but it has fewer&nbsp;<a href=\"https://en.wikipedia.org/wiki/Low-level_programming_language\" title=\"Low-level programming language\">low-level</a>&nbsp;facilities than either of them.</p>\n\n<p>The original and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Reference_implementation\" title=\"Reference implementation\">reference implementation</a>&nbsp;Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compilers</a>, virtual machines, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Library_(computing)\" title=\"Library (computing)\">class libraries</a>&nbsp;were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>, Sun&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_relicensing\" title=\"Software relicensing\">relicensed</a>&nbsp;most of its Java technologies under the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>. Others have also developed alternative implementations of these Sun technologies, such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Compiler_for_Java\" title=\"GNU Compiler for Java\">GNU Compiler for Java</a>&nbsp;(bytecode compiler),&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Classpath\" title=\"GNU Classpath\">GNU Classpath</a>&nbsp;(standard libraries), and&nbsp;<a href=\"https://en.wikipedia.org/wiki/IcedTea\" title=\"IcedTea\">IcedTea</a>-Web (browser plugin for applets).</p>\n\n<p>The latest version is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 8</a>&nbsp;which is the only version currently supported for free by Oracle, although earlier versions are supported both by Oracle and other companies on a commercial basis.</p>\n\n<h2>Contents</h2>\n\n<p>&nbsp;&nbsp;[<a role=\"button\" tabindex=\"0\">hide</a>]&nbsp;</p>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#History\">1History</a>\n\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Principles\">1.1Principles</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Versions\">1.2Versions</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Practices\">2Practices</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Java_platform\">2.1Java platform</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Implementations\">2.1.1Implementations</a></li>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Performance\">2.1.2Performance</a></li>\n		</ul>\n		</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Automatic_memory_management\">2.2Automatic memory management</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Syntax\">3Syntax</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#.22Hello_world.22_example\">4\"Hello world\" example</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Special_classes\">5Special classes</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Applet\">5.1Applet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Servlet\">5.2Servlet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#JavaServer_Pages\">5.3JavaServer Pages</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Swing_application\">5.4Swing application</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Generics\">5.5Generics</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Criticism\">6Criticism</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Use_outside_of_the_Java_platform\">7Use outside of the Java platform</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Android\">7.1Android</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Controversy\">7.1.1Controversy</a></li>\n		</ul>\n		</li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Class_libraries\">8Class libraries</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Documentation\">9Documentation</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Editions\">10Editions</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#See_also\">11See also</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Comparison_of_Java_with_other_languages\">11.1Comparison of Java with other languages</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Notes\">12Notes</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#References\">13References</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#External_links\">14External links</a></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h2>History</h2>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)#History\" title=\"Java (software platform)\">Java (software platform) §&nbsp;History</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Duke_(Java_mascot)_waving.svg\"><img alt=\"\" data-file-height=\"407\" data-file-width=\"226\" height=\"306\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/170px-Duke_%28Java_mascot%29_waving.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/255px-Duke_%28Java_mascot%29_waving.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/340px-Duke_%28Java_mascot%29_waving.svg.png 2x\" width=\"170\" /></a></p>\n\n<p>Duke, the Java mascot</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:James_Gosling_2008.jpg\"><img alt=\"\" data-file-height=\"1469\" data-file-width=\"1460\" height=\"221\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/220px-James_Gosling_2008.jpg\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/330px-James_Gosling_2008.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/440px-James_Gosling_2008.jpg 2x\" width=\"220\" /></a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, the creator of Java (2008)</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Tiobeindex.png\"><img alt=\"\" data-file-height=\"426\" data-file-width=\"704\" height=\"133\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/220px-Tiobeindex.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/330px-Tiobeindex.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/440px-Tiobeindex.png 2x\" width=\"220\" /></a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/TIOBE_index\" title=\"TIOBE index\">TIOBE</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">programming language popularity index</a>&nbsp;graph from 2002 to 2015. Over the course of a decade Java (blue) and C (black) competing for the top position.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, Mike Sheridan, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Patrick_Naughton\" title=\"Patrick Naughton\">Patrick Naughton</a>&nbsp;initiated the Java language project in June 1991.<sup id=\"cite_ref-22\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-22\">[22]</a></sup>&nbsp;Java was originally designed for interactive television, but it was too advanced for the digital cable television industry at the time.<sup id=\"cite_ref-23\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-23\">[23]</a></sup>&nbsp;The language was initially called&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Oak_(programming_language)\" title=\"Oak (programming language)\">Oak</a></i>&nbsp;after an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oak\" title=\"Oak\">oak</a>&nbsp;tree that stood outside Gosling\'s office. Later the project went by the name&nbsp;<i>Green</i>&nbsp;and was finally renamed&nbsp;<i>Java</i>, from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_coffee\" title=\"Java coffee\">Java coffee</a>.<sup id=\"cite_ref-24\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-24\">[24]</a></sup>&nbsp;Gosling designed Java with a C/C++-style syntax that system and application programmers would find familiar.<sup id=\"cite_ref-25\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-25\">[25]</a></sup></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;released the first public implementation as Java 1.0 in 1995.<sup id=\"cite_ref-oraclejavahistory_26-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oraclejavahistory-26\">[26]</a></sup>&nbsp;It promised \"Write Once, Run Anywhere\" (WORA), providing no-cost run-times on popular&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computing_platform\" title=\"Computing platform\">platforms</a>. Fairly secure and featuring configurable security, it allowed network- and file-access restrictions. Major&nbsp;<a href=\"https://en.wikipedia.org/wiki/Web_browser\" title=\"Web browser\">web browsers</a>&nbsp;soon incorporated the ability to run&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">Java applets</a></i>&nbsp;within web pages, and Java quickly became popular. The Java 1.0 compiler was re-written&nbsp;<a href=\"https://en.wikipedia.org/wiki/Bootstrapping_(compilers)\" title=\"Bootstrapping (compilers)\">in Java</a>&nbsp;by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Arthur_van_Hoff\" title=\"Arthur van Hoff\">Arthur van Hoff</a>&nbsp;to comply strictly with the Java 1.0 language specification.<sup id=\"cite_ref-27\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-27\">[27]</a></sup>&nbsp;With the advent of&nbsp;<i>Java 2</i>&nbsp;(released initially as J2SE 1.2 in December 1998 – 1999), new versions had multiple configurations built for different types of platforms.&nbsp;<i>J2EE</i>&nbsp;included technologies and APIs for enterprise applications typically run in server environments, while&nbsp;<i>J2ME</i>&nbsp;featured APIs optimized for mobile applications. The desktop version was renamed&nbsp;<i>J2SE</i>. In 2006, for marketing purposes, Sun renamed new&nbsp;<i>J2</i>&nbsp;versions as&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a></i>,&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition\" title=\"Java Platform, Micro Edition\">Java ME</a></i>, and&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition\" title=\"Java Platform, Standard Edition\">Java SE</a></i>, respectively.</p>\n\n<p>In 1997, Sun Microsystems approached the&nbsp;<a href=\"https://en.wikipedia.org/wiki/ISO/IEC_JTC_1\" title=\"ISO/IEC JTC 1\">ISO/IEC JTC 1</a>&nbsp;standards body and later the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>&nbsp;to formalize Java, but it soon withdrew from the process.<sup id=\"cite_ref-28\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-28\">[28]</a></sup><sup id=\"cite_ref-29\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-29\">[29]</a></sup><sup id=\"cite_ref-30\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-30\">[30]</a></sup>&nbsp;Java remains a&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\"><i>de facto</i>&nbsp;standard</a>, controlled through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>.<sup id=\"cite_ref-31\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-31\">[31]</a></sup>At one time, Sun made most of its Java implementations available without charge, despite their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Proprietary_software\" title=\"Proprietary software\">proprietary software</a>&nbsp;status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System.</p>\n\n<p>On November 13, 2006, Sun released much of its Java virtual machine (JVM) as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_and_open-source_software\" title=\"Free and open-source software\">free and open-source software</a>, (FOSS), under the terms of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>&nbsp;(GPL). On May 8, 2007, Sun finished the process, making all of its JVM\'s core code available under&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_software\" title=\"Free software\">free software</a>/open-source distribution terms, aside from a small portion of code to which Sun did not hold the copyright.<sup id=\"cite_ref-32\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-32\">[32]</a></sup></p>\n\n<p>Sun\'s vice-president Rich Green said that Sun\'s ideal role with regard to Java was as an \"evangelist\".<sup id=\"cite_ref-33\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-33\">[33]</a></sup>&nbsp;Following&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>\'s acquisition of Sun Microsystems in 2009–10, Oracle has described itself as the \"steward of Java technology with a relentless commitment to fostering a community of participation and transparency\".<sup id=\"cite_ref-34\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-34\">[34]</a></sup>&nbsp;This did not prevent Oracle from filing a lawsuit against Google shortly after that for using Java inside the Android SDK (see Google section below). Java software runs on everything from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Laptop\" title=\"Laptop\">laptops</a>&nbsp;to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_center\" title=\"Data center\">data centers</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Video_game_console\" title=\"Video game console\">game consoles</a>&nbsp;to scientific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Supercomputer\" title=\"Supercomputer\">supercomputers</a>.<sup id=\"cite_ref-35\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-35\">[35]</a></sup>&nbsp;On April 2, 2010, James Gosling resigned from Oracle.<sup id=\"cite_ref-36\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-36\">[36]</a></sup></p>\n\n<p>In January 2016, Oracle announced that Java runtime environments based on JDK 9 will discontinue the browser plugin.<sup id=\"cite_ref-37\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-37\">[37]</a></sup></p>\n\n<h3>Principles</h3>\n\n<p>There were five primary goals in the creation of the Java language:<sup id=\"cite_ref-design_goals_16-1\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup></p>\n\n<ol>\n	<li>It must be \"simple, object-oriented, and familiar\".</li>\n	<li>It must be \"robust and secure\".</li>\n	<li>It must be \"architecture-neutral and portable\".</li>\n	<li>It must execute with \"high performance\".</li>\n	<li>It must be \"interpreted, threaded, and dynamic\".</li>\n</ol>\n\n<h3>Versions</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java version history</a></p>\n\n<p>As of 2015, only Java 8 is officially supported. Major release versions of Java, along with their release dates:</p>\n\n<ul>\n	<li>JDK 1.0 (January 23, 1996)<sup id=\"cite_ref-38\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-38\">[38]</a></sup></li>\n	<li>JDK 1.1 (February 19, 1997)</li>\n	<li>J2SE 1.2 (December 8, 1998)</li>\n	<li>J2SE 1.3 (May 8, 2000)</li>\n	<li>J2SE 1.4 (February 6, 2002)</li>\n	<li>J2SE 5.0 (September 30, 2004)</li>\n	<li>Java SE 6 (December 11, 2006)</li>\n	<li>Java SE 7 (July 28, 2011)</li>\n	<li>Java SE 8 (March 18, 2014)</li>\n</ul>\n\n<h2>Practices</h2>\n\n<h3>Java platform</h3>\n\n<p>Main articles:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java (software platform)</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a></p>\n\n<p>One design goal of Java is portability, which means that programs written for the Java platform must run similarly on any combination of hardware and operating system with adequate runtime support. This is achieved by compiling the Java language code to an intermediate representation called&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>, instead of directly to architecture-specific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Machine_code\" title=\"Machine code\">machine code</a>. Java bytecode instructions are analogous to machine code, but they are intended to be executed by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Virtual_machine\" title=\"Virtual machine\">virtual machine</a>&nbsp;(VM) written specifically for the host hardware.&nbsp;<a href=\"https://en.wikipedia.org/wiki/End_user\" title=\"End user\">End users</a>&nbsp;commonly use a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java Runtime Environment</a>&nbsp;(JRE) installed on their own machine for standalone Java applications, or in a web browser for Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Applet\" title=\"Applet\">applets</a>.</p>\n\n<p>Standard libraries provide a generic way to access host-specific features such as graphics,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Thread_(computing)\" title=\"Thread (computing)\">threading</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_network\" title=\"Computer network\">networking</a>.</p>\n\n<p>The use of universal bytecode makes porting simple. However, the overhead of interpreting bytecode into machine instructions made interpreted programs almost always run more slowly than native&nbsp;<a href=\"https://en.wikipedia.org/wiki/Executable\" title=\"Executable\">executables</a>.&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">Just-in-time</a>&nbsp;(JIT) compilers that compile bytecodes to machine code during runtime were introduced from an early stage. Java itself is platform-independent and is adapted to the particular platform it is to run on by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;for it, which translates the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>&nbsp;into the platform\'s machine language.<sup id=\"cite_ref-39\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-39\">[39]</a></sup></p>\n\n<h4>Implementations</h4>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_Java_implementations\" title=\"Free Java implementations\">Free Java implementations</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>&nbsp;is the current owner of the official implementation of the Java SE platform, following their acquisition of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;on January 27, 2010. This implementation is based on the original implementation of Java by Sun. The Oracle implementation is available for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Microsoft Windows</a>&nbsp;(still works for XP, while only later versions currently officially supported),&nbsp;<a href=\"https://en.wikipedia.org/wiki/MacOS\" title=\"MacOS\">macOS</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Linux\" title=\"Linux\">Linux</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Solaris_(operating_system)\" title=\"Solaris (operating system)\">Solaris</a>. Because Java lacks any formal standardization recognized by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>, ISO/IEC, ANSI, or other third-party standards organization, the Oracle implementation is the&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\">de facto standard</a>.</p>\n\n<p>The Oracle implementation is packaged into two different distributions: The Java Runtime Environment (JRE) which contains the parts of the Java SE platform required to run Java programs and is intended for end users, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Development_Kit\" title=\"Java Development Kit\">Java Development Kit</a>&nbsp;(JDK), which is intended for software developers and includes development tools such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/JAR_(file_format)\" title=\"JAR (file format)\">Jar</a>, and a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Debugger\" title=\"Debugger\">debugger</a>.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/OpenJDK\" title=\"OpenJDK\">OpenJDK</a>&nbsp;is another notable Java SE implementation that is licensed under the GNU GPL. The implementation started when Sun began releasing the Java source code under the GPL. As of Java SE 7, OpenJDK is the official Java reference implementation.</p>\n\n<p>The goal of Java is to make all implementations of Java compatible. Historically, Sun\'s trademark license for usage of the Java brand insists that all implementations be \"compatible\". This resulted in a legal dispute with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft\" title=\"Microsoft\">Microsoft</a>&nbsp;after Sun claimed that the Microsoft implementation did not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" title=\"Java remote method invocation\">RMI</a>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Native_Interface\" title=\"Java Native Interface\">JNI</a>&nbsp;and had added platform-specific features of their own. Sun sued in 1997, and, in 2001, won a settlement of US$20 million, as well as a court order enforcing the terms of the license from Sun.<sup id=\"cite_ref-40\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-40\">[40]</a></sup>&nbsp;As a result, Microsoft no longer ships Java with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Windows</a>.</p>\n\n<p>Platform-independent Java is essential to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a>, and an even more rigorous validation is required to certify an implementation. This environment enables portable server-side applications.</p>\n\n<h4>Performance</h4>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_performance\" title=\"Java performance\">Java performance</a></p>\n\n<p>Programs written in Java have a reputation for being slower and requiring more memory than those written in C++.<sup id=\"cite_ref-41\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-41\">[41]</a></sup><sup id=\"cite_ref-42\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-42\">[42]</a></sup>&nbsp;However, Java programs\' execution speed improved significantly with the introduction of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">just-in-time compilation</a>&nbsp;in 1997/1998 for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 1.1</a>,<sup id=\"cite_ref-43\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-43\">[43]</a></sup>&nbsp;the addition of language features supporting better code analysis (such as inner classes, the StringBuilder class, optional assertions, etc.), and optimizations in the Java virtual machine, such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/HotSpot\" title=\"HotSpot\">HotSpot</a>&nbsp;becoming the default for Sun\'s JVM in 2000. With Java 1.5, the performance was improved with the addition of the java.util.concurrent package, including&nbsp;<a href=\"https://en.wikipedia.org/wiki/Lock_free\" title=\"Lock free\">Lock free</a>&nbsp;implementations of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_ConcurrentMap\" title=\"Java ConcurrentMap\">ConcurrentMaps</a>&nbsp;and other multi-core collections, and it was improved further Java 1.6.</p>\n\n<p>Some platforms offer direct hardware support for Java; there are microcontrollers that can run Java in hardware instead of a software Java virtual machine<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup>, and some&nbsp;<a href=\"https://en.wikipedia.org/wiki/ARM_architecture\" title=\"ARM architecture\">ARM</a>&nbsp;based processors could have hardware support for executing Java bytecode through their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Jazelle\" title=\"Jazelle\">Jazelle</a>&nbsp;option, though support has mostly been dropped in current implementations of ARM.</p>\n\n<p>&nbsp;</p>','Test Test','6/12/2017','5',1),(44474,'<p><b>Java</b>&nbsp;is a general-purpose&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_language\" title=\"Programming language\">computer programming language</a>&nbsp;that is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_computing\" title=\"Concurrent computing\">concurrent</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class-based_programming\" title=\"Class-based programming\">class-based</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" title=\"Object-oriented programming\">object-oriented</a>,<sup id=\"cite_ref-FOOTNOTEGoslingJoySteeleBracha20141_14-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-FOOTNOTEGoslingJoySteeleBracha20141-14\">[14]</a></sup>&nbsp;and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"<a href=\"https://en.wikipedia.org/wiki/Write_once,_run_anywhere\" title=\"Write once, run anywhere\">write once, run anywhere</a>\" (WORA),<sup id=\"cite_ref-15\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-15\">[15]</a></sup>&nbsp;meaning that&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compiled</a>&nbsp;Java code can run on all platforms that support Java without the need for recompilation.<sup id=\"cite_ref-design_goals_16-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;Java applications are typically compiled to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">bytecode</a>&nbsp;that can run on any&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;(JVM) regardless of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_architecture\" title=\"Computer architecture\">computer architecture</a>. As of 2016, Java is one of the most&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">popular programming languages in use</a>,<sup id=\"cite_ref-17\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-17\">[17]</a></sup><sup id=\"cite_ref-18\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-18\">[18]</a></sup><sup id=\"cite_ref-languagepopularity2013_19-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-languagepopularity2013-19\">[19]</a></sup><sup id=\"cite_ref-20\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-20\">[20]</a></sup>&nbsp;particularly for client-server web applications, with a reported 9 million developers.<sup id=\"cite_ref-21\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-21\">[21]</a></sup>&nbsp;Java was originally developed by&nbsp;<a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>&nbsp;at&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;(which has since been&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_acquisition_by_Oracle\" title=\"Sun acquisition by Oracle\">acquired by Oracle Corporation</a>) and released in 1995 as a core component of Sun Microsystems\'&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java platform</a>. The language derives much of its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Syntax_(programming_languages)\" title=\"Syntax (programming languages)\">syntax</a>&nbsp;from&nbsp;<a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\" title=\"C (programming language)\">C</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>, but it has fewer&nbsp;<a href=\"https://en.wikipedia.org/wiki/Low-level_programming_language\" title=\"Low-level programming language\">low-level</a>&nbsp;facilities than either of them.</p>\n\n<p>The original and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Reference_implementation\" title=\"Reference implementation\">reference implementation</a>&nbsp;Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compilers</a>, virtual machines, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Library_(computing)\" title=\"Library (computing)\">class libraries</a>&nbsp;were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>, Sun&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_relicensing\" title=\"Software relicensing\">relicensed</a>&nbsp;most of its Java technologies under the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>. Others have also developed alternative implementations of these Sun technologies, such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Compiler_for_Java\" title=\"GNU Compiler for Java\">GNU Compiler for Java</a>&nbsp;(bytecode compiler),&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Classpath\" title=\"GNU Classpath\">GNU Classpath</a>&nbsp;(standard libraries), and&nbsp;<a href=\"https://en.wikipedia.org/wiki/IcedTea\" title=\"IcedTea\">IcedTea</a>-Web (browser plugin for applets).</p>\n\n<p>The latest version is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 8</a>&nbsp;which is the only version currently supported for free by Oracle, although earlier versions are supported both by Oracle and other companies on a commercial basis.</p>\n\n<h2>Contents</h2>\n\n<p>&nbsp;&nbsp;[<a role=\"button\" tabindex=\"0\">hide</a>]&nbsp;</p>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#History\">1History</a>\n\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Principles\">1.1Principles</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Versions\">1.2Versions</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Practices\">2Practices</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Java_platform\">2.1Java platform</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Implementations\">2.1.1Implementations</a></li>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Performance\">2.1.2Performance</a></li>\n		</ul>\n		</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Automatic_memory_management\">2.2Automatic memory management</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Syntax\">3Syntax</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#.22Hello_world.22_example\">4\"Hello world\" example</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Special_classes\">5Special classes</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Applet\">5.1Applet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Servlet\">5.2Servlet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#JavaServer_Pages\">5.3JavaServer Pages</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Swing_application\">5.4Swing application</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Generics\">5.5Generics</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Criticism\">6Criticism</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Use_outside_of_the_Java_platform\">7Use outside of the Java platform</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Android\">7.1Android</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Controversy\">7.1.1Controversy</a></li>\n		</ul>\n		</li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Class_libraries\">8Class libraries</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Documentation\">9Documentation</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Editions\">10Editions</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#See_also\">11See also</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Comparison_of_Java_with_other_languages\">11.1Comparison of Java with other languages</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Notes\">12Notes</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#References\">13References</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#External_links\">14External links</a></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h2>History</h2>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)#History\" title=\"Java (software platform)\">Java (software platform) §&nbsp;History</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Duke_(Java_mascot)_waving.svg\"><img alt=\"\" data-file-height=\"407\" data-file-width=\"226\" height=\"306\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/170px-Duke_%28Java_mascot%29_waving.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/255px-Duke_%28Java_mascot%29_waving.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/340px-Duke_%28Java_mascot%29_waving.svg.png 2x\" width=\"170\" /></a></p>\n\n<p>Duke, the Java mascot</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:James_Gosling_2008.jpg\"><img alt=\"\" data-file-height=\"1469\" data-file-width=\"1460\" height=\"221\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/220px-James_Gosling_2008.jpg\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/330px-James_Gosling_2008.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/440px-James_Gosling_2008.jpg 2x\" width=\"220\" /></a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, the creator of Java (2008)</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Tiobeindex.png\"><img alt=\"\" data-file-height=\"426\" data-file-width=\"704\" height=\"133\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/220px-Tiobeindex.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/330px-Tiobeindex.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/440px-Tiobeindex.png 2x\" width=\"220\" /></a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/TIOBE_index\" title=\"TIOBE index\">TIOBE</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">programming language popularity index</a>&nbsp;graph from 2002 to 2015. Over the course of a decade Java (blue) and C (black) competing for the top position.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, Mike Sheridan, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Patrick_Naughton\" title=\"Patrick Naughton\">Patrick Naughton</a>&nbsp;initiated the Java language project in June 1991.<sup id=\"cite_ref-22\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-22\">[22]</a></sup>&nbsp;Java was originally designed for interactive television, but it was too advanced for the digital cable television industry at the time.<sup id=\"cite_ref-23\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-23\">[23]</a></sup>&nbsp;The language was initially called&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Oak_(programming_language)\" title=\"Oak (programming language)\">Oak</a></i>&nbsp;after an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oak\" title=\"Oak\">oak</a>&nbsp;tree that stood outside Gosling\'s office. Later the project went by the name&nbsp;<i>Green</i>&nbsp;and was finally renamed&nbsp;<i>Java</i>, from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_coffee\" title=\"Java coffee\">Java coffee</a>.<sup id=\"cite_ref-24\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-24\">[24]</a></sup>&nbsp;Gosling designed Java with a C/C++-style syntax that system and application programmers would find familiar.<sup id=\"cite_ref-25\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-25\">[25]</a></sup></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;released the first public implementation as Java 1.0 in 1995.<sup id=\"cite_ref-oraclejavahistory_26-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oraclejavahistory-26\">[26]</a></sup>&nbsp;It promised \"Write Once, Run Anywhere\" (WORA), providing no-cost run-times on popular&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computing_platform\" title=\"Computing platform\">platforms</a>. Fairly secure and featuring configurable security, it allowed network- and file-access restrictions. Major&nbsp;<a href=\"https://en.wikipedia.org/wiki/Web_browser\" title=\"Web browser\">web browsers</a>&nbsp;soon incorporated the ability to run&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">Java applets</a></i>&nbsp;within web pages, and Java quickly became popular. The Java 1.0 compiler was re-written&nbsp;<a href=\"https://en.wikipedia.org/wiki/Bootstrapping_(compilers)\" title=\"Bootstrapping (compilers)\">in Java</a>&nbsp;by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Arthur_van_Hoff\" title=\"Arthur van Hoff\">Arthur van Hoff</a>&nbsp;to comply strictly with the Java 1.0 language specification.<sup id=\"cite_ref-27\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-27\">[27]</a></sup>&nbsp;With the advent of&nbsp;<i>Java 2</i>&nbsp;(released initially as J2SE 1.2 in December 1998 – 1999), new versions had multiple configurations built for different types of platforms.&nbsp;<i>J2EE</i>&nbsp;included technologies and APIs for enterprise applications typically run in server environments, while&nbsp;<i>J2ME</i>&nbsp;featured APIs optimized for mobile applications. The desktop version was renamed&nbsp;<i>J2SE</i>. In 2006, for marketing purposes, Sun renamed new&nbsp;<i>J2</i>&nbsp;versions as&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a></i>,&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition\" title=\"Java Platform, Micro Edition\">Java ME</a></i>, and&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition\" title=\"Java Platform, Standard Edition\">Java SE</a></i>, respectively.</p>\n\n<p>In 1997, Sun Microsystems approached the&nbsp;<a href=\"https://en.wikipedia.org/wiki/ISO/IEC_JTC_1\" title=\"ISO/IEC JTC 1\">ISO/IEC JTC 1</a>&nbsp;standards body and later the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>&nbsp;to formalize Java, but it soon withdrew from the process.<sup id=\"cite_ref-28\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-28\">[28]</a></sup><sup id=\"cite_ref-29\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-29\">[29]</a></sup><sup id=\"cite_ref-30\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-30\">[30]</a></sup>&nbsp;Java remains a&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\"><i>de facto</i>&nbsp;standard</a>, controlled through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>.<sup id=\"cite_ref-31\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-31\">[31]</a></sup>At one time, Sun made most of its Java implementations available without charge, despite their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Proprietary_software\" title=\"Proprietary software\">proprietary software</a>&nbsp;status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System.</p>\n\n<p>On November 13, 2006, Sun released much of its Java virtual machine (JVM) as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_and_open-source_software\" title=\"Free and open-source software\">free and open-source software</a>, (FOSS), under the terms of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>&nbsp;(GPL). On May 8, 2007, Sun finished the process, making all of its JVM\'s core code available under&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_software\" title=\"Free software\">free software</a>/open-source distribution terms, aside from a small portion of code to which Sun did not hold the copyright.<sup id=\"cite_ref-32\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-32\">[32]</a></sup></p>\n\n<p>Sun\'s vice-president Rich Green said that Sun\'s ideal role with regard to Java was as an \"evangelist\".<sup id=\"cite_ref-33\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-33\">[33]</a></sup>&nbsp;Following&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>\'s acquisition of Sun Microsystems in 2009–10, Oracle has described itself as the \"steward of Java technology with a relentless commitment to fostering a community of participation and transparency\".<sup id=\"cite_ref-34\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-34\">[34]</a></sup>&nbsp;This did not prevent Oracle from filing a lawsuit against Google shortly after that for using Java inside the Android SDK (see Google section below). Java software runs on everything from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Laptop\" title=\"Laptop\">laptops</a>&nbsp;to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_center\" title=\"Data center\">data centers</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Video_game_console\" title=\"Video game console\">game consoles</a>&nbsp;to scientific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Supercomputer\" title=\"Supercomputer\">supercomputers</a>.<sup id=\"cite_ref-35\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-35\">[35]</a></sup>&nbsp;On April 2, 2010, James Gosling resigned from Oracle.<sup id=\"cite_ref-36\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-36\">[36]</a></sup></p>\n\n<p>In January 2016, Oracle announced that Java runtime environments based on JDK 9 will discontinue the browser plugin.<sup id=\"cite_ref-37\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-37\">[37]</a></sup></p>\n\n<h3>Principles</h3>\n\n<p>There were five primary goals in the creation of the Java language:<sup id=\"cite_ref-design_goals_16-1\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup></p>\n\n<ol>\n	<li>It must be \"simple, object-oriented, and familiar\".</li>\n	<li>It must be \"robust and secure\".</li>\n	<li>It must be \"architecture-neutral and portable\".</li>\n	<li>It must execute with \"high performance\".</li>\n	<li>It must be \"interpreted, threaded, and dynamic\".</li>\n</ol>\n\n<h3>Versions</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java version history</a></p>\n\n<p>As of 2015, only Java 8 is officially supported. Major release versions of Java, along with their release dates:</p>\n\n<ul>\n	<li>JDK 1.0 (January 23, 1996)<sup id=\"cite_ref-38\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-38\">[38]</a></sup></li>\n	<li>JDK 1.1 (February 19, 1997)</li>\n	<li>J2SE 1.2 (December 8, 1998)</li>\n	<li>J2SE 1.3 (May 8, 2000)</li>\n	<li>J2SE 1.4 (February 6, 2002)</li>\n	<li>J2SE 5.0 (September 30, 2004)</li>\n	<li>Java SE 6 (December 11, 2006)</li>\n	<li>Java SE 7 (July 28, 2011)</li>\n	<li>Java SE 8 (March 18, 2014)</li>\n</ul>\n\n<h2>Practices</h2>\n\n<h3>Java platform</h3>\n\n<p>Main articles:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java (software platform)</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a></p>\n\n<p>One design goal of Java is portability, which means that programs written for the Java platform must run similarly on any combination of hardware and operating system with adequate runtime support. This is achieved by compiling the Java language code to an intermediate representation called&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>, instead of directly to architecture-specific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Machine_code\" title=\"Machine code\">machine code</a>. Java bytecode instructions are analogous to machine code, but they are intended to be executed by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Virtual_machine\" title=\"Virtual machine\">virtual machine</a>&nbsp;(VM) written specifically for the host hardware.&nbsp;<a href=\"https://en.wikipedia.org/wiki/End_user\" title=\"End user\">End users</a>&nbsp;commonly use a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java Runtime Environment</a>&nbsp;(JRE) installed on their own machine for standalone Java applications, or in a web browser for Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Applet\" title=\"Applet\">applets</a>.</p>\n\n<p>Standard libraries provide a generic way to access host-specific features such as graphics,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Thread_(computing)\" title=\"Thread (computing)\">threading</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_network\" title=\"Computer network\">networking</a>.</p>\n\n<p>The use of universal bytecode makes porting simple. However, the overhead of interpreting bytecode into machine instructions made interpreted programs almost always run more slowly than native&nbsp;<a href=\"https://en.wikipedia.org/wiki/Executable\" title=\"Executable\">executables</a>.&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">Just-in-time</a>&nbsp;(JIT) compilers that compile bytecodes to machine code during runtime were introduced from an early stage. Java itself is platform-independent and is adapted to the particular platform it is to run on by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;for it, which translates the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>&nbsp;into the platform\'s machine language.<sup id=\"cite_ref-39\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-39\">[39]</a></sup></p>\n\n<h4>Implementations</h4>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_Java_implementations\" title=\"Free Java implementations\">Free Java implementations</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>&nbsp;is the current owner of the official implementation of the Java SE platform, following their acquisition of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;on January 27, 2010. This implementation is based on the original implementation of Java by Sun. The Oracle implementation is available for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Microsoft Windows</a>&nbsp;(still works for XP, while only later versions currently officially supported),&nbsp;<a href=\"https://en.wikipedia.org/wiki/MacOS\" title=\"MacOS\">macOS</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Linux\" title=\"Linux\">Linux</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Solaris_(operating_system)\" title=\"Solaris (operating system)\">Solaris</a>. Because Java lacks any formal standardization recognized by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>, ISO/IEC, ANSI, or other third-party standards organization, the Oracle implementation is the&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\">de facto standard</a>.</p>\n\n<p>The Oracle implementation is packaged into two different distributions: The Java Runtime Environment (JRE) which contains the parts of the Java SE platform required to run Java programs and is intended for end users, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Development_Kit\" title=\"Java Development Kit\">Java Development Kit</a>&nbsp;(JDK), which is intended for software developers and includes development tools such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/JAR_(file_format)\" title=\"JAR (file format)\">Jar</a>, and a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Debugger\" title=\"Debugger\">debugger</a>.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/OpenJDK\" title=\"OpenJDK\">OpenJDK</a>&nbsp;is another notable Java SE implementation that is licensed under the GNU GPL. The implementation started when Sun began releasing the Java source code under the GPL. As of Java SE 7, OpenJDK is the official Java reference implementation.</p>\n\n<p>The goal of Java is to make all implementations of Java compatible. Historically, Sun\'s trademark license for usage of the Java brand insists that all implementations be \"compatible\". This resulted in a legal dispute with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft\" title=\"Microsoft\">Microsoft</a>&nbsp;after Sun claimed that the Microsoft implementation did not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" title=\"Java remote method invocation\">RMI</a>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Native_Interface\" title=\"Java Native Interface\">JNI</a>&nbsp;and had added platform-specific features of their own. Sun sued in 1997, and, in 2001, won a settlement of US$20 million, as well as a court order enforcing the terms of the license from Sun.<sup id=\"cite_ref-40\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-40\">[40]</a></sup>&nbsp;As a result, Microsoft no longer ships Java with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Windows</a>.</p>\n\n<p>Platform-independent Java is essential to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a>, and an even more rigorous validation is required to certify an implementation. This environment enables portable server-side applications.</p>\n\n<h4>Performance</h4>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_performance\" title=\"Java performance\">Java performance</a></p>\n\n<p>Programs written in Java have a reputation for being slower and requiring more memory than those written in C++.<sup id=\"cite_ref-41\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-41\">[41]</a></sup><sup id=\"cite_ref-42\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-42\">[42]</a></sup>&nbsp;However, Java programs\' execution speed improved significantly with the introduction of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">just-in-time compilation</a>&nbsp;in 1997/1998 for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 1.1</a>,<sup id=\"cite_ref-43\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-43\">[43]</a></sup>&nbsp;the addition of language features supporting better code analysis (such as inner classes, the StringBuilder class, optional assertions, etc.), and optimizations in the Java virtual machine, such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/HotSpot\" title=\"HotSpot\">HotSpot</a>&nbsp;becoming the default for Sun\'s JVM in 2000. With Java 1.5, the performance was improved with the addition of the java.util.concurrent package, including&nbsp;<a href=\"https://en.wikipedia.org/wiki/Lock_free\" title=\"Lock free\">Lock free</a>&nbsp;implementations of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_ConcurrentMap\" title=\"Java ConcurrentMap\">ConcurrentMaps</a>&nbsp;and other multi-core collections, and it was improved further Java 1.6.</p>\n\n<p>Some platforms offer direct hardware support for Java; there are microcontrollers that can run Java in hardware instead of a software Java virtual machine<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup>, and some&nbsp;<a href=\"https://en.wikipedia.org/wiki/ARM_architecture\" title=\"ARM architecture\">ARM</a>&nbsp;based processors could have hardware support for executing Java bytecode through their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Jazelle\" title=\"Jazelle\">Jazelle</a>&nbsp;option, though support has mostly been dropped in current implementations of ARM.</p>\n\n<h3>Automatic memory management</h3>\n\n<p>Java uses an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)\" title=\"Garbage collection (computer science)\">automatic garbage collector</a>&nbsp;to manage memory in the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_lifetime\" title=\"Object lifetime\">object lifecycle</a>. The programmer determines when objects are created, and the Java runtime is responsible for recovering the memory once objects are no longer in use. Once no references to an object remain, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Unreachable_memory\" title=\"Unreachable memory\">unreachable memory</a>&nbsp;becomes eligible to be freed automatically by the garbage collector. Something similar to a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_leak\" title=\"Memory leak\">memory leak</a>&nbsp;may still occur if a programmer\'s code holds a reference to an object that is no longer needed, typically when objects that are no longer needed are stored in containers that are still in use. If methods for a nonexistent object are called, a \"null pointer exception\" is thrown.<sup id=\"cite_ref-44\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-44\">[44]</a></sup><sup id=\"cite_ref-45\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-45\">[45]</a></sup></p>\n\n<p>One of the ideas behind Java\'s automatic memory management model is that programmers can be spared the burden of having to perform manual memory management. In some languages, memory for the creation of objects is implicitly allocated on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" title=\"Stack (abstract data type)\">stack</a>&nbsp;or explicitly allocated and deallocated from the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_management#DYNAMIC\" title=\"Memory management\">heap</a>. In the latter case, the responsibility of managing memory resides with the programmer. If the program does not deallocate an object, a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_leak\" title=\"Memory leak\">memory leak</a>&nbsp;occurs. If the program attempts to access or deallocate memory that has already been deallocated, the result is undefined and difficult to predict, and the program is likely to become unstable and/or crash. This can be partially remedied by the use of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Smart_pointer\" title=\"Smart pointer\">smart pointers</a>, but these add overhead and complexity. Note that garbage collection does not prevent \"logical\" memory leaks,&nbsp;<i>i.e.</i>, those where the memory is still referenced but never used.</p>\n\n<p>Garbage collection may happen at any time. Ideally, it will occur when a program is idle. It is guaranteed to be triggered if there is insufficient free memory on the heap to allocate a new object; this can cause a program to stall momentarily. Explicit memory management is not possible in Java.</p>\n\n<p>Java does not support C/C++ style&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pointer_(computer_programming)\" title=\"Pointer (computer programming)\">pointer arithmetic</a>, where object addresses and unsigned integers (usually long integers) can be used interchangeably. This allows the garbage collector to relocate referenced objects and ensures type safety and security.</p>\n\n<p>As in C++ and some other object-oriented languages, variables of Java\'s&nbsp;<a href=\"https://en.wikipedia.org/wiki/Primitive_data_type\" title=\"Primitive data type\">primitive data types</a>&nbsp;are either stored directly in fields (for objects) or on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack-based_memory_allocation\" title=\"Stack-based memory allocation\">stack</a>&nbsp;(for methods) rather than on the heap, as is commonly true for non-primitive data types (but see&nbsp;<a href=\"https://en.wikipedia.org/wiki/Escape_analysis\" title=\"Escape analysis\">escape analysis</a>). This was a conscious decision by Java\'s designers for performance reasons.</p>\n\n<p>Java contains multiple types of garbage collectors. By default, HotSpot uses the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Parallel_scavenge_garbage_collector&amp;action=edit&amp;redlink=1\" title=\"Parallel scavenge garbage collector (page does not exist)\">parallel scavenge garbage collector</a>.<sup id=\"cite_ref-46\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-46\">[46]</a></sup>&nbsp;However, there are also several other garbage collectors that can be used to manage the heap. For 90% of applications in Java, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_mark_sweep_collector\" title=\"Concurrent mark sweep collector\">Concurrent Mark-Sweep</a>&nbsp;(CMS) garbage collector is sufficient.<sup id=\"cite_ref-47\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-47\">[47]</a></sup>Oracle aims to replace CMS with the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Garbage-First_collector&amp;action=edit&amp;redlink=1\" title=\"Garbage-First collector (page does not exist)\">Garbage-First collector</a>&nbsp;(G1).<sup id=\"cite_ref-48\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-48\">[48]</a></sup></p>\n\n<h2>Syntax</h2>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_syntax\" title=\"Java syntax\">Java syntax</a></p>\n\n<p>The syntax of Java is largely influenced by&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>. Unlike C++, which combines the syntax for structured, generic, and object-oriented programming, Java was built almost exclusively as an object-oriented language.<sup id=\"cite_ref-design_goals_16-2\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;All code is written inside classes, and every data item is an object, with the exception of the primitive data types, (<i>i.e.</i>&nbsp;integers, floating-point numbers,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Boolean_data_type\" title=\"Boolean data type\">boolean values</a>, and characters), which are not objects for performance reasons. Java reuses some popular aspects of C++ (such as printf() method).</p>\n\n<p>Unlike C++, Java does not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Operator_overloading\" title=\"Operator overloading\">operator overloading</a><sup id=\"cite_ref-msdn_operator_overloading_49-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-msdn_operator_overloading-49\">[49]</a></sup>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Multiple_inheritance\" title=\"Multiple inheritance\">multiple inheritance</a>&nbsp;for&nbsp;<i>classes</i>, though multiple inheritance is supported for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interfaces</a>.<sup id=\"cite_ref-oracle_multiple_inheritance_50-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oracle_multiple_inheritance-50\">[50]</a></sup>&nbsp;This simplifies the language and aids in preventing potential errors and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Anti-pattern\" title=\"Anti-pattern\">anti-pattern</a>&nbsp;design.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup></p>\n\n<p>Java uses comments similar to those of C++. There are three different styles of comments: a single line style marked with two slashes (<code>//</code>), a multiple line style opened with&nbsp;<code>/*</code>&nbsp;and closed with&nbsp;<code>*/</code>, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>&nbsp;commenting style opened with&nbsp;<code>/**</code>&nbsp;and closed with&nbsp;<code>*/</code>. The Javadoc style of commenting allows the user to run the Javadoc executable to create documentation for the program and can be read by some&nbsp;<a href=\"https://en.wikipedia.org/wiki/Integrated_development_environment\" title=\"Integrated development environment\">integrated development environments</a>&nbsp;(IDEs) such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Eclipse_(software)\" title=\"Eclipse (software)\">Eclipse</a>&nbsp;to allow developers to access documentation within the IDE.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n// This is an example of a single line comment using two slashes\n\n/* This is an example of a multiple line comment using the slash and asterisk.\n This type of comment can be used to hold a lot of information or deactivate\n code, but it is very important to remember to close the comment. */\n\npackage fibsandlies;\nimport java.util.HashMap;\n\n/**\n * This is an example of a Javadoc comment; Javadoc can compile documentation\n * from this text. Javadoc comments must immediately precede the class, method, or field being documented.\n */\npublic class FibCalculator extends Fibonacci implements Calculator {\n    private static Map&lt;Integer, Integer&gt; memoized = new HashMap&lt;Integer, Integer&gt;();\n\n    /*\n     * The main method written as follows is used by the JVM as a starting point for the program.\n     */\n    public static void main(String[] args) {\n        memoized.put(1, 1);\n        memoized.put(2, 1);\n        System.out.println(fibonacci(12)); //Get the 12th Fibonacci number and print to console\n    }\n\n    /**\n     * An example of a method written in Java, wrapped in a class.\n     * Given a non-negative number FIBINDEX, returns\n     * the Nth Fibonacci number, where N equals FIBINDEX.\n     * @param fibIndex The index of the Fibonacci number\n     * @return The Fibonacci number\n     */\n    public static int fibonacci(int fibIndex) {\n        if (memoized.containsKey(fibIndex)) {\n            return memoized.get(fibIndex);\n        } else {\n            int answer = fibonacci(fibIndex - 1) + fibonacci(fibIndex - 2);\n            memoized.put(fibIndex, answer);\n            return answer;\n        }\n    }\n}\n</pre>\n\n<h2>\"Hello world\" example</h2>\n\n<p>The traditional&nbsp;<a href=\"https://en.wikipedia.org/wiki/%22Hello,_world!%22_program\" title=\"&quot;Hello, world!&quot; program\">\"Hello, world!\" program</a>&nbsp;can be written in Java as:<sup id=\"cite_ref-51\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-51\">[51]</a></sup></p>\n\n<pre>\nclass HelloWorldApp {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\"); // Prints the string to the console.\n    }\n}</pre>\n\n<p>&nbsp;</p>','Test Test','6/12/2017','6',1),(44475,'<p><b>Java</b>&nbsp;is a general-purpose&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_language\" title=\"Programming language\">computer programming language</a>&nbsp;that is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_computing\" title=\"Concurrent computing\">concurrent</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class-based_programming\" title=\"Class-based programming\">class-based</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" title=\"Object-oriented programming\">object-oriented</a>,<sup id=\"cite_ref-FOOTNOTEGoslingJoySteeleBracha20141_14-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-FOOTNOTEGoslingJoySteeleBracha20141-14\">[14]</a></sup>&nbsp;and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"<a href=\"https://en.wikipedia.org/wiki/Write_once,_run_anywhere\" title=\"Write once, run anywhere\">write once, run anywhere</a>\" (WORA),<sup id=\"cite_ref-15\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-15\">[15]</a></sup>&nbsp;meaning that&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compiled</a>&nbsp;Java code can run on all platforms that support Java without the need for recompilation.<sup id=\"cite_ref-design_goals_16-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;Java applications are typically compiled to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">bytecode</a>&nbsp;that can run on any&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;(JVM) regardless of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_architecture\" title=\"Computer architecture\">computer architecture</a>. As of 2016, Java is one of the most&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">popular programming languages in use</a>,<sup id=\"cite_ref-17\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-17\">[17]</a></sup><sup id=\"cite_ref-18\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-18\">[18]</a></sup><sup id=\"cite_ref-languagepopularity2013_19-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-languagepopularity2013-19\">[19]</a></sup><sup id=\"cite_ref-20\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-20\">[20]</a></sup>&nbsp;particularly for client-server web applications, with a reported 9 million developers.<sup id=\"cite_ref-21\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-21\">[21]</a></sup>&nbsp;Java was originally developed by&nbsp;<a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>&nbsp;at&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;(which has since been&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_acquisition_by_Oracle\" title=\"Sun acquisition by Oracle\">acquired by Oracle Corporation</a>) and released in 1995 as a core component of Sun Microsystems\'&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java platform</a>. The language derives much of its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Syntax_(programming_languages)\" title=\"Syntax (programming languages)\">syntax</a>&nbsp;from&nbsp;<a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\" title=\"C (programming language)\">C</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>, but it has fewer&nbsp;<a href=\"https://en.wikipedia.org/wiki/Low-level_programming_language\" title=\"Low-level programming language\">low-level</a>&nbsp;facilities than either of them.</p>\n\n<p>The original and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Reference_implementation\" title=\"Reference implementation\">reference implementation</a>&nbsp;Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compilers</a>, virtual machines, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Library_(computing)\" title=\"Library (computing)\">class libraries</a>&nbsp;were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>, Sun&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_relicensing\" title=\"Software relicensing\">relicensed</a>&nbsp;most of its Java technologies under the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>. Others have also developed alternative implementations of these Sun technologies, such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Compiler_for_Java\" title=\"GNU Compiler for Java\">GNU Compiler for Java</a>&nbsp;(bytecode compiler),&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Classpath\" title=\"GNU Classpath\">GNU Classpath</a>&nbsp;(standard libraries), and&nbsp;<a href=\"https://en.wikipedia.org/wiki/IcedTea\" title=\"IcedTea\">IcedTea</a>-Web (browser plugin for applets).</p>\n\n<p>The latest version is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 8</a>&nbsp;which is the only version currently supported for free by Oracle, although earlier versions are supported both by Oracle and other companies on a commercial basis.</p>\n\n<h2>Contents</h2>\n\n<p>&nbsp;&nbsp;[<a role=\"button\" tabindex=\"0\">hide</a>]&nbsp;</p>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#History\">1History</a>\n\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Principles\">1.1Principles</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Versions\">1.2Versions</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Practices\">2Practices</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Java_platform\">2.1Java platform</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Implementations\">2.1.1Implementations</a></li>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Performance\">2.1.2Performance</a></li>\n		</ul>\n		</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Automatic_memory_management\">2.2Automatic memory management</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Syntax\">3Syntax</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#.22Hello_world.22_example\">4\"Hello world\" example</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Special_classes\">5Special classes</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Applet\">5.1Applet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Servlet\">5.2Servlet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#JavaServer_Pages\">5.3JavaServer Pages</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Swing_application\">5.4Swing application</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Generics\">5.5Generics</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Criticism\">6Criticism</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Use_outside_of_the_Java_platform\">7Use outside of the Java platform</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Android\">7.1Android</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Controversy\">7.1.1Controversy</a></li>\n		</ul>\n		</li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Class_libraries\">8Class libraries</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Documentation\">9Documentation</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Editions\">10Editions</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#See_also\">11See also</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Comparison_of_Java_with_other_languages\">11.1Comparison of Java with other languages</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Notes\">12Notes</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#References\">13References</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#External_links\">14External links</a></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h2>History</h2>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)#History\" title=\"Java (software platform)\">Java (software platform) §&nbsp;History</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Duke_(Java_mascot)_waving.svg\"><img alt=\"\" data-file-height=\"407\" data-file-width=\"226\" height=\"306\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/170px-Duke_%28Java_mascot%29_waving.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/255px-Duke_%28Java_mascot%29_waving.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/340px-Duke_%28Java_mascot%29_waving.svg.png 2x\" width=\"170\" /></a></p>\n\n<p>Duke, the Java mascot</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:James_Gosling_2008.jpg\"><img alt=\"\" data-file-height=\"1469\" data-file-width=\"1460\" height=\"221\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/220px-James_Gosling_2008.jpg\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/330px-James_Gosling_2008.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/440px-James_Gosling_2008.jpg 2x\" width=\"220\" /></a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, the creator of Java (2008)</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Tiobeindex.png\"><img alt=\"\" data-file-height=\"426\" data-file-width=\"704\" height=\"133\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/220px-Tiobeindex.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/330px-Tiobeindex.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/440px-Tiobeindex.png 2x\" width=\"220\" /></a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/TIOBE_index\" title=\"TIOBE index\">TIOBE</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">programming language popularity index</a>&nbsp;graph from 2002 to 2015. Over the course of a decade Java (blue) and C (black) competing for the top position.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, Mike Sheridan, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Patrick_Naughton\" title=\"Patrick Naughton\">Patrick Naughton</a>&nbsp;initiated the Java language project in June 1991.<sup id=\"cite_ref-22\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-22\">[22]</a></sup>&nbsp;Java was originally designed for interactive television, but it was too advanced for the digital cable television industry at the time.<sup id=\"cite_ref-23\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-23\">[23]</a></sup>&nbsp;The language was initially called&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Oak_(programming_language)\" title=\"Oak (programming language)\">Oak</a></i>&nbsp;after an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oak\" title=\"Oak\">oak</a>&nbsp;tree that stood outside Gosling\'s office. Later the project went by the name&nbsp;<i>Green</i>&nbsp;and was finally renamed&nbsp;<i>Java</i>, from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_coffee\" title=\"Java coffee\">Java coffee</a>.<sup id=\"cite_ref-24\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-24\">[24]</a></sup>&nbsp;Gosling designed Java with a C/C++-style syntax that system and application programmers would find familiar.<sup id=\"cite_ref-25\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-25\">[25]</a></sup></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;released the first public implementation as Java 1.0 in 1995.<sup id=\"cite_ref-oraclejavahistory_26-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oraclejavahistory-26\">[26]</a></sup>&nbsp;It promised \"Write Once, Run Anywhere\" (WORA), providing no-cost run-times on popular&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computing_platform\" title=\"Computing platform\">platforms</a>. Fairly secure and featuring configurable security, it allowed network- and file-access restrictions. Major&nbsp;<a href=\"https://en.wikipedia.org/wiki/Web_browser\" title=\"Web browser\">web browsers</a>&nbsp;soon incorporated the ability to run&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">Java applets</a></i>&nbsp;within web pages, and Java quickly became popular. The Java 1.0 compiler was re-written&nbsp;<a href=\"https://en.wikipedia.org/wiki/Bootstrapping_(compilers)\" title=\"Bootstrapping (compilers)\">in Java</a>&nbsp;by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Arthur_van_Hoff\" title=\"Arthur van Hoff\">Arthur van Hoff</a>&nbsp;to comply strictly with the Java 1.0 language specification.<sup id=\"cite_ref-27\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-27\">[27]</a></sup>&nbsp;With the advent of&nbsp;<i>Java 2</i>&nbsp;(released initially as J2SE 1.2 in December 1998 – 1999), new versions had multiple configurations built for different types of platforms.&nbsp;<i>J2EE</i>&nbsp;included technologies and APIs for enterprise applications typically run in server environments, while&nbsp;<i>J2ME</i>&nbsp;featured APIs optimized for mobile applications. The desktop version was renamed&nbsp;<i>J2SE</i>. In 2006, for marketing purposes, Sun renamed new&nbsp;<i>J2</i>&nbsp;versions as&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a></i>,&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition\" title=\"Java Platform, Micro Edition\">Java ME</a></i>, and&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition\" title=\"Java Platform, Standard Edition\">Java SE</a></i>, respectively.</p>\n\n<p>In 1997, Sun Microsystems approached the&nbsp;<a href=\"https://en.wikipedia.org/wiki/ISO/IEC_JTC_1\" title=\"ISO/IEC JTC 1\">ISO/IEC JTC 1</a>&nbsp;standards body and later the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>&nbsp;to formalize Java, but it soon withdrew from the process.<sup id=\"cite_ref-28\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-28\">[28]</a></sup><sup id=\"cite_ref-29\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-29\">[29]</a></sup><sup id=\"cite_ref-30\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-30\">[30]</a></sup>&nbsp;Java remains a&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\"><i>de facto</i>&nbsp;standard</a>, controlled through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>.<sup id=\"cite_ref-31\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-31\">[31]</a></sup>At one time, Sun made most of its Java implementations available without charge, despite their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Proprietary_software\" title=\"Proprietary software\">proprietary software</a>&nbsp;status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System.</p>\n\n<p>On November 13, 2006, Sun released much of its Java virtual machine (JVM) as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_and_open-source_software\" title=\"Free and open-source software\">free and open-source software</a>, (FOSS), under the terms of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>&nbsp;(GPL). On May 8, 2007, Sun finished the process, making all of its JVM\'s core code available under&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_software\" title=\"Free software\">free software</a>/open-source distribution terms, aside from a small portion of code to which Sun did not hold the copyright.<sup id=\"cite_ref-32\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-32\">[32]</a></sup></p>\n\n<p>Sun\'s vice-president Rich Green said that Sun\'s ideal role with regard to Java was as an \"evangelist\".<sup id=\"cite_ref-33\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-33\">[33]</a></sup>&nbsp;Following&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>\'s acquisition of Sun Microsystems in 2009–10, Oracle has described itself as the \"steward of Java technology with a relentless commitment to fostering a community of participation and transparency\".<sup id=\"cite_ref-34\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-34\">[34]</a></sup>&nbsp;This did not prevent Oracle from filing a lawsuit against Google shortly after that for using Java inside the Android SDK (see Google section below). Java software runs on everything from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Laptop\" title=\"Laptop\">laptops</a>&nbsp;to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_center\" title=\"Data center\">data centers</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Video_game_console\" title=\"Video game console\">game consoles</a>&nbsp;to scientific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Supercomputer\" title=\"Supercomputer\">supercomputers</a>.<sup id=\"cite_ref-35\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-35\">[35]</a></sup>&nbsp;On April 2, 2010, James Gosling resigned from Oracle.<sup id=\"cite_ref-36\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-36\">[36]</a></sup></p>\n\n<p>In January 2016, Oracle announced that Java runtime environments based on JDK 9 will discontinue the browser plugin.<sup id=\"cite_ref-37\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-37\">[37]</a></sup></p>\n\n<h3>Principles</h3>\n\n<p>There were five primary goals in the creation of the Java language:<sup id=\"cite_ref-design_goals_16-1\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup></p>\n\n<ol>\n	<li>It must be \"simple, object-oriented, and familiar\".</li>\n	<li>It must be \"robust and secure\".</li>\n	<li>It must be \"architecture-neutral and portable\".</li>\n	<li>It must execute with \"high performance\".</li>\n	<li>It must be \"interpreted, threaded, and dynamic\".</li>\n</ol>\n\n<h3>Versions</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java version history</a></p>\n\n<p>As of 2015, only Java 8 is officially supported. Major release versions of Java, along with their release dates:</p>\n\n<ul>\n	<li>JDK 1.0 (January 23, 1996)<sup id=\"cite_ref-38\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-38\">[38]</a></sup></li>\n	<li>JDK 1.1 (February 19, 1997)</li>\n	<li>J2SE 1.2 (December 8, 1998)</li>\n	<li>J2SE 1.3 (May 8, 2000)</li>\n	<li>J2SE 1.4 (February 6, 2002)</li>\n	<li>J2SE 5.0 (September 30, 2004)</li>\n	<li>Java SE 6 (December 11, 2006)</li>\n	<li>Java SE 7 (July 28, 2011)</li>\n	<li>Java SE 8 (March 18, 2014)</li>\n</ul>\n\n<h2>Practices</h2>\n\n<h3>Java platform</h3>\n\n<p>Main articles:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java (software platform)</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a></p>\n\n<p>One design goal of Java is portability, which means that programs written for the Java platform must run similarly on any combination of hardware and operating system with adequate runtime support. This is achieved by compiling the Java language code to an intermediate representation called&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>, instead of directly to architecture-specific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Machine_code\" title=\"Machine code\">machine code</a>. Java bytecode instructions are analogous to machine code, but they are intended to be executed by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Virtual_machine\" title=\"Virtual machine\">virtual machine</a>&nbsp;(VM) written specifically for the host hardware.&nbsp;<a href=\"https://en.wikipedia.org/wiki/End_user\" title=\"End user\">End users</a>&nbsp;commonly use a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java Runtime Environment</a>&nbsp;(JRE) installed on their own machine for standalone Java applications, or in a web browser for Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Applet\" title=\"Applet\">applets</a>.</p>\n\n<p>Standard libraries provide a generic way to access host-specific features such as graphics,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Thread_(computing)\" title=\"Thread (computing)\">threading</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_network\" title=\"Computer network\">networking</a>.</p>\n\n<p>The use of universal bytecode makes porting simple. However, the overhead of interpreting bytecode into machine instructions made interpreted programs almost always run more slowly than native&nbsp;<a href=\"https://en.wikipedia.org/wiki/Executable\" title=\"Executable\">executables</a>.&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">Just-in-time</a>&nbsp;(JIT) compilers that compile bytecodes to machine code during runtime were introduced from an early stage. Java itself is platform-independent and is adapted to the particular platform it is to run on by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;for it, which translates the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>&nbsp;into the platform\'s machine language.<sup id=\"cite_ref-39\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-39\">[39]</a></sup></p>\n\n<h4>Implementations</h4>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_Java_implementations\" title=\"Free Java implementations\">Free Java implementations</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>&nbsp;is the current owner of the official implementation of the Java SE platform, following their acquisition of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;on January 27, 2010. This implementation is based on the original implementation of Java by Sun. The Oracle implementation is available for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Microsoft Windows</a>&nbsp;(still works for XP, while only later versions currently officially supported),&nbsp;<a href=\"https://en.wikipedia.org/wiki/MacOS\" title=\"MacOS\">macOS</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Linux\" title=\"Linux\">Linux</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Solaris_(operating_system)\" title=\"Solaris (operating system)\">Solaris</a>. Because Java lacks any formal standardization recognized by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>, ISO/IEC, ANSI, or other third-party standards organization, the Oracle implementation is the&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\">de facto standard</a>.</p>\n\n<p>The Oracle implementation is packaged into two different distributions: The Java Runtime Environment (JRE) which contains the parts of the Java SE platform required to run Java programs and is intended for end users, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Development_Kit\" title=\"Java Development Kit\">Java Development Kit</a>&nbsp;(JDK), which is intended for software developers and includes development tools such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/JAR_(file_format)\" title=\"JAR (file format)\">Jar</a>, and a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Debugger\" title=\"Debugger\">debugger</a>.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/OpenJDK\" title=\"OpenJDK\">OpenJDK</a>&nbsp;is another notable Java SE implementation that is licensed under the GNU GPL. The implementation started when Sun began releasing the Java source code under the GPL. As of Java SE 7, OpenJDK is the official Java reference implementation.</p>\n\n<p>The goal of Java is to make all implementations of Java compatible. Historically, Sun\'s trademark license for usage of the Java brand insists that all implementations be \"compatible\". This resulted in a legal dispute with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft\" title=\"Microsoft\">Microsoft</a>&nbsp;after Sun claimed that the Microsoft implementation did not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" title=\"Java remote method invocation\">RMI</a>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Native_Interface\" title=\"Java Native Interface\">JNI</a>&nbsp;and had added platform-specific features of their own. Sun sued in 1997, and, in 2001, won a settlement of US$20 million, as well as a court order enforcing the terms of the license from Sun.<sup id=\"cite_ref-40\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-40\">[40]</a></sup>&nbsp;As a result, Microsoft no longer ships Java with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Windows</a>.</p>\n\n<p>Platform-independent Java is essential to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a>, and an even more rigorous validation is required to certify an implementation. This environment enables portable server-side applications.</p>\n\n<h4>Performance</h4>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_performance\" title=\"Java performance\">Java performance</a></p>\n\n<p>Programs written in Java have a reputation for being slower and requiring more memory than those written in C++.<sup id=\"cite_ref-41\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-41\">[41]</a></sup><sup id=\"cite_ref-42\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-42\">[42]</a></sup>&nbsp;However, Java programs\' execution speed improved significantly with the introduction of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">just-in-time compilation</a>&nbsp;in 1997/1998 for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 1.1</a>,<sup id=\"cite_ref-43\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-43\">[43]</a></sup>&nbsp;the addition of language features supporting better code analysis (such as inner classes, the StringBuilder class, optional assertions, etc.), and optimizations in the Java virtual machine, such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/HotSpot\" title=\"HotSpot\">HotSpot</a>&nbsp;becoming the default for Sun\'s JVM in 2000. With Java 1.5, the performance was improved with the addition of the java.util.concurrent package, including&nbsp;<a href=\"https://en.wikipedia.org/wiki/Lock_free\" title=\"Lock free\">Lock free</a>&nbsp;implementations of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_ConcurrentMap\" title=\"Java ConcurrentMap\">ConcurrentMaps</a>&nbsp;and other multi-core collections, and it was improved further Java 1.6.</p>\n\n<p>Some platforms offer direct hardware support for Java; there are microcontrollers that can run Java in hardware instead of a software Java virtual machine<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup>, and some&nbsp;<a href=\"https://en.wikipedia.org/wiki/ARM_architecture\" title=\"ARM architecture\">ARM</a>&nbsp;based processors could have hardware support for executing Java bytecode through their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Jazelle\" title=\"Jazelle\">Jazelle</a>&nbsp;option, though support has mostly been dropped in current implementations of ARM.</p>\n\n<h3>Automatic memory management</h3>\n\n<p>Java uses an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)\" title=\"Garbage collection (computer science)\">automatic garbage collector</a>&nbsp;to manage memory in the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_lifetime\" title=\"Object lifetime\">object lifecycle</a>. The programmer determines when objects are created, and the Java runtime is responsible for recovering the memory once objects are no longer in use. Once no references to an object remain, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Unreachable_memory\" title=\"Unreachable memory\">unreachable memory</a>&nbsp;becomes eligible to be freed automatically by the garbage collector. Something similar to a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_leak\" title=\"Memory leak\">memory leak</a>&nbsp;may still occur if a programmer\'s code holds a reference to an object that is no longer needed, typically when objects that are no longer needed are stored in containers that are still in use. If methods for a nonexistent object are called, a \"null pointer exception\" is thrown.<sup id=\"cite_ref-44\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-44\">[44]</a></sup><sup id=\"cite_ref-45\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-45\">[45]</a></sup></p>\n\n<p>One of the ideas behind Java\'s automatic memory management model is that programmers can be spared the burden of having to perform manual memory management. In some languages, memory for the creation of objects is implicitly allocated on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" title=\"Stack (abstract data type)\">stack</a>&nbsp;or explicitly allocated and deallocated from the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_management#DYNAMIC\" title=\"Memory management\">heap</a>. In the latter case, the responsibility of managing memory resides with the programmer. If the program does not deallocate an object, a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_leak\" title=\"Memory leak\">memory leak</a>&nbsp;occurs. If the program attempts to access or deallocate memory that has already been deallocated, the result is undefined and difficult to predict, and the program is likely to become unstable and/or crash. This can be partially remedied by the use of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Smart_pointer\" title=\"Smart pointer\">smart pointers</a>, but these add overhead and complexity. Note that garbage collection does not prevent \"logical\" memory leaks,&nbsp;<i>i.e.</i>, those where the memory is still referenced but never used.</p>\n\n<p>Garbage collection may happen at any time. Ideally, it will occur when a program is idle. It is guaranteed to be triggered if there is insufficient free memory on the heap to allocate a new object; this can cause a program to stall momentarily. Explicit memory management is not possible in Java.</p>\n\n<p>Java does not support C/C++ style&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pointer_(computer_programming)\" title=\"Pointer (computer programming)\">pointer arithmetic</a>, where object addresses and unsigned integers (usually long integers) can be used interchangeably. This allows the garbage collector to relocate referenced objects and ensures type safety and security.</p>\n\n<p>As in C++ and some other object-oriented languages, variables of Java\'s&nbsp;<a href=\"https://en.wikipedia.org/wiki/Primitive_data_type\" title=\"Primitive data type\">primitive data types</a>&nbsp;are either stored directly in fields (for objects) or on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack-based_memory_allocation\" title=\"Stack-based memory allocation\">stack</a>&nbsp;(for methods) rather than on the heap, as is commonly true for non-primitive data types (but see&nbsp;<a href=\"https://en.wikipedia.org/wiki/Escape_analysis\" title=\"Escape analysis\">escape analysis</a>). This was a conscious decision by Java\'s designers for performance reasons.</p>\n\n<p>Java contains multiple types of garbage collectors. By default, HotSpot uses the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Parallel_scavenge_garbage_collector&amp;action=edit&amp;redlink=1\" title=\"Parallel scavenge garbage collector (page does not exist)\">parallel scavenge garbage collector</a>.<sup id=\"cite_ref-46\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-46\">[46]</a></sup>&nbsp;However, there are also several other garbage collectors that can be used to manage the heap. For 90% of applications in Java, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_mark_sweep_collector\" title=\"Concurrent mark sweep collector\">Concurrent Mark-Sweep</a>&nbsp;(CMS) garbage collector is sufficient.<sup id=\"cite_ref-47\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-47\">[47]</a></sup>Oracle aims to replace CMS with the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Garbage-First_collector&amp;action=edit&amp;redlink=1\" title=\"Garbage-First collector (page does not exist)\">Garbage-First collector</a>&nbsp;(G1).<sup id=\"cite_ref-48\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-48\">[48]</a></sup></p>\n\n<h2>Syntax</h2>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_syntax\" title=\"Java syntax\">Java syntax</a></p>\n\n<p>The syntax of Java is largely influenced by&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>. Unlike C++, which combines the syntax for structured, generic, and object-oriented programming, Java was built almost exclusively as an object-oriented language.<sup id=\"cite_ref-design_goals_16-2\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;All code is written inside classes, and every data item is an object, with the exception of the primitive data types, (<i>i.e.</i>&nbsp;integers, floating-point numbers,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Boolean_data_type\" title=\"Boolean data type\">boolean values</a>, and characters), which are not objects for performance reasons. Java reuses some popular aspects of C++ (such as printf() method).</p>\n\n<p>Unlike C++, Java does not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Operator_overloading\" title=\"Operator overloading\">operator overloading</a><sup id=\"cite_ref-msdn_operator_overloading_49-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-msdn_operator_overloading-49\">[49]</a></sup>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Multiple_inheritance\" title=\"Multiple inheritance\">multiple inheritance</a>&nbsp;for&nbsp;<i>classes</i>, though multiple inheritance is supported for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interfaces</a>.<sup id=\"cite_ref-oracle_multiple_inheritance_50-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oracle_multiple_inheritance-50\">[50]</a></sup>&nbsp;This simplifies the language and aids in preventing potential errors and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Anti-pattern\" title=\"Anti-pattern\">anti-pattern</a>&nbsp;design.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup></p>\n\n<p>Java uses comments similar to those of C++. There are three different styles of comments: a single line style marked with two slashes (<code>//</code>), a multiple line style opened with&nbsp;<code>/*</code>&nbsp;and closed with&nbsp;<code>*/</code>, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>&nbsp;commenting style opened with&nbsp;<code>/**</code>&nbsp;and closed with&nbsp;<code>*/</code>. The Javadoc style of commenting allows the user to run the Javadoc executable to create documentation for the program and can be read by some&nbsp;<a href=\"https://en.wikipedia.org/wiki/Integrated_development_environment\" title=\"Integrated development environment\">integrated development environments</a>&nbsp;(IDEs) such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Eclipse_(software)\" title=\"Eclipse (software)\">Eclipse</a>&nbsp;to allow developers to access documentation within the IDE.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n// This is an example of a single line comment using two slashes\n\n/* This is an example of a multiple line comment using the slash and asterisk.\n This type of comment can be used to hold a lot of information or deactivate\n code, but it is very important to remember to close the comment. */\n\npackage fibsandlies;\nimport java.util.HashMap;\n\n/**\n * This is an example of a Javadoc comment; Javadoc can compile documentation\n * from this text. Javadoc comments must immediately precede the class, method, or field being documented.\n */\npublic class FibCalculator extends Fibonacci implements Calculator {\n    private static Map&lt;Integer, Integer&gt; memoized = new HashMap&lt;Integer, Integer&gt;();\n\n    /*\n     * The main method written as follows is used by the JVM as a starting point for the program.\n     */\n    public static void main(String[] args) {\n        memoized.put(1, 1);\n        memoized.put(2, 1);\n        System.out.println(fibonacci(12)); //Get the 12th Fibonacci number and print to console\n    }\n\n    /**\n     * An example of a method written in Java, wrapped in a class.\n     * Given a non-negative number FIBINDEX, returns\n     * the Nth Fibonacci number, where N equals FIBINDEX.\n     * @param fibIndex The index of the Fibonacci number\n     * @return The Fibonacci number\n     */\n    public static int fibonacci(int fibIndex) {\n        if (memoized.containsKey(fibIndex)) {\n            return memoized.get(fibIndex);\n        } else {\n            int answer = fibonacci(fibIndex - 1) + fibonacci(fibIndex - 2);\n            memoized.put(fibIndex, answer);\n            return answer;\n        }\n    }\n}\n</pre>\n\n<h2>\"Hello world\" example</h2>\n\n<p>The traditional&nbsp;<a href=\"https://en.wikipedia.org/wiki/%22Hello,_world!%22_program\" title=\"&quot;Hello, world!&quot; program\">\"Hello, world!\" program</a>&nbsp;can be written in Java as:<sup id=\"cite_ref-51\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-51\">[51]</a></sup></p>\n\n<pre>\nclass HelloWorldApp {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\"); // Prints the string to the console.\n    }\n}</pre>\n\n<p>Source files must be named after the public class they contain, appending the suffix&nbsp;<code>.java</code>, for example,&nbsp;<code>HelloWorldApp.java</code>. It must first be compiled into bytecode, using a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>, producing a file named&nbsp;<code>HelloWorldApp.class</code>. Only then can it be executed, or \"launched\". The Java source file may only contain one public class, but it can contain multiple classes with other than public access and any number of public&nbsp;<a href=\"https://en.wikipedia.org/wiki/Inner_class\" title=\"Inner class\">inner classes</a>. When the source file contains multiple classes, make one class \"public\" and name the source file with that public class name.</p>\n\n<p>A&nbsp;<code><b>class</b></code>&nbsp;that is not declared&nbsp;<code><b>public</b></code>&nbsp;may be stored in any .java file. The compiler will generate a class file for each class defined in the source file. The name of the class file is the name of the class, with&nbsp;<i>.class</i>&nbsp;appended. For class file generation,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class_(computer_programming)#Unnamed\" title=\"Class (computer programming)\">anonymous classes</a>&nbsp;are treated as if their name were the concatenation of the name of their enclosing class, a&nbsp;<i>$</i>, and an integer.</p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/List_of_Java_keywords\" title=\"List of Java keywords\">keyword</a>&nbsp;<code><b>public</b></code>&nbsp;denotes that a method can be called from code in other classes, or that a class may be used by classes outside the class hierarchy. The class hierarchy is related to the name of the directory in which the .java file is located. This is called an access level modifier. Other access level modifiers include the keywords&nbsp;<code><b>private</b></code>&nbsp;and&nbsp;<code><b>protected</b></code>.</p>\n\n<p>The keyword&nbsp;<code><b>static</b></code>&nbsp;in front of a method indicates a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Method_(computer_programming)#Static_methods\" title=\"Method (computer programming)\">static method</a>, which is associated only with the class and not with any specific instance of that class. Only static methods can be invoked without a reference to an object. Static methods cannot access any class members that are not also static. Methods that are not designated static are instance methods and require a specific instance of a class to operate.</p>\n\n<p>The keyword&nbsp;<code><b>void</b></code>&nbsp;indicates that the main method does not return any value to the caller. If a Java program is to exit with an error code, it must call System.exit() explicitly.</p>\n\n<p>The method name \"<code>main</code>\" is not a keyword in the Java language. It is simply the name of the method the Java launcher calls to pass control to the program. Java classes that run in managed environments such as applets and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Enterprise_JavaBeans\" title=\"Enterprise JavaBeans\">Enterprise JavaBeans</a>&nbsp;do not use or need a&nbsp;<code>main()</code>&nbsp;method. A Java program may contain multiple classes that have&nbsp;<code>main</code>&nbsp;methods, which means that the VM needs to be explicitly told which class to launch from.</p>\n\n<p>The main method must accept an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Array_data_type\" title=\"Array data type\">array</a>&nbsp;of&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\" rel=\"nofollow\">String</a></code></b>&nbsp;objects. By convention, it is referenced as&nbsp;<code><b>args</b></code>&nbsp;although any other legal identifier name can be used. Since Java 5, the main method can also use&nbsp;<a href=\"https://en.wikipedia.org/wiki/Variadic_function\" title=\"Variadic function\">variable arguments</a>, in the form of&nbsp;<code>public static void main(String... args)</code>, allowing the main method to be invoked with an arbitrary number of&nbsp;<code>String</code>&nbsp;arguments. The effect of this alternate declaration is semantically identical (the&nbsp;<code>args</code>&nbsp;parameter is still an array of&nbsp;<code>String</code>&nbsp;objects), but it allows an alternative syntax for creating and passing the array.</p>\n\n<p>The Java launcher launches Java by loading a given class (specified on the command line or as an attribute in a&nbsp;<a href=\"https://en.wikipedia.org/wiki/JAR_(file_format)\" title=\"JAR (file format)\">JAR</a>) and starting its&nbsp;<code>public static void main(String[])</code>&nbsp;method. Stand-alone programs must declare this method explicitly. The&nbsp;<code>String[] args</code>&nbsp;parameter is an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Array_data_type\" title=\"Array data type\">array</a>&nbsp;of&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\" rel=\"nofollow\">String</a></code>&nbsp;objects containing any arguments passed to the class. The parameters to&nbsp;<code>main</code>&nbsp;are often passed by means of a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Command-line_interface\" title=\"Command-line interface\">command line</a>.</p>\n\n<p>Printing is part of a Java standard library: The&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/System.html\" rel=\"nofollow\">System</a></code></b>&nbsp;class defines a public static field called&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#out\" rel=\"nofollow\">out</a></code></b>. The&nbsp;<code>out</code>&nbsp;object is an instance of the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html\" rel=\"nofollow\">PrintStream</a></code>class and provides many methods for printing data to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Standard_streams\" title=\"Standard streams\">standard out</a>, including&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html#println(java.lang.String)\" rel=\"nofollow\">println(String)</a></code></b>&nbsp;which also appends a new line to the passed string.</p>\n\n<p>The string \"Hello World!\" is automatically converted to a String object by the compiler.</p>\n\n<h2>Special classes</h2>\n\n<table role=\"presentation\">\n	<tbody>\n		<tr>\n			<td>\n			<p><img alt=\"\" data-file-height=\"40\" data-file-width=\"40\" height=\"40\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/40px-Ambox_important.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/60px-Ambox_important.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/80px-Ambox_important.svg.png 2x\" width=\"40\" /></p>\n			</td>\n			<td>This section&nbsp;<b>contains&nbsp;<a href=\"https://en.wikipedia.org/wiki/Wikipedia:What_Wikipedia_is_not#NOTHOWTO\" title=\"Wikipedia:What Wikipedia is not\">instructions, advice, or how-to content</a></b>.&nbsp;The purpose of Wikipedia is to present facts, not to train. Please help&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Java_(programming_language)&amp;action=edit\">improve this article</a>&nbsp;either by rewriting the how-to content or by&nbsp;<a href=\"https://meta.wikimedia.org/wiki/Help:Transwiki\" title=\"m:Help:Transwiki\">moving</a>&nbsp;it to&nbsp;<a href=\"https://en.wikiversity.org/wiki/\" title=\"v:\">Wikiversity</a>,&nbsp;<a href=\"https://en.wikibooks.org/wiki/\" title=\"b:\">Wikibooks</a>&nbsp;or&nbsp;<a href=\"https://en.wikivoyage.org/wiki/\" title=\"voy:\">Wikivoyage</a>.&nbsp;<small><i>(January 2012)</i></small></td>\n		</tr>\n	</tbody>\n</table>\n\n<h3>Applet</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">Java applet</a></p>\n\n<p>Java applets are programs that are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Embedded_system#Embedded_software_architectures\" title=\"Embedded system\">embedded</a>&nbsp;in other applications, typically in a Web page displayed in a web browser.</p>\n\n<pre>\n// Hello.java\nimport javax.swing.JApplet;\nimport java.awt.Graphics;\n\npublic class Hello extends JApplet {\n    public void paintComponent(final Graphics g) {\n        g.drawString(\"Hello, world!\", 65, 95);\n    }\n}\n</pre>\n\n<p>The&nbsp;<code><b>import</b></code>&nbsp;statements direct the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>&nbsp;to include the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JApplet.html\" rel=\"nofollow\">javax.swing.JApplet</a></code></b>&nbsp;and&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Graphics.html\" rel=\"nofollow\">java.awt.Graphics</a></code></b>&nbsp;classes in the compilation. The import statement allows these classes to be referenced in the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Source_code\" title=\"Source code\">source code</a>&nbsp;using the&nbsp;<i>simple class name</i>&nbsp;(i.e.&nbsp;<code>JApplet</code>) instead of the&nbsp;<i>fully qualified class name</i>&nbsp;(<i>FQCN</i>, i.e.&nbsp;<code>javax.swing.JApplet</code>).</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class&nbsp;<code><b>extends</b></code>&nbsp;(<a href=\"https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)#Subclasses_and_superclasses\" title=\"Inheritance (object-oriented programming)\">subclasses</a>) the&nbsp;<code><b>JApplet</b></code>&nbsp;(Java Applet) class; the&nbsp;<code>JApplet</code>&nbsp;class provides the framework for the host application to display and control the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_lifetime\" title=\"Object lifetime\">lifecycle</a>&nbsp;of the applet. The&nbsp;<code>JApplet</code>&nbsp;class is a JComponent (Java Graphical Component) which provides the applet with the capability to display a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_user_interface\" title=\"Graphical user interface\">graphical user interface</a>&nbsp;(GUI) and respond to user&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event-driven_programming\" title=\"Event-driven programming\">events</a>.</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class&nbsp;<a href=\"https://en.wikipedia.org/wiki/Method_overriding\" title=\"Method overriding\">overrides</a>&nbsp;the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#paint(java.awt.Graphics)\" rel=\"nofollow\">paintComponent(Graphics)</a></code></b>&nbsp;method (additionally indicated with the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_annotation\" title=\"Java annotation\">annotation</a>, supported as of JDK 1.5,&nbsp;<code>Override</code>) inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html\" rel=\"nofollow\">Container</a></code>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)#Subclasses_and_superclasses\" title=\"Inheritance (object-oriented programming)\">superclass</a>&nbsp;to provide the code to display the applet. The&nbsp;<code>paintComponent()</code>&nbsp;method is passed a&nbsp;<code><b>Graphics</b></code>&nbsp;object that contains the graphic context used to display the applet. The&nbsp;<code>paintComponent()</code>&nbsp;method calls the graphic context&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Graphics.html#drawString(java.lang.String,%20int,%20int)\" rel=\"nofollow\">drawString(String, int, int)</a></code></b>&nbsp;method to display the&nbsp;<b>\"Hello, world!\"</b>&nbsp;string at a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pixel\" title=\"Pixel\">pixel</a>&nbsp;offset of (<code><b>65, 95</b></code>) from the upper-left corner in the applet\'s display.</p>\n\n<pre>\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n&lt;!-- Hello.html --&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Hello World Applet&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;applet code=\"Hello.class\" width=\"200\" height=\"200\"&gt;\n        &lt;/applet&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>An applet is placed in an&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;document using the&nbsp;<b><code>&lt;applet&gt;</code></b>&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML_element\" title=\"HTML element\">HTML element</a>. The&nbsp;<code>applet</code>&nbsp;tag has three attributes set:&nbsp;<b><code>code=\"Hello\"</code></b>&nbsp;specifies the name of the&nbsp;<code>JApplet</code>&nbsp;class and&nbsp;<b><code>width=\"200\" height=\"200\"</code></b>&nbsp;sets the pixel width and height of the applet. Applets may also be embedded in HTML using either the&nbsp;<code>object</code>&nbsp;or&nbsp;<code>embed</code>&nbsp;element,<sup id=\"cite_ref-52\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-52\">[52]</a></sup>&nbsp;although support for these elements by web browsers is inconsistent.<sup id=\"cite_ref-53\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-53\">[53]</a></sup>&nbsp;However, the&nbsp;<code>applet</code>&nbsp;tag is deprecated, so the&nbsp;<code>object</code>&nbsp;tag is preferred where supported.</p>\n\n<p>The host application, typically a Web browser, instantiates the&nbsp;<b><code>Hello</code></b>&nbsp;applet and creates an&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/applet/AppletContext.html\" rel=\"nofollow\">AppletContext</a></code>&nbsp;for the applet. Once the applet has initialized itself, it is added to the AWT display hierarchy. The&nbsp;<code>paintComponent()</code>&nbsp;method is called by the AWT&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event_dispatching_thread\" title=\"Event dispatching thread\">event dispatching thread</a>&nbsp;whenever the display needs the applet to draw itself.</p>\n\n<h3>Servlet</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Servlet\" title=\"Java Servlet\">Java Servlet</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Java_Servlet\" title=\"Java Servlet\">Java Servlet</a>&nbsp;technology provides Web developers with a simple, consistent mechanism for extending the functionality of a Web server and for accessing existing business systems. Servlets are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Server-side\" title=\"Server-side\">server-side</a>&nbsp;Java EE components that generate responses (typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;pages) to requests (typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" title=\"Hypertext Transfer Protocol\">HTTP</a>&nbsp;requests) from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Client_(computing)\" title=\"Client (computing)\">clients</a>. A servlet can almost be thought of as an applet that runs on the server side—without a face.</p>\n\n<pre>\n// Hello.java\nimport java.io.*;\nimport javax.servlet.*;\n\npublic class Hello extends GenericServlet {\n    public void service(final ServletRequest request, final ServletResponse response)\n    throws ServletException, IOException {\n        response.setContentType(\"text/html\");\n        final PrintWriter pw = response.getWriter();\n        try {\n            pw.println(\"Hello, world!\");\n        } finally {\n            pw.close();\n        }\n    }\n}</pre>\n\n<p>&nbsp;</p>','Test Test','6/12/2017','7',1),(44478,'<p><b>Java</b>&nbsp;is a general-purpose&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_language\" title=\"Programming language\">computer programming language</a>&nbsp;that is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_computing\" title=\"Concurrent computing\">concurrent</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class-based_programming\" title=\"Class-based programming\">class-based</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" title=\"Object-oriented programming\">object-oriented</a>,<sup id=\"cite_ref-FOOTNOTEGoslingJoySteeleBracha20141_14-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-FOOTNOTEGoslingJoySteeleBracha20141-14\">[14]</a></sup>&nbsp;and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"<a href=\"https://en.wikipedia.org/wiki/Write_once,_run_anywhere\" title=\"Write once, run anywhere\">write once, run anywhere</a>\" (WORA),<sup id=\"cite_ref-15\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-15\">[15]</a></sup>&nbsp;meaning that&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compiled</a>&nbsp;Java code can run on all platforms that support Java without the need for recompilation.<sup id=\"cite_ref-design_goals_16-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;Java applications are typically compiled to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">bytecode</a>&nbsp;that can run on any&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;(JVM) regardless of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_architecture\" title=\"Computer architecture\">computer architecture</a>. As of 2016, Java is one of the most&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">popular programming languages in use</a>,<sup id=\"cite_ref-17\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-17\">[17]</a></sup><sup id=\"cite_ref-18\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-18\">[18]</a></sup><sup id=\"cite_ref-languagepopularity2013_19-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-languagepopularity2013-19\">[19]</a></sup><sup id=\"cite_ref-20\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-20\">[20]</a></sup>&nbsp;particularly for client-server web applications, with a reported 9 million developers.<sup id=\"cite_ref-21\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-21\">[21]</a></sup>&nbsp;Java was originally developed by&nbsp;<a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>&nbsp;at&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;(which has since been&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_acquisition_by_Oracle\" title=\"Sun acquisition by Oracle\">acquired by Oracle Corporation</a>) and released in 1995 as a core component of Sun Microsystems\'&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java platform</a>. The language derives much of its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Syntax_(programming_languages)\" title=\"Syntax (programming languages)\">syntax</a>&nbsp;from&nbsp;<a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\" title=\"C (programming language)\">C</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>, but it has fewer&nbsp;<a href=\"https://en.wikipedia.org/wiki/Low-level_programming_language\" title=\"Low-level programming language\">low-level</a>&nbsp;facilities than either of them.</p>\n\n<p>The original and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Reference_implementation\" title=\"Reference implementation\">reference implementation</a>&nbsp;Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compilers</a>, virtual machines, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Library_(computing)\" title=\"Library (computing)\">class libraries</a>&nbsp;were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>, Sun&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_relicensing\" title=\"Software relicensing\">relicensed</a>&nbsp;most of its Java technologies under the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>. Others have also developed alternative implementations of these Sun technologies, such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Compiler_for_Java\" title=\"GNU Compiler for Java\">GNU Compiler for Java</a>&nbsp;(bytecode compiler),&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Classpath\" title=\"GNU Classpath\">GNU Classpath</a>&nbsp;(standard libraries), and&nbsp;<a href=\"https://en.wikipedia.org/wiki/IcedTea\" title=\"IcedTea\">IcedTea</a>-Web (browser plugin for applets).</p>\n\n<p>The latest version is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 8</a>&nbsp;which is the only version currently supported for free by Oracle, although earlier versions are supported both by Oracle and other companies on a commercial basis.</p>\n\n<h2>Contents</h2>\n\n<p>&nbsp;&nbsp;[<a role=\"button\" tabindex=\"0\">hide</a>]&nbsp;</p>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#History\">1History</a>\n\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Principles\">1.1Principles</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Versions\">1.2Versions</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Practices\">2Practices</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Java_platform\">2.1Java platform</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Implementations\">2.1.1Implementations</a></li>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Performance\">2.1.2Performance</a></li>\n		</ul>\n		</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Automatic_memory_management\">2.2Automatic memory management</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Syntax\">3Syntax</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#.22Hello_world.22_example\">4\"Hello world\" example</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Special_classes\">5Special classes</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Applet\">5.1Applet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Servlet\">5.2Servlet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#JavaServer_Pages\">5.3JavaServer Pages</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Swing_application\">5.4Swing application</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Generics\">5.5Generics</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Criticism\">6Criticism</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Use_outside_of_the_Java_platform\">7Use outside of the Java platform</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Android\">7.1Android</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Controversy\">7.1.1Controversy</a></li>\n		</ul>\n		</li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Class_libraries\">8Class libraries</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Documentation\">9Documentation</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Editions\">10Editions</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#See_also\">11See also</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Comparison_of_Java_with_other_languages\">11.1Comparison of Java with other languages</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Notes\">12Notes</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#References\">13References</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#External_links\">14External links</a></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h2>History</h2>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)#History\" title=\"Java (software platform)\">Java (software platform) §&nbsp;History</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Duke_(Java_mascot)_waving.svg\"><img alt=\"\" data-file-height=\"407\" data-file-width=\"226\" height=\"306\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/170px-Duke_%28Java_mascot%29_waving.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/255px-Duke_%28Java_mascot%29_waving.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/340px-Duke_%28Java_mascot%29_waving.svg.png 2x\" width=\"170\" /></a></p>\n\n<p>Duke, the Java mascot</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:James_Gosling_2008.jpg\"><img alt=\"\" data-file-height=\"1469\" data-file-width=\"1460\" height=\"221\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/220px-James_Gosling_2008.jpg\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/330px-James_Gosling_2008.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/440px-James_Gosling_2008.jpg 2x\" width=\"220\" /></a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, the creator of Java (2008)</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Tiobeindex.png\"><img alt=\"\" data-file-height=\"426\" data-file-width=\"704\" height=\"133\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/220px-Tiobeindex.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/330px-Tiobeindex.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/440px-Tiobeindex.png 2x\" width=\"220\" /></a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/TIOBE_index\" title=\"TIOBE index\">TIOBE</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">programming language popularity index</a>&nbsp;graph from 2002 to 2015. Over the course of a decade Java (blue) and C (black) competing for the top position.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, Mike Sheridan, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Patrick_Naughton\" title=\"Patrick Naughton\">Patrick Naughton</a>&nbsp;initiated the Java language project in June 1991.<sup id=\"cite_ref-22\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-22\">[22]</a></sup>&nbsp;Java was originally designed for interactive television, but it was too advanced for the digital cable television industry at the time.<sup id=\"cite_ref-23\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-23\">[23]</a></sup>&nbsp;The language was initially called&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Oak_(programming_language)\" title=\"Oak (programming language)\">Oak</a></i>&nbsp;after an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oak\" title=\"Oak\">oak</a>&nbsp;tree that stood outside Gosling\'s office. Later the project went by the name&nbsp;<i>Green</i>&nbsp;and was finally renamed&nbsp;<i>Java</i>, from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_coffee\" title=\"Java coffee\">Java coffee</a>.<sup id=\"cite_ref-24\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-24\">[24]</a></sup>&nbsp;Gosling designed Java with a C/C++-style syntax that system and application programmers would find familiar.<sup id=\"cite_ref-25\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-25\">[25]</a></sup></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;released the first public implementation as Java 1.0 in 1995.<sup id=\"cite_ref-oraclejavahistory_26-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oraclejavahistory-26\">[26]</a></sup>&nbsp;It promised \"Write Once, Run Anywhere\" (WORA), providing no-cost run-times on popular&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computing_platform\" title=\"Computing platform\">platforms</a>. Fairly secure and featuring configurable security, it allowed network- and file-access restrictions. Major&nbsp;<a href=\"https://en.wikipedia.org/wiki/Web_browser\" title=\"Web browser\">web browsers</a>&nbsp;soon incorporated the ability to run&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">Java applets</a></i>&nbsp;within web pages, and Java quickly became popular. The Java 1.0 compiler was re-written&nbsp;<a href=\"https://en.wikipedia.org/wiki/Bootstrapping_(compilers)\" title=\"Bootstrapping (compilers)\">in Java</a>&nbsp;by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Arthur_van_Hoff\" title=\"Arthur van Hoff\">Arthur van Hoff</a>&nbsp;to comply strictly with the Java 1.0 language specification.<sup id=\"cite_ref-27\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-27\">[27]</a></sup>&nbsp;With the advent of&nbsp;<i>Java 2</i>&nbsp;(released initially as J2SE 1.2 in December 1998 – 1999), new versions had multiple configurations built for different types of platforms.&nbsp;<i>J2EE</i>&nbsp;included technologies and APIs for enterprise applications typically run in server environments, while&nbsp;<i>J2ME</i>&nbsp;featured APIs optimized for mobile applications. The desktop version was renamed&nbsp;<i>J2SE</i>. In 2006, for marketing purposes, Sun renamed new&nbsp;<i>J2</i>&nbsp;versions as&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a></i>,&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition\" title=\"Java Platform, Micro Edition\">Java ME</a></i>, and&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition\" title=\"Java Platform, Standard Edition\">Java SE</a></i>, respectively.</p>\n\n<p>In 1997, Sun Microsystems approached the&nbsp;<a href=\"https://en.wikipedia.org/wiki/ISO/IEC_JTC_1\" title=\"ISO/IEC JTC 1\">ISO/IEC JTC 1</a>&nbsp;standards body and later the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>&nbsp;to formalize Java, but it soon withdrew from the process.<sup id=\"cite_ref-28\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-28\">[28]</a></sup><sup id=\"cite_ref-29\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-29\">[29]</a></sup><sup id=\"cite_ref-30\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-30\">[30]</a></sup>&nbsp;Java remains a&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\"><i>de facto</i>&nbsp;standard</a>, controlled through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>.<sup id=\"cite_ref-31\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-31\">[31]</a></sup>At one time, Sun made most of its Java implementations available without charge, despite their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Proprietary_software\" title=\"Proprietary software\">proprietary software</a>&nbsp;status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System.</p>\n\n<p>On November 13, 2006, Sun released much of its Java virtual machine (JVM) as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_and_open-source_software\" title=\"Free and open-source software\">free and open-source software</a>, (FOSS), under the terms of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>&nbsp;(GPL). On May 8, 2007, Sun finished the process, making all of its JVM\'s core code available under&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_software\" title=\"Free software\">free software</a>/open-source distribution terms, aside from a small portion of code to which Sun did not hold the copyright.<sup id=\"cite_ref-32\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-32\">[32]</a></sup></p>\n\n<p>Sun\'s vice-president Rich Green said that Sun\'s ideal role with regard to Java was as an \"evangelist\".<sup id=\"cite_ref-33\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-33\">[33]</a></sup>&nbsp;Following&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>\'s acquisition of Sun Microsystems in 2009–10, Oracle has described itself as the \"steward of Java technology with a relentless commitment to fostering a community of participation and transparency\".<sup id=\"cite_ref-34\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-34\">[34]</a></sup>&nbsp;This did not prevent Oracle from filing a lawsuit against Google shortly after that for using Java inside the Android SDK (see Google section below). Java software runs on everything from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Laptop\" title=\"Laptop\">laptops</a>&nbsp;to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_center\" title=\"Data center\">data centers</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Video_game_console\" title=\"Video game console\">game consoles</a>&nbsp;to scientific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Supercomputer\" title=\"Supercomputer\">supercomputers</a>.<sup id=\"cite_ref-35\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-35\">[35]</a></sup>&nbsp;On April 2, 2010, James Gosling resigned from Oracle.<sup id=\"cite_ref-36\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-36\">[36]</a></sup></p>\n\n<p>In January 2016, Oracle announced that Java runtime environments based on JDK 9 will discontinue the browser plugin.<sup id=\"cite_ref-37\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-37\">[37]</a></sup></p>\n\n<h3>Principles</h3>\n\n<p>There were five primary goals in the creation of the Java language:<sup id=\"cite_ref-design_goals_16-1\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup></p>\n\n<ol>\n	<li>It must be \"simple, object-oriented, and familiar\".</li>\n	<li>It must be \"robust and secure\".</li>\n	<li>It must be \"architecture-neutral and portable\".</li>\n	<li>It must execute with \"high performance\".</li>\n	<li>It must be \"interpreted, threaded, and dynamic\".</li>\n</ol>\n\n<h3>Versions</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java version history</a></p>\n\n<p>As of 2015, only Java 8 is officially supported. Major release versions of Java, along with their release dates:</p>\n\n<ul>\n	<li>JDK 1.0 (January 23, 1996)<sup id=\"cite_ref-38\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-38\">[38]</a></sup></li>\n	<li>JDK 1.1 (February 19, 1997)</li>\n	<li>J2SE 1.2 (December 8, 1998)</li>\n	<li>J2SE 1.3 (May 8, 2000)</li>\n	<li>J2SE 1.4 (February 6, 2002)</li>\n	<li>J2SE 5.0 (September 30, 2004)</li>\n	<li>Java SE 6 (December 11, 2006)</li>\n	<li>Java SE 7 (July 28, 2011)</li>\n	<li>Java SE 8 (March 18, 2014)</li>\n</ul>\n\n<h2>Practices</h2>\n\n<h3>Java platform</h3>\n\n<p>Main articles:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java (software platform)</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a></p>\n\n<p>One design goal of Java is portability, which means that programs written for the Java platform must run similarly on any combination of hardware and operating system with adequate runtime support. This is achieved by compiling the Java language code to an intermediate representation called&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>, instead of directly to architecture-specific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Machine_code\" title=\"Machine code\">machine code</a>. Java bytecode instructions are analogous to machine code, but they are intended to be executed by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Virtual_machine\" title=\"Virtual machine\">virtual machine</a>&nbsp;(VM) written specifically for the host hardware.&nbsp;<a href=\"https://en.wikipedia.org/wiki/End_user\" title=\"End user\">End users</a>&nbsp;commonly use a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java Runtime Environment</a>&nbsp;(JRE) installed on their own machine for standalone Java applications, or in a web browser for Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Applet\" title=\"Applet\">applets</a>.</p>\n\n<p>Standard libraries provide a generic way to access host-specific features such as graphics,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Thread_(computing)\" title=\"Thread (computing)\">threading</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_network\" title=\"Computer network\">networking</a>.</p>\n\n<p>The use of universal bytecode makes porting simple. However, the overhead of interpreting bytecode into machine instructions made interpreted programs almost always run more slowly than native&nbsp;<a href=\"https://en.wikipedia.org/wiki/Executable\" title=\"Executable\">executables</a>.&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">Just-in-time</a>&nbsp;(JIT) compilers that compile bytecodes to machine code during runtime were introduced from an early stage. Java itself is platform-independent and is adapted to the particular platform it is to run on by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;for it, which translates the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>&nbsp;into the platform\'s machine language.<sup id=\"cite_ref-39\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-39\">[39]</a></sup></p>\n\n<h4>Implementations</h4>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_Java_implementations\" title=\"Free Java implementations\">Free Java implementations</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>&nbsp;is the current owner of the official implementation of the Java SE platform, following their acquisition of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;on January 27, 2010. This implementation is based on the original implementation of Java by Sun. The Oracle implementation is available for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Microsoft Windows</a>&nbsp;(still works for XP, while only later versions currently officially supported),&nbsp;<a href=\"https://en.wikipedia.org/wiki/MacOS\" title=\"MacOS\">macOS</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Linux\" title=\"Linux\">Linux</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Solaris_(operating_system)\" title=\"Solaris (operating system)\">Solaris</a>. Because Java lacks any formal standardization recognized by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>, ISO/IEC, ANSI, or other third-party standards organization, the Oracle implementation is the&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\">de facto standard</a>.</p>\n\n<p>The Oracle implementation is packaged into two different distributions: The Java Runtime Environment (JRE) which contains the parts of the Java SE platform required to run Java programs and is intended for end users, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Development_Kit\" title=\"Java Development Kit\">Java Development Kit</a>&nbsp;(JDK), which is intended for software developers and includes development tools such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/JAR_(file_format)\" title=\"JAR (file format)\">Jar</a>, and a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Debugger\" title=\"Debugger\">debugger</a>.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/OpenJDK\" title=\"OpenJDK\">OpenJDK</a>&nbsp;is another notable Java SE implementation that is licensed under the GNU GPL. The implementation started when Sun began releasing the Java source code under the GPL. As of Java SE 7, OpenJDK is the official Java reference implementation.</p>\n\n<p>The goal of Java is to make all implementations of Java compatible. Historically, Sun\'s trademark license for usage of the Java brand insists that all implementations be \"compatible\". This resulted in a legal dispute with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft\" title=\"Microsoft\">Microsoft</a>&nbsp;after Sun claimed that the Microsoft implementation did not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" title=\"Java remote method invocation\">RMI</a>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Native_Interface\" title=\"Java Native Interface\">JNI</a>&nbsp;and had added platform-specific features of their own. Sun sued in 1997, and, in 2001, won a settlement of US$20 million, as well as a court order enforcing the terms of the license from Sun.<sup id=\"cite_ref-40\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-40\">[40]</a></sup>&nbsp;As a result, Microsoft no longer ships Java with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Windows</a>.</p>\n\n<p>Platform-independent Java is essential to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a>, and an even more rigorous validation is required to certify an implementation. This environment enables portable server-side applications.</p>\n\n<h4>Performance</h4>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_performance\" title=\"Java performance\">Java performance</a></p>\n\n<p>Programs written in Java have a reputation for being slower and requiring more memory than those written in C++.<sup id=\"cite_ref-41\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-41\">[41]</a></sup><sup id=\"cite_ref-42\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-42\">[42]</a></sup>&nbsp;However, Java programs\' execution speed improved significantly with the introduction of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">just-in-time compilation</a>&nbsp;in 1997/1998 for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 1.1</a>,<sup id=\"cite_ref-43\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-43\">[43]</a></sup>&nbsp;the addition of language features supporting better code analysis (such as inner classes, the StringBuilder class, optional assertions, etc.), and optimizations in the Java virtual machine, such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/HotSpot\" title=\"HotSpot\">HotSpot</a>&nbsp;becoming the default for Sun\'s JVM in 2000. With Java 1.5, the performance was improved with the addition of the java.util.concurrent package, including&nbsp;<a href=\"https://en.wikipedia.org/wiki/Lock_free\" title=\"Lock free\">Lock free</a>&nbsp;implementations of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_ConcurrentMap\" title=\"Java ConcurrentMap\">ConcurrentMaps</a>&nbsp;and other multi-core collections, and it was improved further Java 1.6.</p>\n\n<p>Some platforms offer direct hardware support for Java; there are microcontrollers that can run Java in hardware instead of a software Java virtual machine<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup>, and some&nbsp;<a href=\"https://en.wikipedia.org/wiki/ARM_architecture\" title=\"ARM architecture\">ARM</a>&nbsp;based processors could have hardware support for executing Java bytecode through their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Jazelle\" title=\"Jazelle\">Jazelle</a>&nbsp;option, though support has mostly been dropped in current implementations of ARM.</p>\n\n<h3>Automatic memory management</h3>\n\n<p>Java uses an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)\" title=\"Garbage collection (computer science)\">automatic garbage collector</a>&nbsp;to manage memory in the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_lifetime\" title=\"Object lifetime\">object lifecycle</a>. The programmer determines when objects are created, and the Java runtime is responsible for recovering the memory once objects are no longer in use. Once no references to an object remain, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Unreachable_memory\" title=\"Unreachable memory\">unreachable memory</a>&nbsp;becomes eligible to be freed automatically by the garbage collector. Something similar to a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_leak\" title=\"Memory leak\">memory leak</a>&nbsp;may still occur if a programmer\'s code holds a reference to an object that is no longer needed, typically when objects that are no longer needed are stored in containers that are still in use. If methods for a nonexistent object are called, a \"null pointer exception\" is thrown.<sup id=\"cite_ref-44\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-44\">[44]</a></sup><sup id=\"cite_ref-45\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-45\">[45]</a></sup></p>\n\n<p>One of the ideas behind Java\'s automatic memory management model is that programmers can be spared the burden of having to perform manual memory management. In some languages, memory for the creation of objects is implicitly allocated on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" title=\"Stack (abstract data type)\">stack</a>&nbsp;or explicitly allocated and deallocated from the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_management#DYNAMIC\" title=\"Memory management\">heap</a>. In the latter case, the responsibility of managing memory resides with the programmer. If the program does not deallocate an object, a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_leak\" title=\"Memory leak\">memory leak</a>&nbsp;occurs. If the program attempts to access or deallocate memory that has already been deallocated, the result is undefined and difficult to predict, and the program is likely to become unstable and/or crash. This can be partially remedied by the use of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Smart_pointer\" title=\"Smart pointer\">smart pointers</a>, but these add overhead and complexity. Note that garbage collection does not prevent \"logical\" memory leaks,&nbsp;<i>i.e.</i>, those where the memory is still referenced but never used.</p>\n\n<p>Garbage collection may happen at any time. Ideally, it will occur when a program is idle. It is guaranteed to be triggered if there is insufficient free memory on the heap to allocate a new object; this can cause a program to stall momentarily. Explicit memory management is not possible in Java.</p>\n\n<p>Java does not support C/C++ style&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pointer_(computer_programming)\" title=\"Pointer (computer programming)\">pointer arithmetic</a>, where object addresses and unsigned integers (usually long integers) can be used interchangeably. This allows the garbage collector to relocate referenced objects and ensures type safety and security.</p>\n\n<p>As in C++ and some other object-oriented languages, variables of Java\'s&nbsp;<a href=\"https://en.wikipedia.org/wiki/Primitive_data_type\" title=\"Primitive data type\">primitive data types</a>&nbsp;are either stored directly in fields (for objects) or on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack-based_memory_allocation\" title=\"Stack-based memory allocation\">stack</a>&nbsp;(for methods) rather than on the heap, as is commonly true for non-primitive data types (but see&nbsp;<a href=\"https://en.wikipedia.org/wiki/Escape_analysis\" title=\"Escape analysis\">escape analysis</a>). This was a conscious decision by Java\'s designers for performance reasons.</p>\n\n<p>Java contains multiple types of garbage collectors. By default, HotSpot uses the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Parallel_scavenge_garbage_collector&amp;action=edit&amp;redlink=1\" title=\"Parallel scavenge garbage collector (page does not exist)\">parallel scavenge garbage collector</a>.<sup id=\"cite_ref-46\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-46\">[46]</a></sup>&nbsp;However, there are also several other garbage collectors that can be used to manage the heap. For 90% of applications in Java, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_mark_sweep_collector\" title=\"Concurrent mark sweep collector\">Concurrent Mark-Sweep</a>&nbsp;(CMS) garbage collector is sufficient.<sup id=\"cite_ref-47\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-47\">[47]</a></sup>Oracle aims to replace CMS with the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Garbage-First_collector&amp;action=edit&amp;redlink=1\" title=\"Garbage-First collector (page does not exist)\">Garbage-First collector</a>&nbsp;(G1).<sup id=\"cite_ref-48\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-48\">[48]</a></sup></p>\n\n<h2>Syntax</h2>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_syntax\" title=\"Java syntax\">Java syntax</a></p>\n\n<p>The syntax of Java is largely influenced by&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>. Unlike C++, which combines the syntax for structured, generic, and object-oriented programming, Java was built almost exclusively as an object-oriented language.<sup id=\"cite_ref-design_goals_16-2\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;All code is written inside classes, and every data item is an object, with the exception of the primitive data types, (<i>i.e.</i>&nbsp;integers, floating-point numbers,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Boolean_data_type\" title=\"Boolean data type\">boolean values</a>, and characters), which are not objects for performance reasons. Java reuses some popular aspects of C++ (such as printf() method).</p>\n\n<p>Unlike C++, Java does not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Operator_overloading\" title=\"Operator overloading\">operator overloading</a><sup id=\"cite_ref-msdn_operator_overloading_49-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-msdn_operator_overloading-49\">[49]</a></sup>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Multiple_inheritance\" title=\"Multiple inheritance\">multiple inheritance</a>&nbsp;for&nbsp;<i>classes</i>, though multiple inheritance is supported for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interfaces</a>.<sup id=\"cite_ref-oracle_multiple_inheritance_50-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oracle_multiple_inheritance-50\">[50]</a></sup>&nbsp;This simplifies the language and aids in preventing potential errors and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Anti-pattern\" title=\"Anti-pattern\">anti-pattern</a>&nbsp;design.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup></p>\n\n<p>Java uses comments similar to those of C++. There are three different styles of comments: a single line style marked with two slashes (<code>//</code>), a multiple line style opened with&nbsp;<code>/*</code>&nbsp;and closed with&nbsp;<code>*/</code>, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>&nbsp;commenting style opened with&nbsp;<code>/**</code>&nbsp;and closed with&nbsp;<code>*/</code>. The Javadoc style of commenting allows the user to run the Javadoc executable to create documentation for the program and can be read by some&nbsp;<a href=\"https://en.wikipedia.org/wiki/Integrated_development_environment\" title=\"Integrated development environment\">integrated development environments</a>&nbsp;(IDEs) such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Eclipse_(software)\" title=\"Eclipse (software)\">Eclipse</a>&nbsp;to allow developers to access documentation within the IDE.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n// This is an example of a single line comment using two slashes\n\n/* This is an example of a multiple line comment using the slash and asterisk.\n This type of comment can be used to hold a lot of information or deactivate\n code, but it is very important to remember to close the comment. */\n\npackage fibsandlies;\nimport java.util.HashMap;\n\n/**\n * This is an example of a Javadoc comment; Javadoc can compile documentation\n * from this text. Javadoc comments must immediately precede the class, method, or field being documented.\n */\npublic class FibCalculator extends Fibonacci implements Calculator {\n    private static Map&lt;Integer, Integer&gt; memoized = new HashMap&lt;Integer, Integer&gt;();\n\n    /*\n     * The main method written as follows is used by the JVM as a starting point for the program.\n     */\n    public static void main(String[] args) {\n        memoized.put(1, 1);\n        memoized.put(2, 1);\n        System.out.println(fibonacci(12)); //Get the 12th Fibonacci number and print to console\n    }\n\n    /**\n     * An example of a method written in Java, wrapped in a class.\n     * Given a non-negative number FIBINDEX, returns\n     * the Nth Fibonacci number, where N equals FIBINDEX.\n     * @param fibIndex The index of the Fibonacci number\n     * @return The Fibonacci number\n     */\n    public static int fibonacci(int fibIndex) {\n        if (memoized.containsKey(fibIndex)) {\n            return memoized.get(fibIndex);\n        } else {\n            int answer = fibonacci(fibIndex - 1) + fibonacci(fibIndex - 2);\n            memoized.put(fibIndex, answer);\n            return answer;\n        }\n    }\n}\n</pre>\n\n<h2>\"Hello world\" example</h2>\n\n<p>The traditional&nbsp;<a href=\"https://en.wikipedia.org/wiki/%22Hello,_world!%22_program\" title=\"&quot;Hello, world!&quot; program\">\"Hello, world!\" program</a>&nbsp;can be written in Java as:<sup id=\"cite_ref-51\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-51\">[51]</a></sup></p>\n\n<pre>\nclass HelloWorldApp {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\"); // Prints the string to the console.\n    }\n}</pre>\n\n<p>Source files must be named after the public class they contain, appending the suffix&nbsp;<code>.java</code>, for example,&nbsp;<code>HelloWorldApp.java</code>. It must first be compiled into bytecode, using a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>, producing a file named&nbsp;<code>HelloWorldApp.class</code>. Only then can it be executed, or \"launched\". The Java source file may only contain one public class, but it can contain multiple classes with other than public access and any number of public&nbsp;<a href=\"https://en.wikipedia.org/wiki/Inner_class\" title=\"Inner class\">inner classes</a>. When the source file contains multiple classes, make one class \"public\" and name the source file with that public class name.</p>\n\n<p>A&nbsp;<code><b>class</b></code>&nbsp;that is not declared&nbsp;<code><b>public</b></code>&nbsp;may be stored in any .java file. The compiler will generate a class file for each class defined in the source file. The name of the class file is the name of the class, with&nbsp;<i>.class</i>&nbsp;appended. For class file generation,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class_(computer_programming)#Unnamed\" title=\"Class (computer programming)\">anonymous classes</a>&nbsp;are treated as if their name were the concatenation of the name of their enclosing class, a&nbsp;<i>$</i>, and an integer.</p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/List_of_Java_keywords\" title=\"List of Java keywords\">keyword</a>&nbsp;<code><b>public</b></code>&nbsp;denotes that a method can be called from code in other classes, or that a class may be used by classes outside the class hierarchy. The class hierarchy is related to the name of the directory in which the .java file is located. This is called an access level modifier. Other access level modifiers include the keywords&nbsp;<code><b>private</b></code>&nbsp;and&nbsp;<code><b>protected</b></code>.</p>\n\n<p>The keyword&nbsp;<code><b>static</b></code>&nbsp;in front of a method indicates a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Method_(computer_programming)#Static_methods\" title=\"Method (computer programming)\">static method</a>, which is associated only with the class and not with any specific instance of that class. Only static methods can be invoked without a reference to an object. Static methods cannot access any class members that are not also static. Methods that are not designated static are instance methods and require a specific instance of a class to operate.</p>\n\n<p>The keyword&nbsp;<code><b>void</b></code>&nbsp;indicates that the main method does not return any value to the caller. If a Java program is to exit with an error code, it must call System.exit() explicitly.</p>\n\n<p>The method name \"<code>main</code>\" is not a keyword in the Java language. It is simply the name of the method the Java launcher calls to pass control to the program. Java classes that run in managed environments such as applets and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Enterprise_JavaBeans\" title=\"Enterprise JavaBeans\">Enterprise JavaBeans</a>&nbsp;do not use or need a&nbsp;<code>main()</code>&nbsp;method. A Java program may contain multiple classes that have&nbsp;<code>main</code>&nbsp;methods, which means that the VM needs to be explicitly told which class to launch from.</p>\n\n<p>The main method must accept an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Array_data_type\" title=\"Array data type\">array</a>&nbsp;of&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\" rel=\"nofollow\">String</a></code></b>&nbsp;objects. By convention, it is referenced as&nbsp;<code><b>args</b></code>&nbsp;although any other legal identifier name can be used. Since Java 5, the main method can also use&nbsp;<a href=\"https://en.wikipedia.org/wiki/Variadic_function\" title=\"Variadic function\">variable arguments</a>, in the form of&nbsp;<code>public static void main(String... args)</code>, allowing the main method to be invoked with an arbitrary number of&nbsp;<code>String</code>&nbsp;arguments. The effect of this alternate declaration is semantically identical (the&nbsp;<code>args</code>&nbsp;parameter is still an array of&nbsp;<code>String</code>&nbsp;objects), but it allows an alternative syntax for creating and passing the array.</p>\n\n<p>The Java launcher launches Java by loading a given class (specified on the command line or as an attribute in a&nbsp;<a href=\"https://en.wikipedia.org/wiki/JAR_(file_format)\" title=\"JAR (file format)\">JAR</a>) and starting its&nbsp;<code>public static void main(String[])</code>&nbsp;method. Stand-alone programs must declare this method explicitly. The&nbsp;<code>String[] args</code>&nbsp;parameter is an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Array_data_type\" title=\"Array data type\">array</a>&nbsp;of&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\" rel=\"nofollow\">String</a></code>&nbsp;objects containing any arguments passed to the class. The parameters to&nbsp;<code>main</code>&nbsp;are often passed by means of a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Command-line_interface\" title=\"Command-line interface\">command line</a>.</p>\n\n<p>Printing is part of a Java standard library: The&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/System.html\" rel=\"nofollow\">System</a></code></b>&nbsp;class defines a public static field called&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#out\" rel=\"nofollow\">out</a></code></b>. The&nbsp;<code>out</code>&nbsp;object is an instance of the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html\" rel=\"nofollow\">PrintStream</a></code>class and provides many methods for printing data to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Standard_streams\" title=\"Standard streams\">standard out</a>, including&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html#println(java.lang.String)\" rel=\"nofollow\">println(String)</a></code></b>&nbsp;which also appends a new line to the passed string.</p>\n\n<p>The string \"Hello World!\" is automatically converted to a String object by the compiler.</p>\n\n<h2>Special classes</h2>\n\n<table role=\"presentation\">\n	<tbody>\n		<tr>\n			<td>\n			<p><img alt=\"\" data-file-height=\"40\" data-file-width=\"40\" height=\"40\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/40px-Ambox_important.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/60px-Ambox_important.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/80px-Ambox_important.svg.png 2x\" width=\"40\" /></p>\n			</td>\n			<td>This section&nbsp;<b>contains&nbsp;<a href=\"https://en.wikipedia.org/wiki/Wikipedia:What_Wikipedia_is_not#NOTHOWTO\" title=\"Wikipedia:What Wikipedia is not\">instructions, advice, or how-to content</a></b>.&nbsp;The purpose of Wikipedia is to present facts, not to train. Please help&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Java_(programming_language)&amp;action=edit\">improve this article</a>&nbsp;either by rewriting the how-to content or by&nbsp;<a href=\"https://meta.wikimedia.org/wiki/Help:Transwiki\" title=\"m:Help:Transwiki\">moving</a>&nbsp;it to&nbsp;<a href=\"https://en.wikiversity.org/wiki/\" title=\"v:\">Wikiversity</a>,&nbsp;<a href=\"https://en.wikibooks.org/wiki/\" title=\"b:\">Wikibooks</a>&nbsp;or&nbsp;<a href=\"https://en.wikivoyage.org/wiki/\" title=\"voy:\">Wikivoyage</a>.&nbsp;<small><i>(January 2012)</i></small></td>\n		</tr>\n	</tbody>\n</table>\n\n<h3>Applet</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">Java applet</a></p>\n\n<p>Java applets are programs that are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Embedded_system#Embedded_software_architectures\" title=\"Embedded system\">embedded</a>&nbsp;in other applications, typically in a Web page displayed in a web browser.</p>\n\n<pre>\n// Hello.java\nimport javax.swing.JApplet;\nimport java.awt.Graphics;\n\npublic class Hello extends JApplet {\n    public void paintComponent(final Graphics g) {\n        g.drawString(\"Hello, world!\", 65, 95);\n    }\n}\n</pre>\n\n<p>The&nbsp;<code><b>import</b></code>&nbsp;statements direct the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>&nbsp;to include the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JApplet.html\" rel=\"nofollow\">javax.swing.JApplet</a></code></b>&nbsp;and&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Graphics.html\" rel=\"nofollow\">java.awt.Graphics</a></code></b>&nbsp;classes in the compilation. The import statement allows these classes to be referenced in the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Source_code\" title=\"Source code\">source code</a>&nbsp;using the&nbsp;<i>simple class name</i>&nbsp;(i.e.&nbsp;<code>JApplet</code>) instead of the&nbsp;<i>fully qualified class name</i>&nbsp;(<i>FQCN</i>, i.e.&nbsp;<code>javax.swing.JApplet</code>).</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class&nbsp;<code><b>extends</b></code>&nbsp;(<a href=\"https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)#Subclasses_and_superclasses\" title=\"Inheritance (object-oriented programming)\">subclasses</a>) the&nbsp;<code><b>JApplet</b></code>&nbsp;(Java Applet) class; the&nbsp;<code>JApplet</code>&nbsp;class provides the framework for the host application to display and control the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_lifetime\" title=\"Object lifetime\">lifecycle</a>&nbsp;of the applet. The&nbsp;<code>JApplet</code>&nbsp;class is a JComponent (Java Graphical Component) which provides the applet with the capability to display a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_user_interface\" title=\"Graphical user interface\">graphical user interface</a>&nbsp;(GUI) and respond to user&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event-driven_programming\" title=\"Event-driven programming\">events</a>.</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class&nbsp;<a href=\"https://en.wikipedia.org/wiki/Method_overriding\" title=\"Method overriding\">overrides</a>&nbsp;the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#paint(java.awt.Graphics)\" rel=\"nofollow\">paintComponent(Graphics)</a></code></b>&nbsp;method (additionally indicated with the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_annotation\" title=\"Java annotation\">annotation</a>, supported as of JDK 1.5,&nbsp;<code>Override</code>) inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html\" rel=\"nofollow\">Container</a></code>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)#Subclasses_and_superclasses\" title=\"Inheritance (object-oriented programming)\">superclass</a>&nbsp;to provide the code to display the applet. The&nbsp;<code>paintComponent()</code>&nbsp;method is passed a&nbsp;<code><b>Graphics</b></code>&nbsp;object that contains the graphic context used to display the applet. The&nbsp;<code>paintComponent()</code>&nbsp;method calls the graphic context&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Graphics.html#drawString(java.lang.String,%20int,%20int)\" rel=\"nofollow\">drawString(String, int, int)</a></code></b>&nbsp;method to display the&nbsp;<b>\"Hello, world!\"</b>&nbsp;string at a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pixel\" title=\"Pixel\">pixel</a>&nbsp;offset of (<code><b>65, 95</b></code>) from the upper-left corner in the applet\'s display.</p>\n\n<pre>\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n&lt;!-- Hello.html --&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Hello World Applet&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;applet code=\"Hello.class\" width=\"200\" height=\"200\"&gt;\n        &lt;/applet&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>An applet is placed in an&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;document using the&nbsp;<b><code>&lt;applet&gt;</code></b>&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML_element\" title=\"HTML element\">HTML element</a>. The&nbsp;<code>applet</code>&nbsp;tag has three attributes set:&nbsp;<b><code>code=\"Hello\"</code></b>&nbsp;specifies the name of the&nbsp;<code>JApplet</code>&nbsp;class and&nbsp;<b><code>width=\"200\" height=\"200\"</code></b>&nbsp;sets the pixel width and height of the applet. Applets may also be embedded in HTML using either the&nbsp;<code>object</code>&nbsp;or&nbsp;<code>embed</code>&nbsp;element,<sup id=\"cite_ref-52\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-52\">[52]</a></sup>&nbsp;although support for these elements by web browsers is inconsistent.<sup id=\"cite_ref-53\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-53\">[53]</a></sup>&nbsp;However, the&nbsp;<code>applet</code>&nbsp;tag is deprecated, so the&nbsp;<code>object</code>&nbsp;tag is preferred where supported.</p>\n\n<p>The host application, typically a Web browser, instantiates the&nbsp;<b><code>Hello</code></b>&nbsp;applet and creates an&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/applet/AppletContext.html\" rel=\"nofollow\">AppletContext</a></code>&nbsp;for the applet. Once the applet has initialized itself, it is added to the AWT display hierarchy. The&nbsp;<code>paintComponent()</code>&nbsp;method is called by the AWT&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event_dispatching_thread\" title=\"Event dispatching thread\">event dispatching thread</a>&nbsp;whenever the display needs the applet to draw itself.</p>\n\n<h3>Servlet</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Servlet\" title=\"Java Servlet\">Java Servlet</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Java_Servlet\" title=\"Java Servlet\">Java Servlet</a>&nbsp;technology provides Web developers with a simple, consistent mechanism for extending the functionality of a Web server and for accessing existing business systems. Servlets are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Server-side\" title=\"Server-side\">server-side</a>&nbsp;Java EE components that generate responses (typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;pages) to requests (typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" title=\"Hypertext Transfer Protocol\">HTTP</a>&nbsp;requests) from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Client_(computing)\" title=\"Client (computing)\">clients</a>. A servlet can almost be thought of as an applet that runs on the server side—without a face.</p>\n\n<pre>\n// Hello.java\nimport java.io.*;\nimport javax.servlet.*;\n\npublic class Hello extends GenericServlet {\n    public void service(final ServletRequest request, final ServletResponse response)\n    throws ServletException, IOException {\n        response.setContentType(\"text/html\");\n        final PrintWriter pw = response.getWriter();\n        try {\n            pw.println(\"Hello, world!\");\n        } finally {\n            pw.close();\n        }\n    }\n}</pre>\n\n<p>The&nbsp;<b><code>import</code></b>&nbsp;statements direct the Java compiler to include all the public classes and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interfaces</a>&nbsp;from the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/package-summary.html\" rel=\"nofollow\">java.io</a></code></b>&nbsp;and&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/package-summary.html\" rel=\"nofollow\">javax.servlet</a></code></b>&nbsp;packages in the compilation. Packages make Java well suited for large scale applications.</p>\n\n<p>The&nbsp;<code><b>Hello</b></code>&nbsp;class&nbsp;<code><b>extends</b></code>&nbsp;the&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/GenericServlet.html\" rel=\"nofollow\">GenericServlet</a></code></b>&nbsp;class; the&nbsp;<code>GenericServlet</code>&nbsp;class provides the interface for the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Server_(computing)\" title=\"Server (computing)\">server</a>&nbsp;to forward requests to the servlet and control the servlet\'s lifecycle.</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class overrides the&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/Servlet.html#service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)\" rel=\"nofollow\">service(ServletRequest, ServletResponse)</a></code></b>&nbsp;method defined by the&nbsp;<code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/Servlet.html\" rel=\"nofollow\">Servlet</a></code>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interface</a>&nbsp;to provide the code for the service request handler. The&nbsp;<code>service()</code>&nbsp;method is passed: a&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html\" rel=\"nofollow\">ServletRequest</a></code></b>&nbsp;object that contains the request from the client and a&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletResponse.html\" rel=\"nofollow\">ServletResponse</a></code></b>object used to create the response returned to the client. The&nbsp;<code>service()</code>&nbsp;method declares that it&nbsp;<code><b>throws</b></code>&nbsp;the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Exception_handling\" title=\"Exception handling\">exceptions</a>&nbsp;<code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletException.html\" rel=\"nofollow\">ServletException</a></code>&nbsp;and&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\" rel=\"nofollow\">IOException</a></code>&nbsp;if a problem prevents it from responding to the request.</p>\n\n<p>The&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletResponse.html#setContentType(java.lang.String)\" rel=\"nofollow\">setContentType(String)</a></code></b>&nbsp;method in the response object is called to set the&nbsp;<a href=\"https://en.wikipedia.org/wiki/MIME\" title=\"MIME\">MIME</a>&nbsp;content type of the returned data to&nbsp;<b>\"text/html\"</b>. The&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletResponse.html#getWriter()\" rel=\"nofollow\">getWriter()</a></code></b>&nbsp;method in the response returns a&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintWriter.html\" rel=\"nofollow\">PrintWriter</a></code></b>&nbsp;object that is used to write the data that is sent to the client. The&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintWriter.html#println(java.lang.String)\" rel=\"nofollow\">println(String)</a></code></b>method is called to write the&nbsp;<b>\"Hello, world!\"</b>&nbsp;string to the response and then the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintWriter.html#close()\" rel=\"nofollow\">close()</a></code></b>&nbsp;method is called to close the print writer, which causes the data that has been written to the stream to be returned to the client.</p>\n\n<h3>JavaServer Pages</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/JavaServer_Pages\" title=\"JavaServer Pages\">JavaServer Pages</a></p>\n\n<p>JavaServer Pages (JSP) are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Server-side\" title=\"Server-side\">server-side</a>&nbsp;Java EE components that generate responses, typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;pages, to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" title=\"Hypertext Transfer Protocol\">HTTP</a>&nbsp;requests from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Client_(computing)\" title=\"Client (computing)\">clients</a>. JSPs embed Java code in an HTML page by using the special&nbsp;<a href=\"https://en.wikipedia.org/wiki/Delimiter\" title=\"Delimiter\">delimiters</a>&nbsp;<code>&lt;%</code>&nbsp;and&nbsp;<code>%&gt;</code>. A JSP is compiled to a Java&nbsp;<i>servlet</i>, a Java application in its own right, the first time it is accessed. After that, the generated servlet creates the response.</p>\n\n<h3>Swing application</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Swing_(Java)\" title=\"Swing (Java)\">Swing (Java)</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Swing_(Java)\" title=\"Swing (Java)\">Swing</a>&nbsp;is a graphical user interface&nbsp;<a href=\"https://en.wikipedia.org/wiki/Library_(computing)\" title=\"Library (computing)\">library</a>&nbsp;for the Java SE platform. It is possible to specify a different look and feel through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pluggable_look_and_feel\" title=\"Pluggable look and feel\">pluggable look and feel</a>&nbsp;system of Swing. Clones of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Windows</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/GTK%2B\" title=\"GTK+\">GTK+</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Motif_(software)\" title=\"Motif (software)\">Motif</a>&nbsp;are supplied by Sun.&nbsp;<a href=\"https://en.wikipedia.org/wiki/Apple_Inc.\" title=\"Apple Inc.\">Apple</a>&nbsp;also provides an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Aqua_(user_interface)\" title=\"Aqua (user interface)\">Aqua</a>&nbsp;look and feel for&nbsp;<a href=\"https://en.wikipedia.org/wiki/MacOS\" title=\"MacOS\">macOS</a>. Where prior implementations of these looks and feels may have been considered lacking, Swing in Java SE 6 addresses this problem by using more native&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_control_element\" title=\"Graphical control element\">GUI widget</a>&nbsp;drawing routines of the underlying platforms.</p>\n\n<p>This example Swing application creates a single window with \"Hello, world!\" inside:</p>\n\n<pre>\n// Hello.java (Java SE 5)\nimport javax.swing.*;\n\npublic class Hello extends JFrame {\n    public Hello() {\n        super(\"hello\");\n        super.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n        super.add(new JLabel(\"Hello, world!\"));\n        super.pack();\n        super.setVisible(true);\n    }\n\n    public static void main(final String[] args) {\n        new Hello();\n    }\n}\n</pre>\n\n<p>The first&nbsp;<b><code>import</code></b>&nbsp;includes all the public classes and interfaces from the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/package-summary.html\" rel=\"nofollow\">javax.swing</a></code></b>&nbsp;package.</p>\n\n<p>The&nbsp;<code><b>Hello</b></code>&nbsp;class&nbsp;<code><b>extends</b></code>&nbsp;the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JFrame.html\" rel=\"nofollow\">JFrame</a></code></b>&nbsp;class; the&nbsp;<code>JFrame</code>&nbsp;class implements a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Window_(computing)\" title=\"Window (computing)\">window</a>&nbsp;with a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Title_bar\" title=\"Title bar\">title bar</a>&nbsp;and a close&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_control_element\" title=\"Graphical control element\">control</a>.</p>\n\n<p>The&nbsp;<code><b>Hello()</b></code>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming)\" title=\"Constructor (object-oriented programming)\">constructor</a>&nbsp;initializes the frame by first calling the superclass constructor, passing the parameter&nbsp;<code>\"hello\"</code>, which is used as the window\'s title. It then calls the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JFrame.html#setDefaultCloseOperation(int)\" rel=\"nofollow\">setDefaultCloseOperation(int)</a></code></b>&nbsp;method inherited from&nbsp;<code>JFrame</code>&nbsp;to set the default operation when the close control on the title bar is selected to&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/WindowConstants.html#EXIT_ON_CLOSE\" rel=\"nofollow\">WindowConstants.EXIT_ON_CLOSE</a></code></b>&nbsp;– this causes the&nbsp;<code>JFrame</code>&nbsp;to be disposed of when the frame is closed (as opposed to merely hidden), which allows the Java virtual machine to exit and the program to terminate. Next, a&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JLabel.html\" rel=\"nofollow\">JLabel</a></code></b>&nbsp;is created for the string&nbsp;<b>\"Hello, world!\"</b>&nbsp;and the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#add(java.awt.Component)\" rel=\"nofollow\">add(Component)</a></code></b>&nbsp;method inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html\" rel=\"nofollow\">Container</a></code>&nbsp;superclass is called to add the label to the frame. The&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Window.html#pack()\" rel=\"nofollow\">pack()</a></code></b>&nbsp;method inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Window.html\" rel=\"nofollow\">Window</a></code>&nbsp;superclass is called to size the window and lay out its contents.</p>\n\n<p>The&nbsp;<code><b>main()</b></code>&nbsp;method is called by the Java virtual machine when the program starts. It&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_(computer_science)\" title=\"Object (computer science)\">instantiates</a>&nbsp;a new&nbsp;<b><code>Hello</code></b>&nbsp;frame and causes it to be displayed by calling the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Component.html#setVisible(boolean)\" rel=\"nofollow\">setVisible(boolean)</a></code></b>&nbsp;method inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Component.html\" rel=\"nofollow\">Component</a></code>&nbsp;superclass with the boolean parameter&nbsp;<code><b>true</b></code>. Once the frame is displayed, exiting the&nbsp;<code>main</code>&nbsp;method does not cause the program to terminate because the AWT&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event_dispatching_thread\" title=\"Event dispatching thread\">event dispatching thread</a>&nbsp;remains active until all of the Swing top-level windows have been disposed.</p>\n\n<h3>Generics</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Generics_in_Java\" title=\"Generics in Java\">Generics in Java</a></p>\n\n<p>In 2004,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Generic_programming\" title=\"Generic programming\">generics</a>&nbsp;were added to the Java language, as part of J2SE 5.0. Prior to the introduction of generics, each variable declaration had to be of a specific type. For container classes, for example, this is a problem because there is no easy way to create a container that accepts only specific types of objects. Either the container operates on all subtypes of a class or interface, usually&nbsp;<code>Object</code>, or a different container class has to be created for each contained class. Generics allow compile-time type checking without having to create many container classes, each containing almost identical code. In addition to enabling more efficient code, certain runtime exceptions are prevented from occurring, by issuing compile-time errors. If Java prevented all runtime type errors (<code>ClassCastException</code>\'s) from occurring, it would be&nbsp;<a href=\"https://en.wikipedia.org/wiki/Type_safety\" title=\"Type safety\">type safe</a>.</p>\n\n<p>In 2016, the type system was shown not to be safe at all, it was proven&nbsp;<a href=\"https://en.wikipedia.org/wiki/Soundness\" title=\"Soundness\">unsound</a>.<sup id=\"cite_ref-54\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-54\">[54]</a></sup></p>\n\n<h2>Criticism</h2>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Criticism_of_Java\" title=\"Criticism of Java\">Criticism of Java</a></p>\n\n<p>Criticisms directed at Java include the implementation of generics,<sup id=\"cite_ref-55\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-55\">[55]</a></sup>&nbsp;speed,<sup id=\"cite_ref-56\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-56\">[56]</a></sup>&nbsp;the handling of unsigned numbers,<sup id=\"cite_ref-57\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-57\">[57]</a></sup>&nbsp;the implementation of floating-point arithmetic,<sup id=\"cite_ref-58\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-58\">[58]</a></sup>&nbsp;and a history of security vulnerabilities in the primary Java VM implementation&nbsp;<a href=\"https://en.wikipedia.org/wiki/HotSpot\" title=\"HotSpot\">HotSpot</a>.<sup id=\"cite_ref-59\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-59\">[59]</a></sup></p>\n\n<h2>Use outside of the Java platform</h2>\n\n<p>The Java programming language requires the presence of a software platform in order for compiled programs to be executed. Oracle supplies the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_platform\" title=\"Java platform\">Java platform</a>&nbsp;for use with Java. The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_SDK\" title=\"Android SDK\">Android SDK</a>&nbsp;is an alternative software platform, used primarily for developing&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_application\" title=\"Android application\">Android applications</a>.</p>\n\n<h3>Android</h3>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Android_6.0-en.png\"><img alt=\"\" data-file-height=\"1920\" data-file-width=\"1080\" height=\"302\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Android_6.0-en.png/170px-Android_6.0-en.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Android_6.0-en.png/255px-Android_6.0-en.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Android_6.0-en.png/340px-Android_6.0-en.png 2x\" width=\"170\" /></a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_(operating_system)\" title=\"Android (operating system)\">Android</a>&nbsp;operating system makes extensive use of Java-related technology.</p>\n\n<p>The Java language is a key pillar in&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_(operating_system)\" title=\"Android (operating system)\">Android</a>, an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Open_source\" title=\"Open source\">open source</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Mobile_operating_system\" title=\"Mobile operating system\">mobile operating system</a>. Although Android, built on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Linux_kernel\" title=\"Linux kernel\">Linux kernel</a>, is written largely in C, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_software_development#SDK\" title=\"Android software development\">Android SDK</a>&nbsp;uses the Java language as the basis for Android applications. The bytecode language supported by the Android SDK is incompatible with Java bytecode and runs on its own virtual machine, optimized for low-memory devices such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Smartphone\" title=\"Smartphone\">smartphones</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Tablet_computer\" title=\"Tablet computer\">tablet computers</a>. Depending on the Android version, the bytecode is either interpreted by the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Dalvik_virtual_machine\" title=\"Dalvik virtual machine\">Dalvik virtual machine</a>&nbsp;or compiled into native code by the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_Runtime\" title=\"Android Runtime\">Android Runtime</a>.</p>\n\n<p>Android does not provide the full Java SE standard library, although the Android SDK does include an independent implementation of a large subset of it. It supports Java 6 and some Java 7 features, offering an implementation compatible with the standard library (<a href=\"https://en.wikipedia.org/wiki/Apache_Harmony\" title=\"Apache Harmony\">Apache Harmony</a>).</p>\n\n<h4>Controversy</h4>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oracle_America,_Inc._v._Google,_Inc.\" title=\"Oracle America, Inc. v. Google, Inc.\">Oracle America, Inc. v. Google, Inc.</a></p>\n\n<p>The use of Java-related technology in Android led to a legal dispute between Oracle and Google. On May 7, 2012, a San Francisco jury found that if APIs could be copyrighted, then Google had infringed Oracle\'s copyrights by the use of Java in Android devices.<sup id=\"cite_ref-60\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-60\">[60]</a></sup>&nbsp;District Judge&nbsp;<a href=\"https://en.wikipedia.org/wiki/William_Haskell_Alsup\" title=\"William Haskell Alsup\">William Haskell Alsup</a>&nbsp;ruled on May 31, 2012, that APIs cannot be copyrighted,<sup id=\"cite_ref-61\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-61\">[61]</a></sup>&nbsp;but this was reversed by the United States Court of Appeals for the Federal Circuit in May 2014.<sup id=\"cite_ref-cnet_appeals_62-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-cnet_appeals-62\">[62]</a></sup>&nbsp;On May 26, 2016, the district court decided in favor of Google, ruling the copyright infringement of the Java API in Android constitutes fair use.<sup id=\"cite_ref-63\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-63\">[63]</a></sup></p>','Test Test','6/12/2017','8',1),(44479,'<p><b>Java</b>&nbsp;is a general-purpose&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_language\" title=\"Programming language\">computer programming language</a>&nbsp;that is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_computing\" title=\"Concurrent computing\">concurrent</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class-based_programming\" title=\"Class-based programming\">class-based</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" title=\"Object-oriented programming\">object-oriented</a>,<sup id=\"cite_ref-FOOTNOTEGoslingJoySteeleBracha20141_14-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-FOOTNOTEGoslingJoySteeleBracha20141-14\">[14]</a></sup>&nbsp;and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"<a href=\"https://en.wikipedia.org/wiki/Write_once,_run_anywhere\" title=\"Write once, run anywhere\">write once, run anywhere</a>\" (WORA),<sup id=\"cite_ref-15\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-15\">[15]</a></sup>&nbsp;meaning that&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compiled</a>&nbsp;Java code can run on all platforms that support Java without the need for recompilation.<sup id=\"cite_ref-design_goals_16-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;Java applications are typically compiled to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">bytecode</a>&nbsp;that can run on any&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;(JVM) regardless of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_architecture\" title=\"Computer architecture\">computer architecture</a>. As of 2016, Java is one of the most&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">popular programming languages in use</a>,<sup id=\"cite_ref-17\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-17\">[17]</a></sup><sup id=\"cite_ref-18\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-18\">[18]</a></sup><sup id=\"cite_ref-languagepopularity2013_19-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-languagepopularity2013-19\">[19]</a></sup><sup id=\"cite_ref-20\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-20\">[20]</a></sup>&nbsp;particularly for client-server web applications, with a reported 9 million developers.<sup id=\"cite_ref-21\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-21\">[21]</a></sup>&nbsp;Java was originally developed by&nbsp;<a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>&nbsp;at&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;(which has since been&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_acquisition_by_Oracle\" title=\"Sun acquisition by Oracle\">acquired by Oracle Corporation</a>) and released in 1995 as a core component of Sun Microsystems\'&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java platform</a>. The language derives much of its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Syntax_(programming_languages)\" title=\"Syntax (programming languages)\">syntax</a>&nbsp;from&nbsp;<a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\" title=\"C (programming language)\">C</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>, but it has fewer&nbsp;<a href=\"https://en.wikipedia.org/wiki/Low-level_programming_language\" title=\"Low-level programming language\">low-level</a>&nbsp;facilities than either of them.</p>\n\n<p>The original and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Reference_implementation\" title=\"Reference implementation\">reference implementation</a>&nbsp;Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compilers</a>, virtual machines, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Library_(computing)\" title=\"Library (computing)\">class libraries</a>&nbsp;were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>, Sun&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_relicensing\" title=\"Software relicensing\">relicensed</a>&nbsp;most of its Java technologies under the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>. Others have also developed alternative implementations of these Sun technologies, such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Compiler_for_Java\" title=\"GNU Compiler for Java\">GNU Compiler for Java</a>&nbsp;(bytecode compiler),&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Classpath\" title=\"GNU Classpath\">GNU Classpath</a>&nbsp;(standard libraries), and&nbsp;<a href=\"https://en.wikipedia.org/wiki/IcedTea\" title=\"IcedTea\">IcedTea</a>-Web (browser plugin for applets).</p>\n\n<p>The latest version is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 8</a>&nbsp;which is the only version currently supported for free by Oracle, although earlier versions are supported both by Oracle and other companies on a commercial basis.</p>\n\n<h2>Contents</h2>\n\n<p>&nbsp;&nbsp;[<a role=\"button\" tabindex=\"0\">hide</a>]&nbsp;</p>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#History\">1History</a>\n\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Principles\">1.1Principles</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Versions\">1.2Versions</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Practices\">2Practices</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Java_platform\">2.1Java platform</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Implementations\">2.1.1Implementations</a></li>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Performance\">2.1.2Performance</a></li>\n		</ul>\n		</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Automatic_memory_management\">2.2Automatic memory management</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Syntax\">3Syntax</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#.22Hello_world.22_example\">4\"Hello world\" example</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Special_classes\">5Special classes</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Applet\">5.1Applet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Servlet\">5.2Servlet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#JavaServer_Pages\">5.3JavaServer Pages</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Swing_application\">5.4Swing application</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Generics\">5.5Generics</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Criticism\">6Criticism</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Use_outside_of_the_Java_platform\">7Use outside of the Java platform</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Android\">7.1Android</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Controversy\">7.1.1Controversy</a></li>\n		</ul>\n		</li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Class_libraries\">8Class libraries</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Documentation\">9Documentation</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Editions\">10Editions</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#See_also\">11See also</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Comparison_of_Java_with_other_languages\">11.1Comparison of Java with other languages</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Notes\">12Notes</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#References\">13References</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#External_links\">14External links</a></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h2>History</h2>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)#History\" title=\"Java (software platform)\">Java (software platform) §&nbsp;History</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Duke_(Java_mascot)_waving.svg\"><img alt=\"\" data-file-height=\"407\" data-file-width=\"226\" height=\"306\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/170px-Duke_%28Java_mascot%29_waving.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/255px-Duke_%28Java_mascot%29_waving.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/340px-Duke_%28Java_mascot%29_waving.svg.png 2x\" width=\"170\" /></a></p>\n\n<p>Duke, the Java mascot</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:James_Gosling_2008.jpg\"><img alt=\"\" data-file-height=\"1469\" data-file-width=\"1460\" height=\"221\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/220px-James_Gosling_2008.jpg\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/330px-James_Gosling_2008.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/440px-James_Gosling_2008.jpg 2x\" width=\"220\" /></a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, the creator of Java (2008)</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Tiobeindex.png\"><img alt=\"\" data-file-height=\"426\" data-file-width=\"704\" height=\"133\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/220px-Tiobeindex.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/330px-Tiobeindex.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/440px-Tiobeindex.png 2x\" width=\"220\" /></a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/TIOBE_index\" title=\"TIOBE index\">TIOBE</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">programming language popularity index</a>&nbsp;graph from 2002 to 2015. Over the course of a decade Java (blue) and C (black) competing for the top position.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, Mike Sheridan, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Patrick_Naughton\" title=\"Patrick Naughton\">Patrick Naughton</a>&nbsp;initiated the Java language project in June 1991.<sup id=\"cite_ref-22\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-22\">[22]</a></sup>&nbsp;Java was originally designed for interactive television, but it was too advanced for the digital cable television industry at the time.<sup id=\"cite_ref-23\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-23\">[23]</a></sup>&nbsp;The language was initially called&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Oak_(programming_language)\" title=\"Oak (programming language)\">Oak</a></i>&nbsp;after an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oak\" title=\"Oak\">oak</a>&nbsp;tree that stood outside Gosling\'s office. Later the project went by the name&nbsp;<i>Green</i>&nbsp;and was finally renamed&nbsp;<i>Java</i>, from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_coffee\" title=\"Java coffee\">Java coffee</a>.<sup id=\"cite_ref-24\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-24\">[24]</a></sup>&nbsp;Gosling designed Java with a C/C++-style syntax that system and application programmers would find familiar.<sup id=\"cite_ref-25\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-25\">[25]</a></sup></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;released the first public implementation as Java 1.0 in 1995.<sup id=\"cite_ref-oraclejavahistory_26-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oraclejavahistory-26\">[26]</a></sup>&nbsp;It promised \"Write Once, Run Anywhere\" (WORA), providing no-cost run-times on popular&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computing_platform\" title=\"Computing platform\">platforms</a>. Fairly secure and featuring configurable security, it allowed network- and file-access restrictions. Major&nbsp;<a href=\"https://en.wikipedia.org/wiki/Web_browser\" title=\"Web browser\">web browsers</a>&nbsp;soon incorporated the ability to run&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">Java applets</a></i>&nbsp;within web pages, and Java quickly became popular. The Java 1.0 compiler was re-written&nbsp;<a href=\"https://en.wikipedia.org/wiki/Bootstrapping_(compilers)\" title=\"Bootstrapping (compilers)\">in Java</a>&nbsp;by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Arthur_van_Hoff\" title=\"Arthur van Hoff\">Arthur van Hoff</a>&nbsp;to comply strictly with the Java 1.0 language specification.<sup id=\"cite_ref-27\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-27\">[27]</a></sup>&nbsp;With the advent of&nbsp;<i>Java 2</i>&nbsp;(released initially as J2SE 1.2 in December 1998 – 1999), new versions had multiple configurations built for different types of platforms.&nbsp;<i>J2EE</i>&nbsp;included technologies and APIs for enterprise applications typically run in server environments, while&nbsp;<i>J2ME</i>&nbsp;featured APIs optimized for mobile applications. The desktop version was renamed&nbsp;<i>J2SE</i>. In 2006, for marketing purposes, Sun renamed new&nbsp;<i>J2</i>&nbsp;versions as&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a></i>,&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition\" title=\"Java Platform, Micro Edition\">Java ME</a></i>, and&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition\" title=\"Java Platform, Standard Edition\">Java SE</a></i>, respectively.</p>\n\n<p>In 1997, Sun Microsystems approached the&nbsp;<a href=\"https://en.wikipedia.org/wiki/ISO/IEC_JTC_1\" title=\"ISO/IEC JTC 1\">ISO/IEC JTC 1</a>&nbsp;standards body and later the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>&nbsp;to formalize Java, but it soon withdrew from the process.<sup id=\"cite_ref-28\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-28\">[28]</a></sup><sup id=\"cite_ref-29\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-29\">[29]</a></sup><sup id=\"cite_ref-30\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-30\">[30]</a></sup>&nbsp;Java remains a&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\"><i>de facto</i>&nbsp;standard</a>, controlled through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>.<sup id=\"cite_ref-31\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-31\">[31]</a></sup>At one time, Sun made most of its Java implementations available without charge, despite their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Proprietary_software\" title=\"Proprietary software\">proprietary software</a>&nbsp;status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System.</p>\n\n<p>On November 13, 2006, Sun released much of its Java virtual machine (JVM) as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_and_open-source_software\" title=\"Free and open-source software\">free and open-source software</a>, (FOSS), under the terms of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>&nbsp;(GPL). On May 8, 2007, Sun finished the process, making all of its JVM\'s core code available under&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_software\" title=\"Free software\">free software</a>/open-source distribution terms, aside from a small portion of code to which Sun did not hold the copyright.<sup id=\"cite_ref-32\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-32\">[32]</a></sup></p>\n\n<p>Sun\'s vice-president Rich Green said that Sun\'s ideal role with regard to Java was as an \"evangelist\".<sup id=\"cite_ref-33\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-33\">[33]</a></sup>&nbsp;Following&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>\'s acquisition of Sun Microsystems in 2009–10, Oracle has described itself as the \"steward of Java technology with a relentless commitment to fostering a community of participation and transparency\".<sup id=\"cite_ref-34\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-34\">[34]</a></sup>&nbsp;This did not prevent Oracle from filing a lawsuit against Google shortly after that for using Java inside the Android SDK (see Google section below). Java software runs on everything from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Laptop\" title=\"Laptop\">laptops</a>&nbsp;to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_center\" title=\"Data center\">data centers</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Video_game_console\" title=\"Video game console\">game consoles</a>&nbsp;to scientific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Supercomputer\" title=\"Supercomputer\">supercomputers</a>.<sup id=\"cite_ref-35\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-35\">[35]</a></sup>&nbsp;On April 2, 2010, James Gosling resigned from Oracle.<sup id=\"cite_ref-36\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-36\">[36]</a></sup></p>\n\n<p>In January 2016, Oracle announced that Java runtime environments based on JDK 9 will discontinue the browser plugin.<sup id=\"cite_ref-37\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-37\">[37]</a></sup></p>\n\n<h3>Principles</h3>\n\n<p>There were five primary goals in the creation of the Java language:<sup id=\"cite_ref-design_goals_16-1\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup></p>\n\n<ol>\n	<li>It must be \"simple, object-oriented, and familiar\".</li>\n	<li>It must be \"robust and secure\".</li>\n	<li>It must be \"architecture-neutral and portable\".</li>\n	<li>It must execute with \"high performance\".</li>\n	<li>It must be \"interpreted, threaded, and dynamic\".</li>\n</ol>\n\n<h3>Versions</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java version history</a></p>\n\n<p>As of 2015, only Java 8 is officially supported. Major release versions of Java, along with their release dates:</p>\n\n<ul>\n	<li>JDK 1.0 (January 23, 1996)<sup id=\"cite_ref-38\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-38\">[38]</a></sup></li>\n	<li>JDK 1.1 (February 19, 1997)</li>\n	<li>J2SE 1.2 (December 8, 1998)</li>\n	<li>J2SE 1.3 (May 8, 2000)</li>\n	<li>J2SE 1.4 (February 6, 2002)</li>\n	<li>J2SE 5.0 (September 30, 2004)</li>\n	<li>Java SE 6 (December 11, 2006)</li>\n	<li>Java SE 7 (July 28, 2011)</li>\n	<li>Java SE 8 (March 18, 2014)</li>\n</ul>\n\n<h2>Practices</h2>\n\n<h3>Java platform</h3>\n\n<p>Main articles:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java (software platform)</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a></p>\n\n<p>One design goal of Java is portability, which means that programs written for the Java platform must run similarly on any combination of hardware and operating system with adequate runtime support. This is achieved by compiling the Java language code to an intermediate representation called&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>, instead of directly to architecture-specific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Machine_code\" title=\"Machine code\">machine code</a>. Java bytecode instructions are analogous to machine code, but they are intended to be executed by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Virtual_machine\" title=\"Virtual machine\">virtual machine</a>&nbsp;(VM) written specifically for the host hardware.&nbsp;<a href=\"https://en.wikipedia.org/wiki/End_user\" title=\"End user\">End users</a>&nbsp;commonly use a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java Runtime Environment</a>&nbsp;(JRE) installed on their own machine for standalone Java applications, or in a web browser for Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Applet\" title=\"Applet\">applets</a>.</p>\n\n<p>Standard libraries provide a generic way to access host-specific features such as graphics,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Thread_(computing)\" title=\"Thread (computing)\">threading</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_network\" title=\"Computer network\">networking</a>.</p>\n\n<p>The use of universal bytecode makes porting simple. However, the overhead of interpreting bytecode into machine instructions made interpreted programs almost always run more slowly than native&nbsp;<a href=\"https://en.wikipedia.org/wiki/Executable\" title=\"Executable\">executables</a>.&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">Just-in-time</a>&nbsp;(JIT) compilers that compile bytecodes to machine code during runtime were introduced from an early stage. Java itself is platform-independent and is adapted to the particular platform it is to run on by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;for it, which translates the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>&nbsp;into the platform\'s machine language.<sup id=\"cite_ref-39\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-39\">[39]</a></sup></p>\n\n<h4>Implementations</h4>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_Java_implementations\" title=\"Free Java implementations\">Free Java implementations</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>&nbsp;is the current owner of the official implementation of the Java SE platform, following their acquisition of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;on January 27, 2010. This implementation is based on the original implementation of Java by Sun. The Oracle implementation is available for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Microsoft Windows</a>&nbsp;(still works for XP, while only later versions currently officially supported),&nbsp;<a href=\"https://en.wikipedia.org/wiki/MacOS\" title=\"MacOS\">macOS</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Linux\" title=\"Linux\">Linux</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Solaris_(operating_system)\" title=\"Solaris (operating system)\">Solaris</a>. Because Java lacks any formal standardization recognized by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>, ISO/IEC, ANSI, or other third-party standards organization, the Oracle implementation is the&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\">de facto standard</a>.</p>\n\n<p>The Oracle implementation is packaged into two different distributions: The Java Runtime Environment (JRE) which contains the parts of the Java SE platform required to run Java programs and is intended for end users, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Development_Kit\" title=\"Java Development Kit\">Java Development Kit</a>&nbsp;(JDK), which is intended for software developers and includes development tools such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/JAR_(file_format)\" title=\"JAR (file format)\">Jar</a>, and a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Debugger\" title=\"Debugger\">debugger</a>.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/OpenJDK\" title=\"OpenJDK\">OpenJDK</a>&nbsp;is another notable Java SE implementation that is licensed under the GNU GPL. The implementation started when Sun began releasing the Java source code under the GPL. As of Java SE 7, OpenJDK is the official Java reference implementation.</p>\n\n<p>The goal of Java is to make all implementations of Java compatible. Historically, Sun\'s trademark license for usage of the Java brand insists that all implementations be \"compatible\". This resulted in a legal dispute with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft\" title=\"Microsoft\">Microsoft</a>&nbsp;after Sun claimed that the Microsoft implementation did not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" title=\"Java remote method invocation\">RMI</a>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Native_Interface\" title=\"Java Native Interface\">JNI</a>&nbsp;and had added platform-specific features of their own. Sun sued in 1997, and, in 2001, won a settlement of US$20 million, as well as a court order enforcing the terms of the license from Sun.<sup id=\"cite_ref-40\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-40\">[40]</a></sup>&nbsp;As a result, Microsoft no longer ships Java with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Windows</a>.</p>\n\n<p>Platform-independent Java is essential to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a>, and an even more rigorous validation is required to certify an implementation. This environment enables portable server-side applications.</p>\n\n<h4>Performance</h4>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_performance\" title=\"Java performance\">Java performance</a></p>\n\n<p>Programs written in Java have a reputation for being slower and requiring more memory than those written in C++.<sup id=\"cite_ref-41\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-41\">[41]</a></sup><sup id=\"cite_ref-42\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-42\">[42]</a></sup>&nbsp;However, Java programs\' execution speed improved significantly with the introduction of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">just-in-time compilation</a>&nbsp;in 1997/1998 for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 1.1</a>,<sup id=\"cite_ref-43\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-43\">[43]</a></sup>&nbsp;the addition of language features supporting better code analysis (such as inner classes, the StringBuilder class, optional assertions, etc.), and optimizations in the Java virtual machine, such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/HotSpot\" title=\"HotSpot\">HotSpot</a>&nbsp;becoming the default for Sun\'s JVM in 2000. With Java 1.5, the performance was improved with the addition of the java.util.concurrent package, including&nbsp;<a href=\"https://en.wikipedia.org/wiki/Lock_free\" title=\"Lock free\">Lock free</a>&nbsp;implementations of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_ConcurrentMap\" title=\"Java ConcurrentMap\">ConcurrentMaps</a>&nbsp;and other multi-core collections, and it was improved further Java 1.6.</p>\n\n<p>Some platforms offer direct hardware support for Java; there are microcontrollers that can run Java in hardware instead of a software Java virtual machine<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup>, and some&nbsp;<a href=\"https://en.wikipedia.org/wiki/ARM_architecture\" title=\"ARM architecture\">ARM</a>&nbsp;based processors could have hardware support for executing Java bytecode through their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Jazelle\" title=\"Jazelle\">Jazelle</a>&nbsp;option, though support has mostly been dropped in current implementations of ARM.</p>\n\n<h3>Automatic memory management</h3>\n\n<p>Java uses an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)\" title=\"Garbage collection (computer science)\">automatic garbage collector</a>&nbsp;to manage memory in the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_lifetime\" title=\"Object lifetime\">object lifecycle</a>. The programmer determines when objects are created, and the Java runtime is responsible for recovering the memory once objects are no longer in use. Once no references to an object remain, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Unreachable_memory\" title=\"Unreachable memory\">unreachable memory</a>&nbsp;becomes eligible to be freed automatically by the garbage collector. Something similar to a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_leak\" title=\"Memory leak\">memory leak</a>&nbsp;may still occur if a programmer\'s code holds a reference to an object that is no longer needed, typically when objects that are no longer needed are stored in containers that are still in use. If methods for a nonexistent object are called, a \"null pointer exception\" is thrown.<sup id=\"cite_ref-44\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-44\">[44]</a></sup><sup id=\"cite_ref-45\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-45\">[45]</a></sup></p>\n\n<p>One of the ideas behind Java\'s automatic memory management model is that programmers can be spared the burden of having to perform manual memory management. In some languages, memory for the creation of objects is implicitly allocated on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" title=\"Stack (abstract data type)\">stack</a>&nbsp;or explicitly allocated and deallocated from the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_management#DYNAMIC\" title=\"Memory management\">heap</a>. In the latter case, the responsibility of managing memory resides with the programmer. If the program does not deallocate an object, a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_leak\" title=\"Memory leak\">memory leak</a>&nbsp;occurs. If the program attempts to access or deallocate memory that has already been deallocated, the result is undefined and difficult to predict, and the program is likely to become unstable and/or crash. This can be partially remedied by the use of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Smart_pointer\" title=\"Smart pointer\">smart pointers</a>, but these add overhead and complexity. Note that garbage collection does not prevent \"logical\" memory leaks,&nbsp;<i>i.e.</i>, those where the memory is still referenced but never used.</p>\n\n<p>Garbage collection may happen at any time. Ideally, it will occur when a program is idle. It is guaranteed to be triggered if there is insufficient free memory on the heap to allocate a new object; this can cause a program to stall momentarily. Explicit memory management is not possible in Java.</p>\n\n<p>Java does not support C/C++ style&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pointer_(computer_programming)\" title=\"Pointer (computer programming)\">pointer arithmetic</a>, where object addresses and unsigned integers (usually long integers) can be used interchangeably. This allows the garbage collector to relocate referenced objects and ensures type safety and security.</p>\n\n<p>As in C++ and some other object-oriented languages, variables of Java\'s&nbsp;<a href=\"https://en.wikipedia.org/wiki/Primitive_data_type\" title=\"Primitive data type\">primitive data types</a>&nbsp;are either stored directly in fields (for objects) or on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack-based_memory_allocation\" title=\"Stack-based memory allocation\">stack</a>&nbsp;(for methods) rather than on the heap, as is commonly true for non-primitive data types (but see&nbsp;<a href=\"https://en.wikipedia.org/wiki/Escape_analysis\" title=\"Escape analysis\">escape analysis</a>). This was a conscious decision by Java\'s designers for performance reasons.</p>\n\n<p>Java contains multiple types of garbage collectors. By default, HotSpot uses the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Parallel_scavenge_garbage_collector&amp;action=edit&amp;redlink=1\" title=\"Parallel scavenge garbage collector (page does not exist)\">parallel scavenge garbage collector</a>.<sup id=\"cite_ref-46\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-46\">[46]</a></sup>&nbsp;However, there are also several other garbage collectors that can be used to manage the heap. For 90% of applications in Java, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_mark_sweep_collector\" title=\"Concurrent mark sweep collector\">Concurrent Mark-Sweep</a>&nbsp;(CMS) garbage collector is sufficient.<sup id=\"cite_ref-47\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-47\">[47]</a></sup>Oracle aims to replace CMS with the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Garbage-First_collector&amp;action=edit&amp;redlink=1\" title=\"Garbage-First collector (page does not exist)\">Garbage-First collector</a>&nbsp;(G1).<sup id=\"cite_ref-48\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-48\">[48]</a></sup></p>\n\n<h2>Syntax</h2>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_syntax\" title=\"Java syntax\">Java syntax</a></p>\n\n<p>The syntax of Java is largely influenced by&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>. Unlike C++, which combines the syntax for structured, generic, and object-oriented programming, Java was built almost exclusively as an object-oriented language.<sup id=\"cite_ref-design_goals_16-2\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;All code is written inside classes, and every data item is an object, with the exception of the primitive data types, (<i>i.e.</i>&nbsp;integers, floating-point numbers,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Boolean_data_type\" title=\"Boolean data type\">boolean values</a>, and characters), which are not objects for performance reasons. Java reuses some popular aspects of C++ (such as printf() method).</p>\n\n<p>Unlike C++, Java does not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Operator_overloading\" title=\"Operator overloading\">operator overloading</a><sup id=\"cite_ref-msdn_operator_overloading_49-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-msdn_operator_overloading-49\">[49]</a></sup>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Multiple_inheritance\" title=\"Multiple inheritance\">multiple inheritance</a>&nbsp;for&nbsp;<i>classes</i>, though multiple inheritance is supported for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interfaces</a>.<sup id=\"cite_ref-oracle_multiple_inheritance_50-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oracle_multiple_inheritance-50\">[50]</a></sup>&nbsp;This simplifies the language and aids in preventing potential errors and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Anti-pattern\" title=\"Anti-pattern\">anti-pattern</a>&nbsp;design.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup></p>\n\n<p>Java uses comments similar to those of C++. There are three different styles of comments: a single line style marked with two slashes (<code>//</code>), a multiple line style opened with&nbsp;<code>/*</code>&nbsp;and closed with&nbsp;<code>*/</code>, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>&nbsp;commenting style opened with&nbsp;<code>/**</code>&nbsp;and closed with&nbsp;<code>*/</code>. The Javadoc style of commenting allows the user to run the Javadoc executable to create documentation for the program and can be read by some&nbsp;<a href=\"https://en.wikipedia.org/wiki/Integrated_development_environment\" title=\"Integrated development environment\">integrated development environments</a>&nbsp;(IDEs) such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Eclipse_(software)\" title=\"Eclipse (software)\">Eclipse</a>&nbsp;to allow developers to access documentation within the IDE.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n// This is an example of a single line comment using two slashes\n\n/* This is an example of a multiple line comment using the slash and asterisk.\n This type of comment can be used to hold a lot of information or deactivate\n code, but it is very important to remember to close the comment. */\n\npackage fibsandlies;\nimport java.util.HashMap;\n\n/**\n * This is an example of a Javadoc comment; Javadoc can compile documentation\n * from this text. Javadoc comments must immediately precede the class, method, or field being documented.\n */\npublic class FibCalculator extends Fibonacci implements Calculator {\n    private static Map&lt;Integer, Integer&gt; memoized = new HashMap&lt;Integer, Integer&gt;();\n\n    /*\n     * The main method written as follows is used by the JVM as a starting point for the program.\n     */\n    public static void main(String[] args) {\n        memoized.put(1, 1);\n        memoized.put(2, 1);\n        System.out.println(fibonacci(12)); //Get the 12th Fibonacci number and print to console\n    }\n\n    /**\n     * An example of a method written in Java, wrapped in a class.\n     * Given a non-negative number FIBINDEX, returns\n     * the Nth Fibonacci number, where N equals FIBINDEX.\n     * @param fibIndex The index of the Fibonacci number\n     * @return The Fibonacci number\n     */\n    public static int fibonacci(int fibIndex) {\n        if (memoized.containsKey(fibIndex)) {\n            return memoized.get(fibIndex);\n        } else {\n            int answer = fibonacci(fibIndex - 1) + fibonacci(fibIndex - 2);\n            memoized.put(fibIndex, answer);\n            return answer;\n        }\n    }\n}\n</pre>\n\n<h2>\"Hello world\" example</h2>\n\n<p>The traditional&nbsp;<a href=\"https://en.wikipedia.org/wiki/%22Hello,_world!%22_program\" title=\"&quot;Hello, world!&quot; program\">\"Hello, world!\" program</a>&nbsp;can be written in Java as:<sup id=\"cite_ref-51\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-51\">[51]</a></sup></p>\n\n<pre>\nclass HelloWorldApp {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\"); // Prints the string to the console.\n    }\n}</pre>\n\n<p>Source files must be named after the public class they contain, appending the suffix&nbsp;<code>.java</code>, for example,&nbsp;<code>HelloWorldApp.java</code>. It must first be compiled into bytecode, using a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>, producing a file named&nbsp;<code>HelloWorldApp.class</code>. Only then can it be executed, or \"launched\". The Java source file may only contain one public class, but it can contain multiple classes with other than public access and any number of public&nbsp;<a href=\"https://en.wikipedia.org/wiki/Inner_class\" title=\"Inner class\">inner classes</a>. When the source file contains multiple classes, make one class \"public\" and name the source file with that public class name.</p>\n\n<p>A&nbsp;<code><b>class</b></code>&nbsp;that is not declared&nbsp;<code><b>public</b></code>&nbsp;may be stored in any .java file. The compiler will generate a class file for each class defined in the source file. The name of the class file is the name of the class, with&nbsp;<i>.class</i>&nbsp;appended. For class file generation,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class_(computer_programming)#Unnamed\" title=\"Class (computer programming)\">anonymous classes</a>&nbsp;are treated as if their name were the concatenation of the name of their enclosing class, a&nbsp;<i>$</i>, and an integer.</p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/List_of_Java_keywords\" title=\"List of Java keywords\">keyword</a>&nbsp;<code><b>public</b></code>&nbsp;denotes that a method can be called from code in other classes, or that a class may be used by classes outside the class hierarchy. The class hierarchy is related to the name of the directory in which the .java file is located. This is called an access level modifier. Other access level modifiers include the keywords&nbsp;<code><b>private</b></code>&nbsp;and&nbsp;<code><b>protected</b></code>.</p>\n\n<p>The keyword&nbsp;<code><b>static</b></code>&nbsp;in front of a method indicates a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Method_(computer_programming)#Static_methods\" title=\"Method (computer programming)\">static method</a>, which is associated only with the class and not with any specific instance of that class. Only static methods can be invoked without a reference to an object. Static methods cannot access any class members that are not also static. Methods that are not designated static are instance methods and require a specific instance of a class to operate.</p>\n\n<p>The keyword&nbsp;<code><b>void</b></code>&nbsp;indicates that the main method does not return any value to the caller. If a Java program is to exit with an error code, it must call System.exit() explicitly.</p>\n\n<p>The method name \"<code>main</code>\" is not a keyword in the Java language. It is simply the name of the method the Java launcher calls to pass control to the program. Java classes that run in managed environments such as applets and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Enterprise_JavaBeans\" title=\"Enterprise JavaBeans\">Enterprise JavaBeans</a>&nbsp;do not use or need a&nbsp;<code>main()</code>&nbsp;method. A Java program may contain multiple classes that have&nbsp;<code>main</code>&nbsp;methods, which means that the VM needs to be explicitly told which class to launch from.</p>\n\n<p>The main method must accept an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Array_data_type\" title=\"Array data type\">array</a>&nbsp;of&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\" rel=\"nofollow\">String</a></code></b>&nbsp;objects. By convention, it is referenced as&nbsp;<code><b>args</b></code>&nbsp;although any other legal identifier name can be used. Since Java 5, the main method can also use&nbsp;<a href=\"https://en.wikipedia.org/wiki/Variadic_function\" title=\"Variadic function\">variable arguments</a>, in the form of&nbsp;<code>public static void main(String... args)</code>, allowing the main method to be invoked with an arbitrary number of&nbsp;<code>String</code>&nbsp;arguments. The effect of this alternate declaration is semantically identical (the&nbsp;<code>args</code>&nbsp;parameter is still an array of&nbsp;<code>String</code>&nbsp;objects), but it allows an alternative syntax for creating and passing the array.</p>\n\n<p>The Java launcher launches Java by loading a given class (specified on the command line or as an attribute in a&nbsp;<a href=\"https://en.wikipedia.org/wiki/JAR_(file_format)\" title=\"JAR (file format)\">JAR</a>) and starting its&nbsp;<code>public static void main(String[])</code>&nbsp;method. Stand-alone programs must declare this method explicitly. The&nbsp;<code>String[] args</code>&nbsp;parameter is an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Array_data_type\" title=\"Array data type\">array</a>&nbsp;of&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\" rel=\"nofollow\">String</a></code>&nbsp;objects containing any arguments passed to the class. The parameters to&nbsp;<code>main</code>&nbsp;are often passed by means of a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Command-line_interface\" title=\"Command-line interface\">command line</a>.</p>\n\n<p>Printing is part of a Java standard library: The&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/System.html\" rel=\"nofollow\">System</a></code></b>&nbsp;class defines a public static field called&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#out\" rel=\"nofollow\">out</a></code></b>. The&nbsp;<code>out</code>&nbsp;object is an instance of the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html\" rel=\"nofollow\">PrintStream</a></code>class and provides many methods for printing data to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Standard_streams\" title=\"Standard streams\">standard out</a>, including&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html#println(java.lang.String)\" rel=\"nofollow\">println(String)</a></code></b>&nbsp;which also appends a new line to the passed string.</p>\n\n<p>The string \"Hello World!\" is automatically converted to a String object by the compiler.</p>\n\n<h2>Special classes</h2>\n\n<table role=\"presentation\">\n	<tbody>\n		<tr>\n			<td>\n			<p><img alt=\"\" data-file-height=\"40\" data-file-width=\"40\" height=\"40\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/40px-Ambox_important.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/60px-Ambox_important.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/80px-Ambox_important.svg.png 2x\" width=\"40\" /></p>\n			</td>\n			<td>This section&nbsp;<b>contains&nbsp;<a href=\"https://en.wikipedia.org/wiki/Wikipedia:What_Wikipedia_is_not#NOTHOWTO\" title=\"Wikipedia:What Wikipedia is not\">instructions, advice, or how-to content</a></b>.&nbsp;The purpose of Wikipedia is to present facts, not to train. Please help&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Java_(programming_language)&amp;action=edit\">improve this article</a>&nbsp;either by rewriting the how-to content or by&nbsp;<a href=\"https://meta.wikimedia.org/wiki/Help:Transwiki\" title=\"m:Help:Transwiki\">moving</a>&nbsp;it to&nbsp;<a href=\"https://en.wikiversity.org/wiki/\" title=\"v:\">Wikiversity</a>,&nbsp;<a href=\"https://en.wikibooks.org/wiki/\" title=\"b:\">Wikibooks</a>&nbsp;or&nbsp;<a href=\"https://en.wikivoyage.org/wiki/\" title=\"voy:\">Wikivoyage</a>.&nbsp;<small><i>(January 2012)</i></small></td>\n		</tr>\n	</tbody>\n</table>\n\n<h3>Applet</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">Java applet</a></p>\n\n<p>Java applets are programs that are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Embedded_system#Embedded_software_architectures\" title=\"Embedded system\">embedded</a>&nbsp;in other applications, typically in a Web page displayed in a web browser.</p>\n\n<pre>\n// Hello.java\nimport javax.swing.JApplet;\nimport java.awt.Graphics;\n\npublic class Hello extends JApplet {\n    public void paintComponent(final Graphics g) {\n        g.drawString(\"Hello, world!\", 65, 95);\n    }\n}\n</pre>\n\n<p>The&nbsp;<code><b>import</b></code>&nbsp;statements direct the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>&nbsp;to include the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JApplet.html\" rel=\"nofollow\">javax.swing.JApplet</a></code></b>&nbsp;and&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Graphics.html\" rel=\"nofollow\">java.awt.Graphics</a></code></b>&nbsp;classes in the compilation. The import statement allows these classes to be referenced in the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Source_code\" title=\"Source code\">source code</a>&nbsp;using the&nbsp;<i>simple class name</i>&nbsp;(i.e.&nbsp;<code>JApplet</code>) instead of the&nbsp;<i>fully qualified class name</i>&nbsp;(<i>FQCN</i>, i.e.&nbsp;<code>javax.swing.JApplet</code>).</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class&nbsp;<code><b>extends</b></code>&nbsp;(<a href=\"https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)#Subclasses_and_superclasses\" title=\"Inheritance (object-oriented programming)\">subclasses</a>) the&nbsp;<code><b>JApplet</b></code>&nbsp;(Java Applet) class; the&nbsp;<code>JApplet</code>&nbsp;class provides the framework for the host application to display and control the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_lifetime\" title=\"Object lifetime\">lifecycle</a>&nbsp;of the applet. The&nbsp;<code>JApplet</code>&nbsp;class is a JComponent (Java Graphical Component) which provides the applet with the capability to display a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_user_interface\" title=\"Graphical user interface\">graphical user interface</a>&nbsp;(GUI) and respond to user&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event-driven_programming\" title=\"Event-driven programming\">events</a>.</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class&nbsp;<a href=\"https://en.wikipedia.org/wiki/Method_overriding\" title=\"Method overriding\">overrides</a>&nbsp;the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#paint(java.awt.Graphics)\" rel=\"nofollow\">paintComponent(Graphics)</a></code></b>&nbsp;method (additionally indicated with the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_annotation\" title=\"Java annotation\">annotation</a>, supported as of JDK 1.5,&nbsp;<code>Override</code>) inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html\" rel=\"nofollow\">Container</a></code>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)#Subclasses_and_superclasses\" title=\"Inheritance (object-oriented programming)\">superclass</a>&nbsp;to provide the code to display the applet. The&nbsp;<code>paintComponent()</code>&nbsp;method is passed a&nbsp;<code><b>Graphics</b></code>&nbsp;object that contains the graphic context used to display the applet. The&nbsp;<code>paintComponent()</code>&nbsp;method calls the graphic context&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Graphics.html#drawString(java.lang.String,%20int,%20int)\" rel=\"nofollow\">drawString(String, int, int)</a></code></b>&nbsp;method to display the&nbsp;<b>\"Hello, world!\"</b>&nbsp;string at a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pixel\" title=\"Pixel\">pixel</a>&nbsp;offset of (<code><b>65, 95</b></code>) from the upper-left corner in the applet\'s display.</p>\n\n<pre>\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n&lt;!-- Hello.html --&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Hello World Applet&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;applet code=\"Hello.class\" width=\"200\" height=\"200\"&gt;\n        &lt;/applet&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>An applet is placed in an&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;document using the&nbsp;<b><code>&lt;applet&gt;</code></b>&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML_element\" title=\"HTML element\">HTML element</a>. The&nbsp;<code>applet</code>&nbsp;tag has three attributes set:&nbsp;<b><code>code=\"Hello\"</code></b>&nbsp;specifies the name of the&nbsp;<code>JApplet</code>&nbsp;class and&nbsp;<b><code>width=\"200\" height=\"200\"</code></b>&nbsp;sets the pixel width and height of the applet. Applets may also be embedded in HTML using either the&nbsp;<code>object</code>&nbsp;or&nbsp;<code>embed</code>&nbsp;element,<sup id=\"cite_ref-52\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-52\">[52]</a></sup>&nbsp;although support for these elements by web browsers is inconsistent.<sup id=\"cite_ref-53\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-53\">[53]</a></sup>&nbsp;However, the&nbsp;<code>applet</code>&nbsp;tag is deprecated, so the&nbsp;<code>object</code>&nbsp;tag is preferred where supported.</p>\n\n<p>The host application, typically a Web browser, instantiates the&nbsp;<b><code>Hello</code></b>&nbsp;applet and creates an&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/applet/AppletContext.html\" rel=\"nofollow\">AppletContext</a></code>&nbsp;for the applet. Once the applet has initialized itself, it is added to the AWT display hierarchy. The&nbsp;<code>paintComponent()</code>&nbsp;method is called by the AWT&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event_dispatching_thread\" title=\"Event dispatching thread\">event dispatching thread</a>&nbsp;whenever the display needs the applet to draw itself.</p>\n\n<h3>Servlet</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Servlet\" title=\"Java Servlet\">Java Servlet</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Java_Servlet\" title=\"Java Servlet\">Java Servlet</a>&nbsp;technology provides Web developers with a simple, consistent mechanism for extending the functionality of a Web server and for accessing existing business systems. Servlets are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Server-side\" title=\"Server-side\">server-side</a>&nbsp;Java EE components that generate responses (typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;pages) to requests (typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" title=\"Hypertext Transfer Protocol\">HTTP</a>&nbsp;requests) from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Client_(computing)\" title=\"Client (computing)\">clients</a>. A servlet can almost be thought of as an applet that runs on the server side—without a face.</p>\n\n<pre>\n// Hello.java\nimport java.io.*;\nimport javax.servlet.*;\n\npublic class Hello extends GenericServlet {\n    public void service(final ServletRequest request, final ServletResponse response)\n    throws ServletException, IOException {\n        response.setContentType(\"text/html\");\n        final PrintWriter pw = response.getWriter();\n        try {\n            pw.println(\"Hello, world!\");\n        } finally {\n            pw.close();\n        }\n    }\n}</pre>\n\n<p>The&nbsp;<b><code>import</code></b>&nbsp;statements direct the Java compiler to include all the public classes and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interfaces</a>&nbsp;from the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/package-summary.html\" rel=\"nofollow\">java.io</a></code></b>&nbsp;and&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/package-summary.html\" rel=\"nofollow\">javax.servlet</a></code></b>&nbsp;packages in the compilation. Packages make Java well suited for large scale applications.</p>\n\n<p>The&nbsp;<code><b>Hello</b></code>&nbsp;class&nbsp;<code><b>extends</b></code>&nbsp;the&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/GenericServlet.html\" rel=\"nofollow\">GenericServlet</a></code></b>&nbsp;class; the&nbsp;<code>GenericServlet</code>&nbsp;class provides the interface for the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Server_(computing)\" title=\"Server (computing)\">server</a>&nbsp;to forward requests to the servlet and control the servlet\'s lifecycle.</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class overrides the&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/Servlet.html#service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)\" rel=\"nofollow\">service(ServletRequest, ServletResponse)</a></code></b>&nbsp;method defined by the&nbsp;<code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/Servlet.html\" rel=\"nofollow\">Servlet</a></code>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interface</a>&nbsp;to provide the code for the service request handler. The&nbsp;<code>service()</code>&nbsp;method is passed: a&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html\" rel=\"nofollow\">ServletRequest</a></code></b>&nbsp;object that contains the request from the client and a&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletResponse.html\" rel=\"nofollow\">ServletResponse</a></code></b>object used to create the response returned to the client. The&nbsp;<code>service()</code>&nbsp;method declares that it&nbsp;<code><b>throws</b></code>&nbsp;the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Exception_handling\" title=\"Exception handling\">exceptions</a>&nbsp;<code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletException.html\" rel=\"nofollow\">ServletException</a></code>&nbsp;and&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\" rel=\"nofollow\">IOException</a></code>&nbsp;if a problem prevents it from responding to the request.</p>\n\n<p>The&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletResponse.html#setContentType(java.lang.String)\" rel=\"nofollow\">setContentType(String)</a></code></b>&nbsp;method in the response object is called to set the&nbsp;<a href=\"https://en.wikipedia.org/wiki/MIME\" title=\"MIME\">MIME</a>&nbsp;content type of the returned data to&nbsp;<b>\"text/html\"</b>. The&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletResponse.html#getWriter()\" rel=\"nofollow\">getWriter()</a></code></b>&nbsp;method in the response returns a&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintWriter.html\" rel=\"nofollow\">PrintWriter</a></code></b>&nbsp;object that is used to write the data that is sent to the client. The&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintWriter.html#println(java.lang.String)\" rel=\"nofollow\">println(String)</a></code></b>method is called to write the&nbsp;<b>\"Hello, world!\"</b>&nbsp;string to the response and then the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintWriter.html#close()\" rel=\"nofollow\">close()</a></code></b>&nbsp;method is called to close the print writer, which causes the data that has been written to the stream to be returned to the client.</p>\n\n<h3>JavaServer Pages</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/JavaServer_Pages\" title=\"JavaServer Pages\">JavaServer Pages</a></p>\n\n<p>JavaServer Pages (JSP) are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Server-side\" title=\"Server-side\">server-side</a>&nbsp;Java EE components that generate responses, typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;pages, to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" title=\"Hypertext Transfer Protocol\">HTTP</a>&nbsp;requests from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Client_(computing)\" title=\"Client (computing)\">clients</a>. JSPs embed Java code in an HTML page by using the special&nbsp;<a href=\"https://en.wikipedia.org/wiki/Delimiter\" title=\"Delimiter\">delimiters</a>&nbsp;<code>&lt;%</code>&nbsp;and&nbsp;<code>%&gt;</code>. A JSP is compiled to a Java&nbsp;<i>servlet</i>, a Java application in its own right, the first time it is accessed. After that, the generated servlet creates the response.</p>\n\n<h3>Swing application</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Swing_(Java)\" title=\"Swing (Java)\">Swing (Java)</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Swing_(Java)\" title=\"Swing (Java)\">Swing</a>&nbsp;is a graphical user interface&nbsp;<a href=\"https://en.wikipedia.org/wiki/Library_(computing)\" title=\"Library (computing)\">library</a>&nbsp;for the Java SE platform. It is possible to specify a different look and feel through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pluggable_look_and_feel\" title=\"Pluggable look and feel\">pluggable look and feel</a>&nbsp;system of Swing. Clones of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Windows</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/GTK%2B\" title=\"GTK+\">GTK+</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Motif_(software)\" title=\"Motif (software)\">Motif</a>&nbsp;are supplied by Sun.&nbsp;<a href=\"https://en.wikipedia.org/wiki/Apple_Inc.\" title=\"Apple Inc.\">Apple</a>&nbsp;also provides an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Aqua_(user_interface)\" title=\"Aqua (user interface)\">Aqua</a>&nbsp;look and feel for&nbsp;<a href=\"https://en.wikipedia.org/wiki/MacOS\" title=\"MacOS\">macOS</a>. Where prior implementations of these looks and feels may have been considered lacking, Swing in Java SE 6 addresses this problem by using more native&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_control_element\" title=\"Graphical control element\">GUI widget</a>&nbsp;drawing routines of the underlying platforms.</p>\n\n<p>This example Swing application creates a single window with \"Hello, world!\" inside:</p>\n\n<pre>\n// Hello.java (Java SE 5)\nimport javax.swing.*;\n\npublic class Hello extends JFrame {\n    public Hello() {\n        super(\"hello\");\n        super.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n        super.add(new JLabel(\"Hello, world!\"));\n        super.pack();\n        super.setVisible(true);\n    }\n\n    public static void main(final String[] args) {\n        new Hello();\n    }\n}\n</pre>\n\n<p>The first&nbsp;<b><code>import</code></b>&nbsp;includes all the public classes and interfaces from the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/package-summary.html\" rel=\"nofollow\">javax.swing</a></code></b>&nbsp;package.</p>\n\n<p>The&nbsp;<code><b>Hello</b></code>&nbsp;class&nbsp;<code><b>extends</b></code>&nbsp;the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JFrame.html\" rel=\"nofollow\">JFrame</a></code></b>&nbsp;class; the&nbsp;<code>JFrame</code>&nbsp;class implements a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Window_(computing)\" title=\"Window (computing)\">window</a>&nbsp;with a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Title_bar\" title=\"Title bar\">title bar</a>&nbsp;and a close&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_control_element\" title=\"Graphical control element\">control</a>.</p>\n\n<p>The&nbsp;<code><b>Hello()</b></code>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming)\" title=\"Constructor (object-oriented programming)\">constructor</a>&nbsp;initializes the frame by first calling the superclass constructor, passing the parameter&nbsp;<code>\"hello\"</code>, which is used as the window\'s title. It then calls the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JFrame.html#setDefaultCloseOperation(int)\" rel=\"nofollow\">setDefaultCloseOperation(int)</a></code></b>&nbsp;method inherited from&nbsp;<code>JFrame</code>&nbsp;to set the default operation when the close control on the title bar is selected to&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/WindowConstants.html#EXIT_ON_CLOSE\" rel=\"nofollow\">WindowConstants.EXIT_ON_CLOSE</a></code></b>&nbsp;– this causes the&nbsp;<code>JFrame</code>&nbsp;to be disposed of when the frame is closed (as opposed to merely hidden), which allows the Java virtual machine to exit and the program to terminate. Next, a&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JLabel.html\" rel=\"nofollow\">JLabel</a></code></b>&nbsp;is created for the string&nbsp;<b>\"Hello, world!\"</b>&nbsp;and the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#add(java.awt.Component)\" rel=\"nofollow\">add(Component)</a></code></b>&nbsp;method inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html\" rel=\"nofollow\">Container</a></code>&nbsp;superclass is called to add the label to the frame. The&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Window.html#pack()\" rel=\"nofollow\">pack()</a></code></b>&nbsp;method inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Window.html\" rel=\"nofollow\">Window</a></code>&nbsp;superclass is called to size the window and lay out its contents.</p>\n\n<p>The&nbsp;<code><b>main()</b></code>&nbsp;method is called by the Java virtual machine when the program starts. It&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_(computer_science)\" title=\"Object (computer science)\">instantiates</a>&nbsp;a new&nbsp;<b><code>Hello</code></b>&nbsp;frame and causes it to be displayed by calling the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Component.html#setVisible(boolean)\" rel=\"nofollow\">setVisible(boolean)</a></code></b>&nbsp;method inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Component.html\" rel=\"nofollow\">Component</a></code>&nbsp;superclass with the boolean parameter&nbsp;<code><b>true</b></code>. Once the frame is displayed, exiting the&nbsp;<code>main</code>&nbsp;method does not cause the program to terminate because the AWT&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event_dispatching_thread\" title=\"Event dispatching thread\">event dispatching thread</a>&nbsp;remains active until all of the Swing top-level windows have been disposed.</p>\n\n<h3>Generics</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Generics_in_Java\" title=\"Generics in Java\">Generics in Java</a></p>\n\n<p>In 2004,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Generic_programming\" title=\"Generic programming\">generics</a>&nbsp;were added to the Java language, as part of J2SE 5.0. Prior to the introduction of generics, each variable declaration had to be of a specific type. For container classes, for example, this is a problem because there is no easy way to create a container that accepts only specific types of objects. Either the container operates on all subtypes of a class or interface, usually&nbsp;<code>Object</code>, or a different container class has to be created for each contained class. Generics allow compile-time type checking without having to create many container classes, each containing almost identical code. In addition to enabling more efficient code, certain runtime exceptions are prevented from occurring, by issuing compile-time errors. If Java prevented all runtime type errors (<code>ClassCastException</code>\'s) from occurring, it would be&nbsp;<a href=\"https://en.wikipedia.org/wiki/Type_safety\" title=\"Type safety\">type safe</a>.</p>\n\n<p>In 2016, the type system was shown not to be safe at all, it was proven&nbsp;<a href=\"https://en.wikipedia.org/wiki/Soundness\" title=\"Soundness\">unsound</a>.<sup id=\"cite_ref-54\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-54\">[54]</a></sup></p>\n\n<h2>Criticism</h2>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Criticism_of_Java\" title=\"Criticism of Java\">Criticism of Java</a></p>\n\n<p>Criticisms directed at Java include the implementation of generics,<sup id=\"cite_ref-55\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-55\">[55]</a></sup>&nbsp;speed,<sup id=\"cite_ref-56\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-56\">[56]</a></sup>&nbsp;the handling of unsigned numbers,<sup id=\"cite_ref-57\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-57\">[57]</a></sup>&nbsp;the implementation of floating-point arithmetic,<sup id=\"cite_ref-58\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-58\">[58]</a></sup>&nbsp;and a history of security vulnerabilities in the primary Java VM implementation&nbsp;<a href=\"https://en.wikipedia.org/wiki/HotSpot\" title=\"HotSpot\">HotSpot</a>.<sup id=\"cite_ref-59\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-59\">[59]</a></sup></p>\n\n<h2>Use outside of the Java platform</h2>\n\n<p>The Java programming language requires the presence of a software platform in order for compiled programs to be executed. Oracle supplies the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_platform\" title=\"Java platform\">Java platform</a>&nbsp;for use with Java. The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_SDK\" title=\"Android SDK\">Android SDK</a>&nbsp;is an alternative software platform, used primarily for developing&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_application\" title=\"Android application\">Android applications</a>.</p>\n\n<h3>Android</h3>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Android_6.0-en.png\"><img alt=\"\" data-file-height=\"1920\" data-file-width=\"1080\" height=\"302\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Android_6.0-en.png/170px-Android_6.0-en.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Android_6.0-en.png/255px-Android_6.0-en.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Android_6.0-en.png/340px-Android_6.0-en.png 2x\" width=\"170\" /></a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_(operating_system)\" title=\"Android (operating system)\">Android</a>&nbsp;operating system makes extensive use of Java-related technology.</p>\n\n<p>The Java language is a key pillar in&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_(operating_system)\" title=\"Android (operating system)\">Android</a>, an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Open_source\" title=\"Open source\">open source</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Mobile_operating_system\" title=\"Mobile operating system\">mobile operating system</a>. Although Android, built on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Linux_kernel\" title=\"Linux kernel\">Linux kernel</a>, is written largely in C, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_software_development#SDK\" title=\"Android software development\">Android SDK</a>&nbsp;uses the Java language as the basis for Android applications. The bytecode language supported by the Android SDK is incompatible with Java bytecode and runs on its own virtual machine, optimized for low-memory devices such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Smartphone\" title=\"Smartphone\">smartphones</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Tablet_computer\" title=\"Tablet computer\">tablet computers</a>. Depending on the Android version, the bytecode is either interpreted by the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Dalvik_virtual_machine\" title=\"Dalvik virtual machine\">Dalvik virtual machine</a>&nbsp;or compiled into native code by the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_Runtime\" title=\"Android Runtime\">Android Runtime</a>.</p>\n\n<p>Android does not provide the full Java SE standard library, although the Android SDK does include an independent implementation of a large subset of it. It supports Java 6 and some Java 7 features, offering an implementation compatible with the standard library (<a href=\"https://en.wikipedia.org/wiki/Apache_Harmony\" title=\"Apache Harmony\">Apache Harmony</a>).</p>\n\n<h4>Controversy</h4>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oracle_America,_Inc._v._Google,_Inc.\" title=\"Oracle America, Inc. v. Google, Inc.\">Oracle America, Inc. v. Google, Inc.</a></p>\n\n<p>The use of Java-related technology in Android led to a legal dispute between Oracle and Google. On May 7, 2012, a San Francisco jury found that if APIs could be copyrighted, then Google had infringed Oracle\'s copyrights by the use of Java in Android devices.<sup id=\"cite_ref-60\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-60\">[60]</a></sup>&nbsp;District Judge&nbsp;<a href=\"https://en.wikipedia.org/wiki/William_Haskell_Alsup\" title=\"William Haskell Alsup\">William Haskell Alsup</a>&nbsp;ruled on May 31, 2012, that APIs cannot be copyrighted,<sup id=\"cite_ref-61\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-61\">[61]</a></sup>&nbsp;but this was reversed by the United States Court of Appeals for the Federal Circuit in May 2014.<sup id=\"cite_ref-cnet_appeals_62-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-cnet_appeals-62\">[62]</a></sup>&nbsp;On May 26, 2016, the district court decided in favor of Google, ruling the copyright infringement of the Java API in Android constitutes fair use.<sup id=\"cite_ref-63\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-63\">[63]</a></sup></p>\n\n<h2>Class libraries</h2>\n\n<table role=\"presentation\">\n	<tbody>\n		<tr>\n			<td>\n			<p><a href=\"https://en.wikipedia.org/wiki/File:Question_book-new.svg\"><img alt=\"\" data-file-height=\"399\" data-file-width=\"512\" height=\"39\" src=\"https://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x\" width=\"50\" /></a></p>\n			</td>\n			<td>This section&nbsp;<b>needs additional citations for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Wikipedia:Verifiability\" title=\"Wikipedia:Verifiability\">verification</a></b>.&nbsp;Please help&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Java_(programming_language)&amp;action=edit\">improve this article</a>&nbsp;by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1\" title=\"Help:Introduction to referencing with Wiki Markup/1\">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.&nbsp;<small><i>(December 2014)</i></small>&nbsp;<small><i>(<a href=\"https://en.wikipedia.org/wiki/Help:Maintenance_template_removal\" title=\"Help:Maintenance template removal\">Learn how and when to remove this template message</a>)</i></small></td>\n		</tr>\n	</tbody>\n</table>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Class_Library\" title=\"Java Class Library\">Java Class Library</a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Class_Library\" title=\"Java Class Library\">Java Class Library</a>&nbsp;is the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Standard_library\" title=\"Standard library\">standard library</a>, developed to support application development in Java. It is controlled by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;in cooperation with others through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>&nbsp;program. Companies or individuals participating in this process can influence the design and development of the APIs. This process has been a subject of controversy.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style/Dates_and_numbers#Chronological_items\" title=\"Wikipedia:Manual of Style/Dates and numbers\">when?</a></i>]</sup>&nbsp;The class library contains features such as:</p>\n\n<ul>\n	<li>The core libraries, which include:\n	<ul>\n		<li>IO/NIO</li>\n		<li>Networking</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Reflection_(computer_programming)\" title=\"Reflection (computer programming)\">Reflection</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Concurrent_computing\" title=\"Concurrent computing\">Concurrency</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Generics_in_Java\" title=\"Generics in Java\">Generics</a></li>\n		<li>Scripting/Compiler</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Functional_programming\" title=\"Functional programming\">Functional Programming</a>&nbsp;(Lambda, Streaming)</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_collections_framework\" title=\"Java collections framework\">Collection libraries</a>&nbsp;that implement&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_structure\" title=\"Data structure\">data structures</a>&nbsp;such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/List_(abstract_data_type)\" title=\"List (abstract data type)\">lists</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Associative_array\" title=\"Associative array\">dictionaries</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Tree_structure\" title=\"Tree structure\">trees</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Set_(abstract_data_type)\" title=\"Set (abstract data type)\">sets</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Queue_(abstract_data_type)\" title=\"Queue (abstract data type)\">queues</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Double-ended_queue\" title=\"Double-ended queue\">double-ended queue</a>, or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" title=\"Stack (abstract data type)\">stacks</a><sup id=\"cite_ref-collections_64-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-collections-64\">[64]</a></sup></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/XML\" title=\"XML\">XML</a>&nbsp;Processing (Parsing, Transforming, Validating) libraries</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Computer_security\" title=\"Computer security\">Security</a><sup id=\"cite_ref-security_65-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-security-65\">[65]</a></sup></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Internationalization_and_localization\" title=\"Internationalization and localization\">Internationalization and localization</a>&nbsp;libraries<sup id=\"cite_ref-i18n_66-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-i18n-66\">[66]</a></sup></li>\n	</ul>\n	</li>\n	<li>The integration libraries, which allow the application writer to communicate with external systems. These libraries include:\n	<ul>\n		<li>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Database_Connectivity\" title=\"Java Database Connectivity\">Java Database Connectivity</a>&nbsp;(JDBC)&nbsp;<a href=\"https://en.wikipedia.org/wiki/Application_programming_interface\" title=\"Application programming interface\">API</a>&nbsp;for database access</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_Naming_and_Directory_Interface\" title=\"Java Naming and Directory Interface\">Java Naming and Directory Interface</a>&nbsp;(JNDI) for lookup and discovery</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" title=\"Java remote method invocation\">RMI</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture\" title=\"Common Object Request Broker Architecture\">CORBA</a>&nbsp;for distributed application development</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_Management_Extensions\" title=\"Java Management Extensions\">JMX</a>&nbsp;for managing and monitoring applications</li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/User_interface\" title=\"User interface\">User interface</a>&nbsp;libraries, which include:\n	<ul>\n		<li>The (heavyweight, or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Native_(computing)\" title=\"Native (computing)\">native</a>)&nbsp;<a href=\"https://en.wikipedia.org/wiki/Abstract_Window_Toolkit\" title=\"Abstract Window Toolkit\">Abstract Window Toolkit</a>&nbsp;(AWT), which provides&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_user_interface\" title=\"Graphical user interface\">GUI</a>&nbsp;components, the means for laying out those components and the means for handling events from those components</li>\n		<li>The (lightweight)&nbsp;<a href=\"https://en.wikipedia.org/wiki/Swing_(Java)\" title=\"Swing (Java)\">Swing</a>&nbsp;libraries, which are built on AWT but provide (non-native) implementations of the AWT widgetry</li>\n		<li>APIs for audio capture, processing, and playback</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/JavaFX\" title=\"JavaFX\">JavaFX</a></li>\n	</ul>\n	</li>\n	<li>A platform dependent implementation of the Java virtual machine that is the means by which the bytecodes of the Java libraries and third party applications are executed</li>\n	<li>Plugins, which enable&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">applets</a>&nbsp;to be run in web browsers</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_Web_Start\" title=\"Java Web Start\">Java Web Start</a>, which allows Java applications to be efficiently distributed to&nbsp;<a href=\"https://en.wikipedia.org/wiki/End_user\" title=\"End user\">end users</a>&nbsp;across the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Internet\" title=\"Internet\">Internet</a></li>\n	<li>Licensing and documentation</li>\n</ul>\n\n<h2>Documentation</h2>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a></p>\n\n<p>Javadoc is a comprehensive documentation system, created by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>, used by many Java developers<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style/Words_to_watch#Unsupported_attributions\" title=\"Wikipedia:Manual of Style/Words to watch\">by whom?</a></i>]</sup>. It provides developers with an organized system for documenting their code. Javadoc comments have an extra asterisk at the beginning, i.e. the delimiters are&nbsp;<code>/**</code>&nbsp;and&nbsp;<code>*/</code>, whereas the normal multi-line comments in Java are set off with the delimiters&nbsp;<code>/*</code>&nbsp;and&nbsp;<code>*/</code>.<sup id=\"cite_ref-javadoc_comments_67-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-javadoc_comments-67\">[67]</a></sup></p>\n\n<h2>Editions</h2>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_Java_implementations#Class_library\" title=\"Free Java implementations\">Free Java implementations §&nbsp;Class library</a></p>\n\n<table>\n	<tbody>\n		<tr>\n			<th><a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java</a>&nbsp;editions</th>\n		</tr>\n		<tr>\n			<td><a href=\"https://en.wikipedia.org/wiki/File:Duke_(Java_mascot)_waving.svg\"><img alt=\"Duke (Java mascot) waving.svg\" data-file-height=\"407\" data-file-width=\"226\" height=\"108\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/60px-Duke_%28Java_mascot%29_waving.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/90px-Duke_%28Java_mascot%29_waving.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/120px-Duke_%28Java_mascot%29_waving.svg.png 2x\" width=\"60\" /></a></td>\n		</tr>\n		<tr>\n			<td>\n			<ul>\n				<li><a href=\"https://en.wikipedia.org/wiki/Java_Card\" title=\"Java Card\">Java Card</a></li>\n				<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition\" title=\"Java Platform, Micro Edition\">Micro Edition</a>&nbsp;(ME)</li>\n				<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition\" title=\"Java Platform, Standard Edition\">Standard Edition</a>&nbsp;(SE)</li>\n				<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Enterprise Edition</a>&nbsp;(EE)</li>\n				<li><a href=\"https://en.wikipedia.org/wiki/JavaFX\" title=\"JavaFX\">JavaFX</a>&nbsp;(Merged to Java SE 8)</li>\n				<li><a href=\"https://en.wikipedia.org/wiki/PersonalJava\" title=\"PersonalJava\">PersonalJava</a>&nbsp;(discontinued)</li>\n			</ul>\n			</td>\n		</tr>\n		<tr>\n			<td>\n			<ul>\n				<li><a href=\"https://en.wikipedia.org/wiki/Template:Java_platforms\" title=\"Template:Java platforms\"><abbr title=\"View this template\">v</abbr></a></li>\n				<li><a href=\"https://en.wikipedia.org/wiki/Template_talk:Java_platforms\" title=\"Template talk:Java platforms\"><abbr title=\"Discuss this template\">t</abbr></a></li>\n				<li><a href=\"https://en.wikipedia.org/w/index.php?title=Template:Java_platforms&amp;action=edit\"><abbr title=\"Edit this template\">e</abbr></a></li>\n			</ul>\n			</td>\n		</tr>\n	</tbody>\n</table>\n\n<p>Sun has defined and supports four editions of Java targeting different application environments and segmented many of its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Application_programming_interface\" title=\"Application programming interface\">APIs</a>&nbsp;so that they belong to one of the platforms. The platforms are:</p>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_Card\" title=\"Java Card\">Java Card</a>&nbsp;for smartcards.<sup id=\"cite_ref-java_card_68-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-java_card-68\">[68]</a></sup></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition\" title=\"Java Platform, Micro Edition\">Java Platform, Micro Edition</a>&nbsp;(Java ME) – targeting environments with limited resources.<sup id=\"cite_ref-java_me_69-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-java_me-69\">[69]</a></sup></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition\" title=\"Java Platform, Standard Edition\">Java Platform, Standard Edition</a>&nbsp;(Java SE) – targeting workstation environments.<sup id=\"cite_ref-java_se_70-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-java_se-70\">[70]</a></sup></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java Platform, Enterprise Edition</a>&nbsp;(Java EE) – targeting large distributed enterprise or Internet environments.<sup id=\"cite_ref-java_ee_71-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-java_ee-71\">[71]</a></sup></li>\n</ul>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class_(computer_programming)\" title=\"Class (computer programming)\">classes</a>&nbsp;in the Java APIs are organized into separate groups called&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_package\" title=\"Java package\">packages</a>. Each package contains a set of related&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interfaces</a>, classes, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Exception_handling\" title=\"Exception handling\">exceptions</a>. Refer to the separate platforms for a description of the packages available.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:TOPIC\" title=\"Wikipedia:TOPIC\">relevant to this section?</a>&nbsp;–&nbsp;<a href=\"https://en.wikipedia.org/wiki/Talk:Java_(programming_language)#Relevant\" title=\"Talk:Java (programming language)\">discuss</a></i>]</sup></p>\n\n<p>Sun also provided an edition called&nbsp;<a href=\"https://en.wikipedia.org/wiki/PersonalJava\" title=\"PersonalJava\">PersonalJava</a>&nbsp;that has been superseded by later, standards-based Java ME configuration-profile pairings.</p>\n\n<h2>See also</h2>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/File:Duke_(Java_mascot)_waving.svg\"><img alt=\"icon\" data-file-height=\"407\" data-file-width=\"226\" height=\"28\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/15px-Duke_%28Java_mascot%29_waving.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/23px-Duke_%28Java_mascot%29_waving.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/31px-Duke_%28Java_mascot%29_waving.svg.png 2x\" width=\"15\" /></a><a href=\"https://en.wikipedia.org/wiki/Portal:Java\" title=\"Portal:Java\">Java portal</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/File:8bit-dynamiclist_(reversed).gif\"><img alt=\"icon\" data-file-height=\"32\" data-file-width=\"32\" height=\"28\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cc/8bit-dynamiclist_%28reversed%29.gif/28px-8bit-dynamiclist_%28reversed%29.gif\" srcset=\"//upload.wikimedia.org/wikipedia/commons/c/cc/8bit-dynamiclist_%28reversed%29.gif 1.5x\" width=\"28\" /></a><a href=\"https://en.wikipedia.org/wiki/Portal:Computer_programming\" title=\"Portal:Computer programming\">Computer programming portal</a></li>\n</ul>\n\n<table role=\"presentation\">\n	<tbody>\n		<tr>\n			<td><img alt=\"Book icon\" data-file-height=\"48\" data-file-width=\"48\" height=\"30\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Office-book.svg/30px-Office-book.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Office-book.svg/45px-Office-book.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Office-book.svg/60px-Office-book.svg.png 2x\" width=\"30\" /></td>\n			<td>\n			<ul>\n				<li><a href=\"https://en.wikipedia.org/wiki/Book:Programming_for_Students\" title=\"Book:Programming for Students\">Book: Programming for Students</a></li>\n			</ul>\n			</td>\n		</tr>\n	</tbody>\n</table>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Dalvik_(software)\" title=\"Dalvik (software)\">Dalvik</a>&nbsp;– used in old Android versions, replaced by non-JIT&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_Runtime\" title=\"Android Runtime\">Android Runtime</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/JavaOne\" title=\"JavaOne\">JavaOne</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java.net#Javapedia\" title=\"Java.net\">Javapedia</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/List_of_Java_virtual_machines\" title=\"List of Java virtual machines\">List of Java virtual machines</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/List_of_Java_APIs\" title=\"List of Java APIs\">List of Java APIs</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/List_of_JVM_languages\" title=\"List of JVM languages\">List of JVM languages</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Graal_(compiler)\" title=\"Graal (compiler)\">Graal (compiler)</a>, a project aiming to implement a high performance Java dynamic compiler and interpreter</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Spring_Framework\" title=\"Spring Framework\">Spring Framework</a></li>\n</ul>\n\n<h3>Comparison of Java with other languages</h3>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Comparison_of_programming_languages\" title=\"Comparison of programming languages\">Comparison of programming languages</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Comparison_of_Java_and_C%2B%2B\" title=\"Comparison of Java and C++\">Comparison of Java and C++</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Comparison_of_C_Sharp_and_Java\" title=\"Comparison of C Sharp and Java\">Comparison of C# and Java</a></li>\n	<li>&nbsp;</li>\n</ul>','Test Test','6/12/2017','9',1),(44480,'<p><b>Java</b>&nbsp;is a general-purpose&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_language\" title=\"Programming language\">computer programming language</a>&nbsp;that is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_computing\" title=\"Concurrent computing\">concurrent</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class-based_programming\" title=\"Class-based programming\">class-based</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" title=\"Object-oriented programming\">object-oriented</a>,<sup id=\"cite_ref-FOOTNOTEGoslingJoySteeleBracha20141_14-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-FOOTNOTEGoslingJoySteeleBracha20141-14\">[14]</a></sup>&nbsp;and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"<a href=\"https://en.wikipedia.org/wiki/Write_once,_run_anywhere\" title=\"Write once, run anywhere\">write once, run anywhere</a>\" (WORA),<sup id=\"cite_ref-15\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-15\">[15]</a></sup>&nbsp;meaning that&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compiled</a>&nbsp;Java code can run on all platforms that support Java without the need for recompilation.<sup id=\"cite_ref-design_goals_16-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;Java applications are typically compiled to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">bytecode</a>&nbsp;that can run on any&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;(JVM) regardless of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_architecture\" title=\"Computer architecture\">computer architecture</a>. As of 2016, Java is one of the most&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">popular programming languages in use</a>,<sup id=\"cite_ref-17\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-17\">[17]</a></sup><sup id=\"cite_ref-18\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-18\">[18]</a></sup><sup id=\"cite_ref-languagepopularity2013_19-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-languagepopularity2013-19\">[19]</a></sup><sup id=\"cite_ref-20\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-20\">[20]</a></sup>&nbsp;particularly for client-server web applications, with a reported 9 million developers.<sup id=\"cite_ref-21\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-21\">[21]</a></sup>&nbsp;Java was originally developed by&nbsp;<a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>&nbsp;at&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;(which has since been&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_acquisition_by_Oracle\" title=\"Sun acquisition by Oracle\">acquired by Oracle Corporation</a>) and released in 1995 as a core component of Sun Microsystems\'&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java platform</a>. The language derives much of its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Syntax_(programming_languages)\" title=\"Syntax (programming languages)\">syntax</a>&nbsp;from&nbsp;<a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\" title=\"C (programming language)\">C</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>, but it has fewer&nbsp;<a href=\"https://en.wikipedia.org/wiki/Low-level_programming_language\" title=\"Low-level programming language\">low-level</a>&nbsp;facilities than either of them.</p>\n\n<p>The original and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Reference_implementation\" title=\"Reference implementation\">reference implementation</a>&nbsp;Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Compiler\" title=\"Compiler\">compilers</a>, virtual machines, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Library_(computing)\" title=\"Library (computing)\">class libraries</a>&nbsp;were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>, Sun&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_relicensing\" title=\"Software relicensing\">relicensed</a>&nbsp;most of its Java technologies under the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>. Others have also developed alternative implementations of these Sun technologies, such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Compiler_for_Java\" title=\"GNU Compiler for Java\">GNU Compiler for Java</a>&nbsp;(bytecode compiler),&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_Classpath\" title=\"GNU Classpath\">GNU Classpath</a>&nbsp;(standard libraries), and&nbsp;<a href=\"https://en.wikipedia.org/wiki/IcedTea\" title=\"IcedTea\">IcedTea</a>-Web (browser plugin for applets).</p>\n\n<p>The latest version is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 8</a>&nbsp;which is the only version currently supported for free by Oracle, although earlier versions are supported both by Oracle and other companies on a commercial basis.</p>\n\n<h2>Contents</h2>\n\n<p>&nbsp;&nbsp;[<a role=\"button\" tabindex=\"0\">hide</a>]&nbsp;</p>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#History\">1History</a>\n\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Principles\">1.1Principles</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Versions\">1.2Versions</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Practices\">2Practices</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Java_platform\">2.1Java platform</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Implementations\">2.1.1Implementations</a></li>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Performance\">2.1.2Performance</a></li>\n		</ul>\n		</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Automatic_memory_management\">2.2Automatic memory management</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Syntax\">3Syntax</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#.22Hello_world.22_example\">4\"Hello world\" example</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Special_classes\">5Special classes</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Applet\">5.1Applet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Servlet\">5.2Servlet</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#JavaServer_Pages\">5.3JavaServer Pages</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Swing_application\">5.4Swing application</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Generics\">5.5Generics</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Criticism\">6Criticism</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Use_outside_of_the_Java_platform\">7Use outside of the Java platform</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Android\">7.1Android</a>\n		<ul>\n			<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Controversy\">7.1.1Controversy</a></li>\n		</ul>\n		</li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Class_libraries\">8Class libraries</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Documentation\">9Documentation</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Editions\">10Editions</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#See_also\">11See also</a>\n	<ul>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Comparison_of_Java_with_other_languages\">11.1Comparison of Java with other languages</a></li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#Notes\">12Notes</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#References\">13References</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#External_links\">14External links</a></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h2>History</h2>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)#History\" title=\"Java (software platform)\">Java (software platform) §&nbsp;History</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Duke_(Java_mascot)_waving.svg\"><img alt=\"\" data-file-height=\"407\" data-file-width=\"226\" height=\"306\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/170px-Duke_%28Java_mascot%29_waving.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/255px-Duke_%28Java_mascot%29_waving.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/340px-Duke_%28Java_mascot%29_waving.svg.png 2x\" width=\"170\" /></a></p>\n\n<p>Duke, the Java mascot</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:James_Gosling_2008.jpg\"><img alt=\"\" data-file-height=\"1469\" data-file-width=\"1460\" height=\"221\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/220px-James_Gosling_2008.jpg\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/330px-James_Gosling_2008.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/14/James_Gosling_2008.jpg/440px-James_Gosling_2008.jpg 2x\" width=\"220\" /></a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, the creator of Java (2008)</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Tiobeindex.png\"><img alt=\"\" data-file-height=\"426\" data-file-width=\"704\" height=\"133\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/220px-Tiobeindex.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/330px-Tiobeindex.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Tiobeindex.png/440px-Tiobeindex.png 2x\" width=\"220\" /></a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/TIOBE_index\" title=\"TIOBE index\">TIOBE</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Measuring_programming_language_popularity\" title=\"Measuring programming language popularity\">programming language popularity index</a>&nbsp;graph from 2002 to 2015. Over the course of a decade Java (blue) and C (black) competing for the top position.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/James_Gosling\" title=\"James Gosling\">James Gosling</a>, Mike Sheridan, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Patrick_Naughton\" title=\"Patrick Naughton\">Patrick Naughton</a>&nbsp;initiated the Java language project in June 1991.<sup id=\"cite_ref-22\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-22\">[22]</a></sup>&nbsp;Java was originally designed for interactive television, but it was too advanced for the digital cable television industry at the time.<sup id=\"cite_ref-23\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-23\">[23]</a></sup>&nbsp;The language was initially called&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Oak_(programming_language)\" title=\"Oak (programming language)\">Oak</a></i>&nbsp;after an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oak\" title=\"Oak\">oak</a>&nbsp;tree that stood outside Gosling\'s office. Later the project went by the name&nbsp;<i>Green</i>&nbsp;and was finally renamed&nbsp;<i>Java</i>, from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_coffee\" title=\"Java coffee\">Java coffee</a>.<sup id=\"cite_ref-24\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-24\">[24]</a></sup>&nbsp;Gosling designed Java with a C/C++-style syntax that system and application programmers would find familiar.<sup id=\"cite_ref-25\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-25\">[25]</a></sup></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;released the first public implementation as Java 1.0 in 1995.<sup id=\"cite_ref-oraclejavahistory_26-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oraclejavahistory-26\">[26]</a></sup>&nbsp;It promised \"Write Once, Run Anywhere\" (WORA), providing no-cost run-times on popular&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computing_platform\" title=\"Computing platform\">platforms</a>. Fairly secure and featuring configurable security, it allowed network- and file-access restrictions. Major&nbsp;<a href=\"https://en.wikipedia.org/wiki/Web_browser\" title=\"Web browser\">web browsers</a>&nbsp;soon incorporated the ability to run&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">Java applets</a></i>&nbsp;within web pages, and Java quickly became popular. The Java 1.0 compiler was re-written&nbsp;<a href=\"https://en.wikipedia.org/wiki/Bootstrapping_(compilers)\" title=\"Bootstrapping (compilers)\">in Java</a>&nbsp;by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Arthur_van_Hoff\" title=\"Arthur van Hoff\">Arthur van Hoff</a>&nbsp;to comply strictly with the Java 1.0 language specification.<sup id=\"cite_ref-27\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-27\">[27]</a></sup>&nbsp;With the advent of&nbsp;<i>Java 2</i>&nbsp;(released initially as J2SE 1.2 in December 1998 – 1999), new versions had multiple configurations built for different types of platforms.&nbsp;<i>J2EE</i>&nbsp;included technologies and APIs for enterprise applications typically run in server environments, while&nbsp;<i>J2ME</i>&nbsp;featured APIs optimized for mobile applications. The desktop version was renamed&nbsp;<i>J2SE</i>. In 2006, for marketing purposes, Sun renamed new&nbsp;<i>J2</i>&nbsp;versions as&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a></i>,&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition\" title=\"Java Platform, Micro Edition\">Java ME</a></i>, and&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition\" title=\"Java Platform, Standard Edition\">Java SE</a></i>, respectively.</p>\n\n<p>In 1997, Sun Microsystems approached the&nbsp;<a href=\"https://en.wikipedia.org/wiki/ISO/IEC_JTC_1\" title=\"ISO/IEC JTC 1\">ISO/IEC JTC 1</a>&nbsp;standards body and later the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>&nbsp;to formalize Java, but it soon withdrew from the process.<sup id=\"cite_ref-28\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-28\">[28]</a></sup><sup id=\"cite_ref-29\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-29\">[29]</a></sup><sup id=\"cite_ref-30\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-30\">[30]</a></sup>&nbsp;Java remains a&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\"><i>de facto</i>&nbsp;standard</a>, controlled through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>.<sup id=\"cite_ref-31\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-31\">[31]</a></sup>At one time, Sun made most of its Java implementations available without charge, despite their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Proprietary_software\" title=\"Proprietary software\">proprietary software</a>&nbsp;status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System.</p>\n\n<p>On November 13, 2006, Sun released much of its Java virtual machine (JVM) as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_and_open-source_software\" title=\"Free and open-source software\">free and open-source software</a>, (FOSS), under the terms of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/GNU_General_Public_License\" title=\"GNU General Public License\">GNU General Public License</a>&nbsp;(GPL). On May 8, 2007, Sun finished the process, making all of its JVM\'s core code available under&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_software\" title=\"Free software\">free software</a>/open-source distribution terms, aside from a small portion of code to which Sun did not hold the copyright.<sup id=\"cite_ref-32\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-32\">[32]</a></sup></p>\n\n<p>Sun\'s vice-president Rich Green said that Sun\'s ideal role with regard to Java was as an \"evangelist\".<sup id=\"cite_ref-33\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-33\">[33]</a></sup>&nbsp;Following&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>\'s acquisition of Sun Microsystems in 2009–10, Oracle has described itself as the \"steward of Java technology with a relentless commitment to fostering a community of participation and transparency\".<sup id=\"cite_ref-34\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-34\">[34]</a></sup>&nbsp;This did not prevent Oracle from filing a lawsuit against Google shortly after that for using Java inside the Android SDK (see Google section below). Java software runs on everything from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Laptop\" title=\"Laptop\">laptops</a>&nbsp;to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_center\" title=\"Data center\">data centers</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Video_game_console\" title=\"Video game console\">game consoles</a>&nbsp;to scientific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Supercomputer\" title=\"Supercomputer\">supercomputers</a>.<sup id=\"cite_ref-35\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-35\">[35]</a></sup>&nbsp;On April 2, 2010, James Gosling resigned from Oracle.<sup id=\"cite_ref-36\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-36\">[36]</a></sup></p>\n\n<p>In January 2016, Oracle announced that Java runtime environments based on JDK 9 will discontinue the browser plugin.<sup id=\"cite_ref-37\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-37\">[37]</a></sup></p>\n\n<h3>Principles</h3>\n\n<p>There were five primary goals in the creation of the Java language:<sup id=\"cite_ref-design_goals_16-1\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup></p>\n\n<ol>\n	<li>It must be \"simple, object-oriented, and familiar\".</li>\n	<li>It must be \"robust and secure\".</li>\n	<li>It must be \"architecture-neutral and portable\".</li>\n	<li>It must execute with \"high performance\".</li>\n	<li>It must be \"interpreted, threaded, and dynamic\".</li>\n</ol>\n\n<h3>Versions</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java version history</a></p>\n\n<p>As of 2015, only Java 8 is officially supported. Major release versions of Java, along with their release dates:</p>\n\n<ul>\n	<li>JDK 1.0 (January 23, 1996)<sup id=\"cite_ref-38\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-38\">[38]</a></sup></li>\n	<li>JDK 1.1 (February 19, 1997)</li>\n	<li>J2SE 1.2 (December 8, 1998)</li>\n	<li>J2SE 1.3 (May 8, 2000)</li>\n	<li>J2SE 1.4 (February 6, 2002)</li>\n	<li>J2SE 5.0 (September 30, 2004)</li>\n	<li>Java SE 6 (December 11, 2006)</li>\n	<li>Java SE 7 (July 28, 2011)</li>\n	<li>Java SE 8 (March 18, 2014)</li>\n</ul>\n\n<h2>Practices</h2>\n\n<h3>Java platform</h3>\n\n<p>Main articles:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java (software platform)</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a></p>\n\n<p>One design goal of Java is portability, which means that programs written for the Java platform must run similarly on any combination of hardware and operating system with adequate runtime support. This is achieved by compiling the Java language code to an intermediate representation called&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>, instead of directly to architecture-specific&nbsp;<a href=\"https://en.wikipedia.org/wiki/Machine_code\" title=\"Machine code\">machine code</a>. Java bytecode instructions are analogous to machine code, but they are intended to be executed by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Virtual_machine\" title=\"Virtual machine\">virtual machine</a>&nbsp;(VM) written specifically for the host hardware.&nbsp;<a href=\"https://en.wikipedia.org/wiki/End_user\" title=\"End user\">End users</a>&nbsp;commonly use a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java Runtime Environment</a>&nbsp;(JRE) installed on their own machine for standalone Java applications, or in a web browser for Java&nbsp;<a href=\"https://en.wikipedia.org/wiki/Applet\" title=\"Applet\">applets</a>.</p>\n\n<p>Standard libraries provide a generic way to access host-specific features such as graphics,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Thread_(computing)\" title=\"Thread (computing)\">threading</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_network\" title=\"Computer network\">networking</a>.</p>\n\n<p>The use of universal bytecode makes porting simple. However, the overhead of interpreting bytecode into machine instructions made interpreted programs almost always run more slowly than native&nbsp;<a href=\"https://en.wikipedia.org/wiki/Executable\" title=\"Executable\">executables</a>.&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">Just-in-time</a>&nbsp;(JIT) compilers that compile bytecodes to machine code during runtime were introduced from an early stage. Java itself is platform-independent and is adapted to the particular platform it is to run on by a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" title=\"Java virtual machine\">Java virtual machine</a>&nbsp;for it, which translates the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" title=\"Java bytecode\">Java bytecode</a>&nbsp;into the platform\'s machine language.<sup id=\"cite_ref-39\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-39\">[39]</a></sup></p>\n\n<h4>Implementations</h4>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_Java_implementations\" title=\"Free Java implementations\">Free Java implementations</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Oracle_Corporation\" title=\"Oracle Corporation\">Oracle Corporation</a>&nbsp;is the current owner of the official implementation of the Java SE platform, following their acquisition of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;on January 27, 2010. This implementation is based on the original implementation of Java by Sun. The Oracle implementation is available for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Microsoft Windows</a>&nbsp;(still works for XP, while only later versions currently officially supported),&nbsp;<a href=\"https://en.wikipedia.org/wiki/MacOS\" title=\"MacOS\">macOS</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Linux\" title=\"Linux\">Linux</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Solaris_(operating_system)\" title=\"Solaris (operating system)\">Solaris</a>. Because Java lacks any formal standardization recognized by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Ecma_International\" title=\"Ecma International\">Ecma International</a>, ISO/IEC, ANSI, or other third-party standards organization, the Oracle implementation is the&nbsp;<a href=\"https://en.wikipedia.org/wiki/De_facto_standard\" title=\"De facto standard\">de facto standard</a>.</p>\n\n<p>The Oracle implementation is packaged into two different distributions: The Java Runtime Environment (JRE) which contains the parts of the Java SE platform required to run Java programs and is intended for end users, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Development_Kit\" title=\"Java Development Kit\">Java Development Kit</a>&nbsp;(JDK), which is intended for software developers and includes development tools such as the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/JAR_(file_format)\" title=\"JAR (file format)\">Jar</a>, and a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Debugger\" title=\"Debugger\">debugger</a>.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/OpenJDK\" title=\"OpenJDK\">OpenJDK</a>&nbsp;is another notable Java SE implementation that is licensed under the GNU GPL. The implementation started when Sun began releasing the Java source code under the GPL. As of Java SE 7, OpenJDK is the official Java reference implementation.</p>\n\n<p>The goal of Java is to make all implementations of Java compatible. Historically, Sun\'s trademark license for usage of the Java brand insists that all implementations be \"compatible\". This resulted in a legal dispute with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft\" title=\"Microsoft\">Microsoft</a>&nbsp;after Sun claimed that the Microsoft implementation did not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" title=\"Java remote method invocation\">RMI</a>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Native_Interface\" title=\"Java Native Interface\">JNI</a>&nbsp;and had added platform-specific features of their own. Sun sued in 1997, and, in 2001, won a settlement of US$20 million, as well as a court order enforcing the terms of the license from Sun.<sup id=\"cite_ref-40\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-40\">[40]</a></sup>&nbsp;As a result, Microsoft no longer ships Java with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Windows</a>.</p>\n\n<p>Platform-independent Java is essential to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java EE</a>, and an even more rigorous validation is required to certify an implementation. This environment enables portable server-side applications.</p>\n\n<h4>Performance</h4>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_performance\" title=\"Java performance\">Java performance</a></p>\n\n<p>Programs written in Java have a reputation for being slower and requiring more memory than those written in C++.<sup id=\"cite_ref-41\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-41\">[41]</a></sup><sup id=\"cite_ref-42\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-42\">[42]</a></sup>&nbsp;However, Java programs\' execution speed improved significantly with the introduction of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Just-in-time_compilation\" title=\"Just-in-time compilation\">just-in-time compilation</a>&nbsp;in 1997/1998 for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_version_history\" title=\"Java version history\">Java 1.1</a>,<sup id=\"cite_ref-43\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-43\">[43]</a></sup>&nbsp;the addition of language features supporting better code analysis (such as inner classes, the StringBuilder class, optional assertions, etc.), and optimizations in the Java virtual machine, such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/HotSpot\" title=\"HotSpot\">HotSpot</a>&nbsp;becoming the default for Sun\'s JVM in 2000. With Java 1.5, the performance was improved with the addition of the java.util.concurrent package, including&nbsp;<a href=\"https://en.wikipedia.org/wiki/Lock_free\" title=\"Lock free\">Lock free</a>&nbsp;implementations of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_ConcurrentMap\" title=\"Java ConcurrentMap\">ConcurrentMaps</a>&nbsp;and other multi-core collections, and it was improved further Java 1.6.</p>\n\n<p>Some platforms offer direct hardware support for Java; there are microcontrollers that can run Java in hardware instead of a software Java virtual machine<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup>, and some&nbsp;<a href=\"https://en.wikipedia.org/wiki/ARM_architecture\" title=\"ARM architecture\">ARM</a>&nbsp;based processors could have hardware support for executing Java bytecode through their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Jazelle\" title=\"Jazelle\">Jazelle</a>&nbsp;option, though support has mostly been dropped in current implementations of ARM.</p>\n\n<h3>Automatic memory management</h3>\n\n<p>Java uses an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)\" title=\"Garbage collection (computer science)\">automatic garbage collector</a>&nbsp;to manage memory in the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_lifetime\" title=\"Object lifetime\">object lifecycle</a>. The programmer determines when objects are created, and the Java runtime is responsible for recovering the memory once objects are no longer in use. Once no references to an object remain, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Unreachable_memory\" title=\"Unreachable memory\">unreachable memory</a>&nbsp;becomes eligible to be freed automatically by the garbage collector. Something similar to a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_leak\" title=\"Memory leak\">memory leak</a>&nbsp;may still occur if a programmer\'s code holds a reference to an object that is no longer needed, typically when objects that are no longer needed are stored in containers that are still in use. If methods for a nonexistent object are called, a \"null pointer exception\" is thrown.<sup id=\"cite_ref-44\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-44\">[44]</a></sup><sup id=\"cite_ref-45\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-45\">[45]</a></sup></p>\n\n<p>One of the ideas behind Java\'s automatic memory management model is that programmers can be spared the burden of having to perform manual memory management. In some languages, memory for the creation of objects is implicitly allocated on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" title=\"Stack (abstract data type)\">stack</a>&nbsp;or explicitly allocated and deallocated from the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_management#DYNAMIC\" title=\"Memory management\">heap</a>. In the latter case, the responsibility of managing memory resides with the programmer. If the program does not deallocate an object, a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memory_leak\" title=\"Memory leak\">memory leak</a>&nbsp;occurs. If the program attempts to access or deallocate memory that has already been deallocated, the result is undefined and difficult to predict, and the program is likely to become unstable and/or crash. This can be partially remedied by the use of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Smart_pointer\" title=\"Smart pointer\">smart pointers</a>, but these add overhead and complexity. Note that garbage collection does not prevent \"logical\" memory leaks,&nbsp;<i>i.e.</i>, those where the memory is still referenced but never used.</p>\n\n<p>Garbage collection may happen at any time. Ideally, it will occur when a program is idle. It is guaranteed to be triggered if there is insufficient free memory on the heap to allocate a new object; this can cause a program to stall momentarily. Explicit memory management is not possible in Java.</p>\n\n<p>Java does not support C/C++ style&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pointer_(computer_programming)\" title=\"Pointer (computer programming)\">pointer arithmetic</a>, where object addresses and unsigned integers (usually long integers) can be used interchangeably. This allows the garbage collector to relocate referenced objects and ensures type safety and security.</p>\n\n<p>As in C++ and some other object-oriented languages, variables of Java\'s&nbsp;<a href=\"https://en.wikipedia.org/wiki/Primitive_data_type\" title=\"Primitive data type\">primitive data types</a>&nbsp;are either stored directly in fields (for objects) or on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack-based_memory_allocation\" title=\"Stack-based memory allocation\">stack</a>&nbsp;(for methods) rather than on the heap, as is commonly true for non-primitive data types (but see&nbsp;<a href=\"https://en.wikipedia.org/wiki/Escape_analysis\" title=\"Escape analysis\">escape analysis</a>). This was a conscious decision by Java\'s designers for performance reasons.</p>\n\n<p>Java contains multiple types of garbage collectors. By default, HotSpot uses the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Parallel_scavenge_garbage_collector&amp;action=edit&amp;redlink=1\" title=\"Parallel scavenge garbage collector (page does not exist)\">parallel scavenge garbage collector</a>.<sup id=\"cite_ref-46\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-46\">[46]</a></sup>&nbsp;However, there are also several other garbage collectors that can be used to manage the heap. For 90% of applications in Java, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Concurrent_mark_sweep_collector\" title=\"Concurrent mark sweep collector\">Concurrent Mark-Sweep</a>&nbsp;(CMS) garbage collector is sufficient.<sup id=\"cite_ref-47\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-47\">[47]</a></sup>Oracle aims to replace CMS with the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Garbage-First_collector&amp;action=edit&amp;redlink=1\" title=\"Garbage-First collector (page does not exist)\">Garbage-First collector</a>&nbsp;(G1).<sup id=\"cite_ref-48\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-48\">[48]</a></sup></p>\n\n<h2>Syntax</h2>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_syntax\" title=\"Java syntax\">Java syntax</a></p>\n\n<p>The syntax of Java is largely influenced by&nbsp;<a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" title=\"C++\">C++</a>. Unlike C++, which combines the syntax for structured, generic, and object-oriented programming, Java was built almost exclusively as an object-oriented language.<sup id=\"cite_ref-design_goals_16-2\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-design_goals-16\">[16]</a></sup>&nbsp;All code is written inside classes, and every data item is an object, with the exception of the primitive data types, (<i>i.e.</i>&nbsp;integers, floating-point numbers,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Boolean_data_type\" title=\"Boolean data type\">boolean values</a>, and characters), which are not objects for performance reasons. Java reuses some popular aspects of C++ (such as printf() method).</p>\n\n<p>Unlike C++, Java does not support&nbsp;<a href=\"https://en.wikipedia.org/wiki/Operator_overloading\" title=\"Operator overloading\">operator overloading</a><sup id=\"cite_ref-msdn_operator_overloading_49-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-msdn_operator_overloading-49\">[49]</a></sup>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Multiple_inheritance\" title=\"Multiple inheritance\">multiple inheritance</a>&nbsp;for&nbsp;<i>classes</i>, though multiple inheritance is supported for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interfaces</a>.<sup id=\"cite_ref-oracle_multiple_inheritance_50-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-oracle_multiple_inheritance-50\">[50]</a></sup>&nbsp;This simplifies the language and aids in preventing potential errors and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Anti-pattern\" title=\"Anti-pattern\">anti-pattern</a>&nbsp;design.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\" title=\"Wikipedia:Citation needed\">citation needed</a></i>]</sup></p>\n\n<p>Java uses comments similar to those of C++. There are three different styles of comments: a single line style marked with two slashes (<code>//</code>), a multiple line style opened with&nbsp;<code>/*</code>&nbsp;and closed with&nbsp;<code>*/</code>, and the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a>&nbsp;commenting style opened with&nbsp;<code>/**</code>&nbsp;and closed with&nbsp;<code>*/</code>. The Javadoc style of commenting allows the user to run the Javadoc executable to create documentation for the program and can be read by some&nbsp;<a href=\"https://en.wikipedia.org/wiki/Integrated_development_environment\" title=\"Integrated development environment\">integrated development environments</a>&nbsp;(IDEs) such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Eclipse_(software)\" title=\"Eclipse (software)\">Eclipse</a>&nbsp;to allow developers to access documentation within the IDE.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n// This is an example of a single line comment using two slashes\n\n/* This is an example of a multiple line comment using the slash and asterisk.\n This type of comment can be used to hold a lot of information or deactivate\n code, but it is very important to remember to close the comment. */\n\npackage fibsandlies;\nimport java.util.HashMap;\n\n/**\n * This is an example of a Javadoc comment; Javadoc can compile documentation\n * from this text. Javadoc comments must immediately precede the class, method, or field being documented.\n */\npublic class FibCalculator extends Fibonacci implements Calculator {\n    private static Map&lt;Integer, Integer&gt; memoized = new HashMap&lt;Integer, Integer&gt;();\n\n    /*\n     * The main method written as follows is used by the JVM as a starting point for the program.\n     */\n    public static void main(String[] args) {\n        memoized.put(1, 1);\n        memoized.put(2, 1);\n        System.out.println(fibonacci(12)); //Get the 12th Fibonacci number and print to console\n    }\n\n    /**\n     * An example of a method written in Java, wrapped in a class.\n     * Given a non-negative number FIBINDEX, returns\n     * the Nth Fibonacci number, where N equals FIBINDEX.\n     * @param fibIndex The index of the Fibonacci number\n     * @return The Fibonacci number\n     */\n    public static int fibonacci(int fibIndex) {\n        if (memoized.containsKey(fibIndex)) {\n            return memoized.get(fibIndex);\n        } else {\n            int answer = fibonacci(fibIndex - 1) + fibonacci(fibIndex - 2);\n            memoized.put(fibIndex, answer);\n            return answer;\n        }\n    }\n}\n</pre>\n\n<h2>\"Hello world\" example</h2>\n\n<p>The traditional&nbsp;<a href=\"https://en.wikipedia.org/wiki/%22Hello,_world!%22_program\" title=\"&quot;Hello, world!&quot; program\">\"Hello, world!\" program</a>&nbsp;can be written in Java as:<sup id=\"cite_ref-51\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-51\">[51]</a></sup></p>\n\n<pre>\nclass HelloWorldApp {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\"); // Prints the string to the console.\n    }\n}</pre>\n\n<p>Source files must be named after the public class they contain, appending the suffix&nbsp;<code>.java</code>, for example,&nbsp;<code>HelloWorldApp.java</code>. It must first be compiled into bytecode, using a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>, producing a file named&nbsp;<code>HelloWorldApp.class</code>. Only then can it be executed, or \"launched\". The Java source file may only contain one public class, but it can contain multiple classes with other than public access and any number of public&nbsp;<a href=\"https://en.wikipedia.org/wiki/Inner_class\" title=\"Inner class\">inner classes</a>. When the source file contains multiple classes, make one class \"public\" and name the source file with that public class name.</p>\n\n<p>A&nbsp;<code><b>class</b></code>&nbsp;that is not declared&nbsp;<code><b>public</b></code>&nbsp;may be stored in any .java file. The compiler will generate a class file for each class defined in the source file. The name of the class file is the name of the class, with&nbsp;<i>.class</i>&nbsp;appended. For class file generation,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class_(computer_programming)#Unnamed\" title=\"Class (computer programming)\">anonymous classes</a>&nbsp;are treated as if their name were the concatenation of the name of their enclosing class, a&nbsp;<i>$</i>, and an integer.</p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/List_of_Java_keywords\" title=\"List of Java keywords\">keyword</a>&nbsp;<code><b>public</b></code>&nbsp;denotes that a method can be called from code in other classes, or that a class may be used by classes outside the class hierarchy. The class hierarchy is related to the name of the directory in which the .java file is located. This is called an access level modifier. Other access level modifiers include the keywords&nbsp;<code><b>private</b></code>&nbsp;and&nbsp;<code><b>protected</b></code>.</p>\n\n<p>The keyword&nbsp;<code><b>static</b></code>&nbsp;in front of a method indicates a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Method_(computer_programming)#Static_methods\" title=\"Method (computer programming)\">static method</a>, which is associated only with the class and not with any specific instance of that class. Only static methods can be invoked without a reference to an object. Static methods cannot access any class members that are not also static. Methods that are not designated static are instance methods and require a specific instance of a class to operate.</p>\n\n<p>The keyword&nbsp;<code><b>void</b></code>&nbsp;indicates that the main method does not return any value to the caller. If a Java program is to exit with an error code, it must call System.exit() explicitly.</p>\n\n<p>The method name \"<code>main</code>\" is not a keyword in the Java language. It is simply the name of the method the Java launcher calls to pass control to the program. Java classes that run in managed environments such as applets and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Enterprise_JavaBeans\" title=\"Enterprise JavaBeans\">Enterprise JavaBeans</a>&nbsp;do not use or need a&nbsp;<code>main()</code>&nbsp;method. A Java program may contain multiple classes that have&nbsp;<code>main</code>&nbsp;methods, which means that the VM needs to be explicitly told which class to launch from.</p>\n\n<p>The main method must accept an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Array_data_type\" title=\"Array data type\">array</a>&nbsp;of&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\" rel=\"nofollow\">String</a></code></b>&nbsp;objects. By convention, it is referenced as&nbsp;<code><b>args</b></code>&nbsp;although any other legal identifier name can be used. Since Java 5, the main method can also use&nbsp;<a href=\"https://en.wikipedia.org/wiki/Variadic_function\" title=\"Variadic function\">variable arguments</a>, in the form of&nbsp;<code>public static void main(String... args)</code>, allowing the main method to be invoked with an arbitrary number of&nbsp;<code>String</code>&nbsp;arguments. The effect of this alternate declaration is semantically identical (the&nbsp;<code>args</code>&nbsp;parameter is still an array of&nbsp;<code>String</code>&nbsp;objects), but it allows an alternative syntax for creating and passing the array.</p>\n\n<p>The Java launcher launches Java by loading a given class (specified on the command line or as an attribute in a&nbsp;<a href=\"https://en.wikipedia.org/wiki/JAR_(file_format)\" title=\"JAR (file format)\">JAR</a>) and starting its&nbsp;<code>public static void main(String[])</code>&nbsp;method. Stand-alone programs must declare this method explicitly. The&nbsp;<code>String[] args</code>&nbsp;parameter is an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Array_data_type\" title=\"Array data type\">array</a>&nbsp;of&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\" rel=\"nofollow\">String</a></code>&nbsp;objects containing any arguments passed to the class. The parameters to&nbsp;<code>main</code>&nbsp;are often passed by means of a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Command-line_interface\" title=\"Command-line interface\">command line</a>.</p>\n\n<p>Printing is part of a Java standard library: The&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/System.html\" rel=\"nofollow\">System</a></code></b>&nbsp;class defines a public static field called&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#out\" rel=\"nofollow\">out</a></code></b>. The&nbsp;<code>out</code>&nbsp;object is an instance of the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html\" rel=\"nofollow\">PrintStream</a></code>class and provides many methods for printing data to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Standard_streams\" title=\"Standard streams\">standard out</a>, including&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html#println(java.lang.String)\" rel=\"nofollow\">println(String)</a></code></b>&nbsp;which also appends a new line to the passed string.</p>\n\n<p>The string \"Hello World!\" is automatically converted to a String object by the compiler.</p>\n\n<h2>Special classes</h2>\n\n<table role=\"presentation\">\n	<tbody>\n		<tr>\n			<td>\n			<p><img alt=\"\" data-file-height=\"40\" data-file-width=\"40\" height=\"40\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/40px-Ambox_important.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/60px-Ambox_important.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/80px-Ambox_important.svg.png 2x\" width=\"40\" /></p>\n			</td>\n			<td>This section&nbsp;<b>contains&nbsp;<a href=\"https://en.wikipedia.org/wiki/Wikipedia:What_Wikipedia_is_not#NOTHOWTO\" title=\"Wikipedia:What Wikipedia is not\">instructions, advice, or how-to content</a></b>.&nbsp;The purpose of Wikipedia is to present facts, not to train. Please help&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Java_(programming_language)&amp;action=edit\">improve this article</a>&nbsp;either by rewriting the how-to content or by&nbsp;<a href=\"https://meta.wikimedia.org/wiki/Help:Transwiki\" title=\"m:Help:Transwiki\">moving</a>&nbsp;it to&nbsp;<a href=\"https://en.wikiversity.org/wiki/\" title=\"v:\">Wikiversity</a>,&nbsp;<a href=\"https://en.wikibooks.org/wiki/\" title=\"b:\">Wikibooks</a>&nbsp;or&nbsp;<a href=\"https://en.wikivoyage.org/wiki/\" title=\"voy:\">Wikivoyage</a>.&nbsp;<small><i>(January 2012)</i></small></td>\n		</tr>\n	</tbody>\n</table>\n\n<h3>Applet</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">Java applet</a></p>\n\n<p>Java applets are programs that are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Embedded_system#Embedded_software_architectures\" title=\"Embedded system\">embedded</a>&nbsp;in other applications, typically in a Web page displayed in a web browser.</p>\n\n<pre>\n// Hello.java\nimport javax.swing.JApplet;\nimport java.awt.Graphics;\n\npublic class Hello extends JApplet {\n    public void paintComponent(final Graphics g) {\n        g.drawString(\"Hello, world!\", 65, 95);\n    }\n}\n</pre>\n\n<p>The&nbsp;<code><b>import</b></code>&nbsp;statements direct the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_compiler\" title=\"Java compiler\">Java compiler</a>&nbsp;to include the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JApplet.html\" rel=\"nofollow\">javax.swing.JApplet</a></code></b>&nbsp;and&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Graphics.html\" rel=\"nofollow\">java.awt.Graphics</a></code></b>&nbsp;classes in the compilation. The import statement allows these classes to be referenced in the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Source_code\" title=\"Source code\">source code</a>&nbsp;using the&nbsp;<i>simple class name</i>&nbsp;(i.e.&nbsp;<code>JApplet</code>) instead of the&nbsp;<i>fully qualified class name</i>&nbsp;(<i>FQCN</i>, i.e.&nbsp;<code>javax.swing.JApplet</code>).</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class&nbsp;<code><b>extends</b></code>&nbsp;(<a href=\"https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)#Subclasses_and_superclasses\" title=\"Inheritance (object-oriented programming)\">subclasses</a>) the&nbsp;<code><b>JApplet</b></code>&nbsp;(Java Applet) class; the&nbsp;<code>JApplet</code>&nbsp;class provides the framework for the host application to display and control the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_lifetime\" title=\"Object lifetime\">lifecycle</a>&nbsp;of the applet. The&nbsp;<code>JApplet</code>&nbsp;class is a JComponent (Java Graphical Component) which provides the applet with the capability to display a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_user_interface\" title=\"Graphical user interface\">graphical user interface</a>&nbsp;(GUI) and respond to user&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event-driven_programming\" title=\"Event-driven programming\">events</a>.</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class&nbsp;<a href=\"https://en.wikipedia.org/wiki/Method_overriding\" title=\"Method overriding\">overrides</a>&nbsp;the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#paint(java.awt.Graphics)\" rel=\"nofollow\">paintComponent(Graphics)</a></code></b>&nbsp;method (additionally indicated with the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_annotation\" title=\"Java annotation\">annotation</a>, supported as of JDK 1.5,&nbsp;<code>Override</code>) inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html\" rel=\"nofollow\">Container</a></code>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)#Subclasses_and_superclasses\" title=\"Inheritance (object-oriented programming)\">superclass</a>&nbsp;to provide the code to display the applet. The&nbsp;<code>paintComponent()</code>&nbsp;method is passed a&nbsp;<code><b>Graphics</b></code>&nbsp;object that contains the graphic context used to display the applet. The&nbsp;<code>paintComponent()</code>&nbsp;method calls the graphic context&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Graphics.html#drawString(java.lang.String,%20int,%20int)\" rel=\"nofollow\">drawString(String, int, int)</a></code></b>&nbsp;method to display the&nbsp;<b>\"Hello, world!\"</b>&nbsp;string at a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pixel\" title=\"Pixel\">pixel</a>&nbsp;offset of (<code><b>65, 95</b></code>) from the upper-left corner in the applet\'s display.</p>\n\n<pre>\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n&lt;!-- Hello.html --&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Hello World Applet&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;applet code=\"Hello.class\" width=\"200\" height=\"200\"&gt;\n        &lt;/applet&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>An applet is placed in an&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;document using the&nbsp;<b><code>&lt;applet&gt;</code></b>&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML_element\" title=\"HTML element\">HTML element</a>. The&nbsp;<code>applet</code>&nbsp;tag has three attributes set:&nbsp;<b><code>code=\"Hello\"</code></b>&nbsp;specifies the name of the&nbsp;<code>JApplet</code>&nbsp;class and&nbsp;<b><code>width=\"200\" height=\"200\"</code></b>&nbsp;sets the pixel width and height of the applet. Applets may also be embedded in HTML using either the&nbsp;<code>object</code>&nbsp;or&nbsp;<code>embed</code>&nbsp;element,<sup id=\"cite_ref-52\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-52\">[52]</a></sup>&nbsp;although support for these elements by web browsers is inconsistent.<sup id=\"cite_ref-53\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-53\">[53]</a></sup>&nbsp;However, the&nbsp;<code>applet</code>&nbsp;tag is deprecated, so the&nbsp;<code>object</code>&nbsp;tag is preferred where supported.</p>\n\n<p>The host application, typically a Web browser, instantiates the&nbsp;<b><code>Hello</code></b>&nbsp;applet and creates an&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/applet/AppletContext.html\" rel=\"nofollow\">AppletContext</a></code>&nbsp;for the applet. Once the applet has initialized itself, it is added to the AWT display hierarchy. The&nbsp;<code>paintComponent()</code>&nbsp;method is called by the AWT&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event_dispatching_thread\" title=\"Event dispatching thread\">event dispatching thread</a>&nbsp;whenever the display needs the applet to draw itself.</p>\n\n<h3>Servlet</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Servlet\" title=\"Java Servlet\">Java Servlet</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Java_Servlet\" title=\"Java Servlet\">Java Servlet</a>&nbsp;technology provides Web developers with a simple, consistent mechanism for extending the functionality of a Web server and for accessing existing business systems. Servlets are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Server-side\" title=\"Server-side\">server-side</a>&nbsp;Java EE components that generate responses (typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;pages) to requests (typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" title=\"Hypertext Transfer Protocol\">HTTP</a>&nbsp;requests) from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Client_(computing)\" title=\"Client (computing)\">clients</a>. A servlet can almost be thought of as an applet that runs on the server side—without a face.</p>\n\n<pre>\n// Hello.java\nimport java.io.*;\nimport javax.servlet.*;\n\npublic class Hello extends GenericServlet {\n    public void service(final ServletRequest request, final ServletResponse response)\n    throws ServletException, IOException {\n        response.setContentType(\"text/html\");\n        final PrintWriter pw = response.getWriter();\n        try {\n            pw.println(\"Hello, world!\");\n        } finally {\n            pw.close();\n        }\n    }\n}</pre>\n\n<p>The&nbsp;<b><code>import</code></b>&nbsp;statements direct the Java compiler to include all the public classes and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interfaces</a>&nbsp;from the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/package-summary.html\" rel=\"nofollow\">java.io</a></code></b>&nbsp;and&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/package-summary.html\" rel=\"nofollow\">javax.servlet</a></code></b>&nbsp;packages in the compilation. Packages make Java well suited for large scale applications.</p>\n\n<p>The&nbsp;<code><b>Hello</b></code>&nbsp;class&nbsp;<code><b>extends</b></code>&nbsp;the&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/GenericServlet.html\" rel=\"nofollow\">GenericServlet</a></code></b>&nbsp;class; the&nbsp;<code>GenericServlet</code>&nbsp;class provides the interface for the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Server_(computing)\" title=\"Server (computing)\">server</a>&nbsp;to forward requests to the servlet and control the servlet\'s lifecycle.</p>\n\n<p>The&nbsp;<code>Hello</code>&nbsp;class overrides the&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/Servlet.html#service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)\" rel=\"nofollow\">service(ServletRequest, ServletResponse)</a></code></b>&nbsp;method defined by the&nbsp;<code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/Servlet.html\" rel=\"nofollow\">Servlet</a></code>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interface</a>&nbsp;to provide the code for the service request handler. The&nbsp;<code>service()</code>&nbsp;method is passed: a&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html\" rel=\"nofollow\">ServletRequest</a></code></b>&nbsp;object that contains the request from the client and a&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletResponse.html\" rel=\"nofollow\">ServletResponse</a></code></b>object used to create the response returned to the client. The&nbsp;<code>service()</code>&nbsp;method declares that it&nbsp;<code><b>throws</b></code>&nbsp;the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Exception_handling\" title=\"Exception handling\">exceptions</a>&nbsp;<code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletException.html\" rel=\"nofollow\">ServletException</a></code>&nbsp;and&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\" rel=\"nofollow\">IOException</a></code>&nbsp;if a problem prevents it from responding to the request.</p>\n\n<p>The&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletResponse.html#setContentType(java.lang.String)\" rel=\"nofollow\">setContentType(String)</a></code></b>&nbsp;method in the response object is called to set the&nbsp;<a href=\"https://en.wikipedia.org/wiki/MIME\" title=\"MIME\">MIME</a>&nbsp;content type of the returned data to&nbsp;<b>\"text/html\"</b>. The&nbsp;<b><code><a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/ServletResponse.html#getWriter()\" rel=\"nofollow\">getWriter()</a></code></b>&nbsp;method in the response returns a&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintWriter.html\" rel=\"nofollow\">PrintWriter</a></code></b>&nbsp;object that is used to write the data that is sent to the client. The&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintWriter.html#println(java.lang.String)\" rel=\"nofollow\">println(String)</a></code></b>method is called to write the&nbsp;<b>\"Hello, world!\"</b>&nbsp;string to the response and then the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/PrintWriter.html#close()\" rel=\"nofollow\">close()</a></code></b>&nbsp;method is called to close the print writer, which causes the data that has been written to the stream to be returned to the client.</p>\n\n<h3>JavaServer Pages</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/JavaServer_Pages\" title=\"JavaServer Pages\">JavaServer Pages</a></p>\n\n<p>JavaServer Pages (JSP) are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Server-side\" title=\"Server-side\">server-side</a>&nbsp;Java EE components that generate responses, typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a>&nbsp;pages, to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" title=\"Hypertext Transfer Protocol\">HTTP</a>&nbsp;requests from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Client_(computing)\" title=\"Client (computing)\">clients</a>. JSPs embed Java code in an HTML page by using the special&nbsp;<a href=\"https://en.wikipedia.org/wiki/Delimiter\" title=\"Delimiter\">delimiters</a>&nbsp;<code>&lt;%</code>&nbsp;and&nbsp;<code>%&gt;</code>. A JSP is compiled to a Java&nbsp;<i>servlet</i>, a Java application in its own right, the first time it is accessed. After that, the generated servlet creates the response.</p>\n\n<h3>Swing application</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Swing_(Java)\" title=\"Swing (Java)\">Swing (Java)</a></p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Swing_(Java)\" title=\"Swing (Java)\">Swing</a>&nbsp;is a graphical user interface&nbsp;<a href=\"https://en.wikipedia.org/wiki/Library_(computing)\" title=\"Library (computing)\">library</a>&nbsp;for the Java SE platform. It is possible to specify a different look and feel through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Pluggable_look_and_feel\" title=\"Pluggable look and feel\">pluggable look and feel</a>&nbsp;system of Swing. Clones of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Windows</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/GTK%2B\" title=\"GTK+\">GTK+</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Motif_(software)\" title=\"Motif (software)\">Motif</a>&nbsp;are supplied by Sun.&nbsp;<a href=\"https://en.wikipedia.org/wiki/Apple_Inc.\" title=\"Apple Inc.\">Apple</a>&nbsp;also provides an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Aqua_(user_interface)\" title=\"Aqua (user interface)\">Aqua</a>&nbsp;look and feel for&nbsp;<a href=\"https://en.wikipedia.org/wiki/MacOS\" title=\"MacOS\">macOS</a>. Where prior implementations of these looks and feels may have been considered lacking, Swing in Java SE 6 addresses this problem by using more native&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_control_element\" title=\"Graphical control element\">GUI widget</a>&nbsp;drawing routines of the underlying platforms.</p>\n\n<p>This example Swing application creates a single window with \"Hello, world!\" inside:</p>\n\n<pre>\n// Hello.java (Java SE 5)\nimport javax.swing.*;\n\npublic class Hello extends JFrame {\n    public Hello() {\n        super(\"hello\");\n        super.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n        super.add(new JLabel(\"Hello, world!\"));\n        super.pack();\n        super.setVisible(true);\n    }\n\n    public static void main(final String[] args) {\n        new Hello();\n    }\n}\n</pre>\n\n<p>The first&nbsp;<b><code>import</code></b>&nbsp;includes all the public classes and interfaces from the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/package-summary.html\" rel=\"nofollow\">javax.swing</a></code></b>&nbsp;package.</p>\n\n<p>The&nbsp;<code><b>Hello</b></code>&nbsp;class&nbsp;<code><b>extends</b></code>&nbsp;the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JFrame.html\" rel=\"nofollow\">JFrame</a></code></b>&nbsp;class; the&nbsp;<code>JFrame</code>&nbsp;class implements a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Window_(computing)\" title=\"Window (computing)\">window</a>&nbsp;with a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Title_bar\" title=\"Title bar\">title bar</a>&nbsp;and a close&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_control_element\" title=\"Graphical control element\">control</a>.</p>\n\n<p>The&nbsp;<code><b>Hello()</b></code>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming)\" title=\"Constructor (object-oriented programming)\">constructor</a>&nbsp;initializes the frame by first calling the superclass constructor, passing the parameter&nbsp;<code>\"hello\"</code>, which is used as the window\'s title. It then calls the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JFrame.html#setDefaultCloseOperation(int)\" rel=\"nofollow\">setDefaultCloseOperation(int)</a></code></b>&nbsp;method inherited from&nbsp;<code>JFrame</code>&nbsp;to set the default operation when the close control on the title bar is selected to&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/WindowConstants.html#EXIT_ON_CLOSE\" rel=\"nofollow\">WindowConstants.EXIT_ON_CLOSE</a></code></b>&nbsp;– this causes the&nbsp;<code>JFrame</code>&nbsp;to be disposed of when the frame is closed (as opposed to merely hidden), which allows the Java virtual machine to exit and the program to terminate. Next, a&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/JLabel.html\" rel=\"nofollow\">JLabel</a></code></b>&nbsp;is created for the string&nbsp;<b>\"Hello, world!\"</b>&nbsp;and the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#add(java.awt.Component)\" rel=\"nofollow\">add(Component)</a></code></b>&nbsp;method inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html\" rel=\"nofollow\">Container</a></code>&nbsp;superclass is called to add the label to the frame. The&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Window.html#pack()\" rel=\"nofollow\">pack()</a></code></b>&nbsp;method inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Window.html\" rel=\"nofollow\">Window</a></code>&nbsp;superclass is called to size the window and lay out its contents.</p>\n\n<p>The&nbsp;<code><b>main()</b></code>&nbsp;method is called by the Java virtual machine when the program starts. It&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_(computer_science)\" title=\"Object (computer science)\">instantiates</a>&nbsp;a new&nbsp;<b><code>Hello</code></b>&nbsp;frame and causes it to be displayed by calling the&nbsp;<b><code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Component.html#setVisible(boolean)\" rel=\"nofollow\">setVisible(boolean)</a></code></b>&nbsp;method inherited from the&nbsp;<code><a href=\"https://docs.oracle.com/javase/8/docs/api/java/awt/Component.html\" rel=\"nofollow\">Component</a></code>&nbsp;superclass with the boolean parameter&nbsp;<code><b>true</b></code>. Once the frame is displayed, exiting the&nbsp;<code>main</code>&nbsp;method does not cause the program to terminate because the AWT&nbsp;<a href=\"https://en.wikipedia.org/wiki/Event_dispatching_thread\" title=\"Event dispatching thread\">event dispatching thread</a>&nbsp;remains active until all of the Swing top-level windows have been disposed.</p>\n\n<h3>Generics</h3>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Generics_in_Java\" title=\"Generics in Java\">Generics in Java</a></p>\n\n<p>In 2004,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Generic_programming\" title=\"Generic programming\">generics</a>&nbsp;were added to the Java language, as part of J2SE 5.0. Prior to the introduction of generics, each variable declaration had to be of a specific type. For container classes, for example, this is a problem because there is no easy way to create a container that accepts only specific types of objects. Either the container operates on all subtypes of a class or interface, usually&nbsp;<code>Object</code>, or a different container class has to be created for each contained class. Generics allow compile-time type checking without having to create many container classes, each containing almost identical code. In addition to enabling more efficient code, certain runtime exceptions are prevented from occurring, by issuing compile-time errors. If Java prevented all runtime type errors (<code>ClassCastException</code>\'s) from occurring, it would be&nbsp;<a href=\"https://en.wikipedia.org/wiki/Type_safety\" title=\"Type safety\">type safe</a>.</p>\n\n<p>In 2016, the type system was shown not to be safe at all, it was proven&nbsp;<a href=\"https://en.wikipedia.org/wiki/Soundness\" title=\"Soundness\">unsound</a>.<sup id=\"cite_ref-54\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-54\">[54]</a></sup></p>\n\n<h2>Criticism</h2>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Criticism_of_Java\" title=\"Criticism of Java\">Criticism of Java</a></p>\n\n<p>Criticisms directed at Java include the implementation of generics,<sup id=\"cite_ref-55\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-55\">[55]</a></sup>&nbsp;speed,<sup id=\"cite_ref-56\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-56\">[56]</a></sup>&nbsp;the handling of unsigned numbers,<sup id=\"cite_ref-57\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-57\">[57]</a></sup>&nbsp;the implementation of floating-point arithmetic,<sup id=\"cite_ref-58\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-58\">[58]</a></sup>&nbsp;and a history of security vulnerabilities in the primary Java VM implementation&nbsp;<a href=\"https://en.wikipedia.org/wiki/HotSpot\" title=\"HotSpot\">HotSpot</a>.<sup id=\"cite_ref-59\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-59\">[59]</a></sup></p>\n\n<h2>Use outside of the Java platform</h2>\n\n<p>The Java programming language requires the presence of a software platform in order for compiled programs to be executed. Oracle supplies the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_platform\" title=\"Java platform\">Java platform</a>&nbsp;for use with Java. The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_SDK\" title=\"Android SDK\">Android SDK</a>&nbsp;is an alternative software platform, used primarily for developing&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_application\" title=\"Android application\">Android applications</a>.</p>\n\n<h3>Android</h3>\n\n<p><a href=\"https://en.wikipedia.org/wiki/File:Android_6.0-en.png\"><img alt=\"\" data-file-height=\"1920\" data-file-width=\"1080\" height=\"302\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Android_6.0-en.png/170px-Android_6.0-en.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Android_6.0-en.png/255px-Android_6.0-en.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Android_6.0-en.png/340px-Android_6.0-en.png 2x\" width=\"170\" /></a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_(operating_system)\" title=\"Android (operating system)\">Android</a>&nbsp;operating system makes extensive use of Java-related technology.</p>\n\n<p>The Java language is a key pillar in&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_(operating_system)\" title=\"Android (operating system)\">Android</a>, an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Open_source\" title=\"Open source\">open source</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Mobile_operating_system\" title=\"Mobile operating system\">mobile operating system</a>. Although Android, built on the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Linux_kernel\" title=\"Linux kernel\">Linux kernel</a>, is written largely in C, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_software_development#SDK\" title=\"Android software development\">Android SDK</a>&nbsp;uses the Java language as the basis for Android applications. The bytecode language supported by the Android SDK is incompatible with Java bytecode and runs on its own virtual machine, optimized for low-memory devices such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Smartphone\" title=\"Smartphone\">smartphones</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Tablet_computer\" title=\"Tablet computer\">tablet computers</a>. Depending on the Android version, the bytecode is either interpreted by the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Dalvik_virtual_machine\" title=\"Dalvik virtual machine\">Dalvik virtual machine</a>&nbsp;or compiled into native code by the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_Runtime\" title=\"Android Runtime\">Android Runtime</a>.</p>\n\n<p>Android does not provide the full Java SE standard library, although the Android SDK does include an independent implementation of a large subset of it. It supports Java 6 and some Java 7 features, offering an implementation compatible with the standard library (<a href=\"https://en.wikipedia.org/wiki/Apache_Harmony\" title=\"Apache Harmony\">Apache Harmony</a>).</p>\n\n<h4>Controversy</h4>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Oracle_America,_Inc._v._Google,_Inc.\" title=\"Oracle America, Inc. v. Google, Inc.\">Oracle America, Inc. v. Google, Inc.</a></p>\n\n<p>The use of Java-related technology in Android led to a legal dispute between Oracle and Google. On May 7, 2012, a San Francisco jury found that if APIs could be copyrighted, then Google had infringed Oracle\'s copyrights by the use of Java in Android devices.<sup id=\"cite_ref-60\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-60\">[60]</a></sup>&nbsp;District Judge&nbsp;<a href=\"https://en.wikipedia.org/wiki/William_Haskell_Alsup\" title=\"William Haskell Alsup\">William Haskell Alsup</a>&nbsp;ruled on May 31, 2012, that APIs cannot be copyrighted,<sup id=\"cite_ref-61\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-61\">[61]</a></sup>&nbsp;but this was reversed by the United States Court of Appeals for the Federal Circuit in May 2014.<sup id=\"cite_ref-cnet_appeals_62-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-cnet_appeals-62\">[62]</a></sup>&nbsp;On May 26, 2016, the district court decided in favor of Google, ruling the copyright infringement of the Java API in Android constitutes fair use.<sup id=\"cite_ref-63\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-63\">[63]</a></sup></p>\n\n<h2>Class libraries</h2>\n\n<table role=\"presentation\">\n	<tbody>\n		<tr>\n			<td>\n			<p><a href=\"https://en.wikipedia.org/wiki/File:Question_book-new.svg\"><img alt=\"\" data-file-height=\"399\" data-file-width=\"512\" height=\"39\" src=\"https://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x\" width=\"50\" /></a></p>\n			</td>\n			<td>This section&nbsp;<b>needs additional citations for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Wikipedia:Verifiability\" title=\"Wikipedia:Verifiability\">verification</a></b>.&nbsp;Please help&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Java_(programming_language)&amp;action=edit\">improve this article</a>&nbsp;by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1\" title=\"Help:Introduction to referencing with Wiki Markup/1\">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.&nbsp;<small><i>(December 2014)</i></small>&nbsp;<small><i>(<a href=\"https://en.wikipedia.org/wiki/Help:Maintenance_template_removal\" title=\"Help:Maintenance template removal\">Learn how and when to remove this template message</a>)</i></small></td>\n		</tr>\n	</tbody>\n</table>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Class_Library\" title=\"Java Class Library\">Java Class Library</a></p>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Class_Library\" title=\"Java Class Library\">Java Class Library</a>&nbsp;is the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Standard_library\" title=\"Standard library\">standard library</a>, developed to support application development in Java. It is controlled by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>&nbsp;in cooperation with others through the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Community_Process\" title=\"Java Community Process\">Java Community Process</a>&nbsp;program. Companies or individuals participating in this process can influence the design and development of the APIs. This process has been a subject of controversy.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style/Dates_and_numbers#Chronological_items\" title=\"Wikipedia:Manual of Style/Dates and numbers\">when?</a></i>]</sup>&nbsp;The class library contains features such as:</p>\n\n<ul>\n	<li>The core libraries, which include:\n	<ul>\n		<li>IO/NIO</li>\n		<li>Networking</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Reflection_(computer_programming)\" title=\"Reflection (computer programming)\">Reflection</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Concurrent_computing\" title=\"Concurrent computing\">Concurrency</a></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Generics_in_Java\" title=\"Generics in Java\">Generics</a></li>\n		<li>Scripting/Compiler</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Functional_programming\" title=\"Functional programming\">Functional Programming</a>&nbsp;(Lambda, Streaming)</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_collections_framework\" title=\"Java collections framework\">Collection libraries</a>&nbsp;that implement&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_structure\" title=\"Data structure\">data structures</a>&nbsp;such as&nbsp;<a href=\"https://en.wikipedia.org/wiki/List_(abstract_data_type)\" title=\"List (abstract data type)\">lists</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Associative_array\" title=\"Associative array\">dictionaries</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Tree_structure\" title=\"Tree structure\">trees</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Set_(abstract_data_type)\" title=\"Set (abstract data type)\">sets</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/Queue_(abstract_data_type)\" title=\"Queue (abstract data type)\">queues</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Double-ended_queue\" title=\"Double-ended queue\">double-ended queue</a>, or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" title=\"Stack (abstract data type)\">stacks</a><sup id=\"cite_ref-collections_64-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-collections-64\">[64]</a></sup></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/XML\" title=\"XML\">XML</a>&nbsp;Processing (Parsing, Transforming, Validating) libraries</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Computer_security\" title=\"Computer security\">Security</a><sup id=\"cite_ref-security_65-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-security-65\">[65]</a></sup></li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Internationalization_and_localization\" title=\"Internationalization and localization\">Internationalization and localization</a>&nbsp;libraries<sup id=\"cite_ref-i18n_66-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-i18n-66\">[66]</a></sup></li>\n	</ul>\n	</li>\n	<li>The integration libraries, which allow the application writer to communicate with external systems. These libraries include:\n	<ul>\n		<li>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_Database_Connectivity\" title=\"Java Database Connectivity\">Java Database Connectivity</a>&nbsp;(JDBC)&nbsp;<a href=\"https://en.wikipedia.org/wiki/Application_programming_interface\" title=\"Application programming interface\">API</a>&nbsp;for database access</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_Naming_and_Directory_Interface\" title=\"Java Naming and Directory Interface\">Java Naming and Directory Interface</a>&nbsp;(JNDI) for lookup and discovery</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" title=\"Java remote method invocation\">RMI</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture\" title=\"Common Object Request Broker Architecture\">CORBA</a>&nbsp;for distributed application development</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/Java_Management_Extensions\" title=\"Java Management Extensions\">JMX</a>&nbsp;for managing and monitoring applications</li>\n	</ul>\n	</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/User_interface\" title=\"User interface\">User interface</a>&nbsp;libraries, which include:\n	<ul>\n		<li>The (heavyweight, or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Native_(computing)\" title=\"Native (computing)\">native</a>)&nbsp;<a href=\"https://en.wikipedia.org/wiki/Abstract_Window_Toolkit\" title=\"Abstract Window Toolkit\">Abstract Window Toolkit</a>&nbsp;(AWT), which provides&nbsp;<a href=\"https://en.wikipedia.org/wiki/Graphical_user_interface\" title=\"Graphical user interface\">GUI</a>&nbsp;components, the means for laying out those components and the means for handling events from those components</li>\n		<li>The (lightweight)&nbsp;<a href=\"https://en.wikipedia.org/wiki/Swing_(Java)\" title=\"Swing (Java)\">Swing</a>&nbsp;libraries, which are built on AWT but provide (non-native) implementations of the AWT widgetry</li>\n		<li>APIs for audio capture, processing, and playback</li>\n		<li><a href=\"https://en.wikipedia.org/wiki/JavaFX\" title=\"JavaFX\">JavaFX</a></li>\n	</ul>\n	</li>\n	<li>A platform dependent implementation of the Java virtual machine that is the means by which the bytecodes of the Java libraries and third party applications are executed</li>\n	<li>Plugins, which enable&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\">applets</a>&nbsp;to be run in web browsers</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_Web_Start\" title=\"Java Web Start\">Java Web Start</a>, which allows Java applications to be efficiently distributed to&nbsp;<a href=\"https://en.wikipedia.org/wiki/End_user\" title=\"End user\">end users</a>&nbsp;across the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Internet\" title=\"Internet\">Internet</a></li>\n	<li>Licensing and documentation</li>\n</ul>\n\n<h2>Documentation</h2>\n\n<p>Main article:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Javadoc\" title=\"Javadoc\">Javadoc</a></p>\n\n<p>Javadoc is a comprehensive documentation system, created by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" title=\"Sun Microsystems\">Sun Microsystems</a>, used by many Java developers<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style/Words_to_watch#Unsupported_attributions\" title=\"Wikipedia:Manual of Style/Words to watch\">by whom?</a></i>]</sup>. It provides developers with an organized system for documenting their code. Javadoc comments have an extra asterisk at the beginning, i.e. the delimiters are&nbsp;<code>/**</code>&nbsp;and&nbsp;<code>*/</code>, whereas the normal multi-line comments in Java are set off with the delimiters&nbsp;<code>/*</code>&nbsp;and&nbsp;<code>*/</code>.<sup id=\"cite_ref-javadoc_comments_67-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-javadoc_comments-67\">[67]</a></sup></p>\n\n<h2>Editions</h2>\n\n<p>See also:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_Java_implementations#Class_library\" title=\"Free Java implementations\">Free Java implementations §&nbsp;Class library</a></p>\n\n<table>\n	<tbody>\n		<tr>\n			<th><a href=\"https://en.wikipedia.org/wiki/Java_(software_platform)\" title=\"Java (software platform)\">Java</a>&nbsp;editions</th>\n		</tr>\n		<tr>\n			<td><a href=\"https://en.wikipedia.org/wiki/File:Duke_(Java_mascot)_waving.svg\"><img alt=\"Duke (Java mascot) waving.svg\" data-file-height=\"407\" data-file-width=\"226\" height=\"108\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/60px-Duke_%28Java_mascot%29_waving.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/90px-Duke_%28Java_mascot%29_waving.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/120px-Duke_%28Java_mascot%29_waving.svg.png 2x\" width=\"60\" /></a></td>\n		</tr>\n		<tr>\n			<td>\n			<ul>\n				<li><a href=\"https://en.wikipedia.org/wiki/Java_Card\" title=\"Java Card\">Java Card</a></li>\n				<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition\" title=\"Java Platform, Micro Edition\">Micro Edition</a>&nbsp;(ME)</li>\n				<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition\" title=\"Java Platform, Standard Edition\">Standard Edition</a>&nbsp;(SE)</li>\n				<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Enterprise Edition</a>&nbsp;(EE)</li>\n				<li><a href=\"https://en.wikipedia.org/wiki/JavaFX\" title=\"JavaFX\">JavaFX</a>&nbsp;(Merged to Java SE 8)</li>\n				<li><a href=\"https://en.wikipedia.org/wiki/PersonalJava\" title=\"PersonalJava\">PersonalJava</a>&nbsp;(discontinued)</li>\n			</ul>\n			</td>\n		</tr>\n		<tr>\n			<td>\n			<ul>\n				<li><a href=\"https://en.wikipedia.org/wiki/Template:Java_platforms\" title=\"Template:Java platforms\"><abbr title=\"View this template\">v</abbr></a></li>\n				<li><a href=\"https://en.wikipedia.org/wiki/Template_talk:Java_platforms\" title=\"Template talk:Java platforms\"><abbr title=\"Discuss this template\">t</abbr></a></li>\n				<li><a href=\"https://en.wikipedia.org/w/index.php?title=Template:Java_platforms&amp;action=edit\"><abbr title=\"Edit this template\">e</abbr></a></li>\n			</ul>\n			</td>\n		</tr>\n	</tbody>\n</table>\n\n<p>Sun has defined and supports four editions of Java targeting different application environments and segmented many of its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Application_programming_interface\" title=\"Application programming interface\">APIs</a>&nbsp;so that they belong to one of the platforms. The platforms are:</p>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_Card\" title=\"Java Card\">Java Card</a>&nbsp;for smartcards.<sup id=\"cite_ref-java_card_68-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-java_card-68\">[68]</a></sup></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition\" title=\"Java Platform, Micro Edition\">Java Platform, Micro Edition</a>&nbsp;(Java ME) – targeting environments with limited resources.<sup id=\"cite_ref-java_me_69-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-java_me-69\">[69]</a></sup></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition\" title=\"Java Platform, Standard Edition\">Java Platform, Standard Edition</a>&nbsp;(Java SE) – targeting workstation environments.<sup id=\"cite_ref-java_se_70-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-java_se-70\">[70]</a></sup></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\" title=\"Java Platform, Enterprise Edition\">Java Platform, Enterprise Edition</a>&nbsp;(Java EE) – targeting large distributed enterprise or Internet environments.<sup id=\"cite_ref-java_ee_71-0\"><a href=\"https://en.wikipedia.org/wiki/Java_(programming_language)#cite_note-java_ee-71\">[71]</a></sup></li>\n</ul>\n\n<p>The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class_(computer_programming)\" title=\"Class (computer programming)\">classes</a>&nbsp;in the Java APIs are organized into separate groups called&nbsp;<a href=\"https://en.wikipedia.org/wiki/Java_package\" title=\"Java package\">packages</a>. Each package contains a set of related&nbsp;<a href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" title=\"Interface (Java)\">interfaces</a>, classes, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Exception_handling\" title=\"Exception handling\">exceptions</a>. Refer to the separate platforms for a description of the packages available.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:TOPIC\" title=\"Wikipedia:TOPIC\">relevant to this section?</a>&nbsp;–&nbsp;<a href=\"https://en.wikipedia.org/wiki/Talk:Java_(programming_language)#Relevant\" title=\"Talk:Java (programming language)\">discuss</a></i>]</sup></p>\n\n<p>Sun also provided an edition called&nbsp;<a href=\"https://en.wikipedia.org/wiki/PersonalJava\" title=\"PersonalJava\">PersonalJava</a>&nbsp;that has been superseded by later, standards-based Java ME configuration-profile pairings.</p>\n\n<h2>See also</h2>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/File:Duke_(Java_mascot)_waving.svg\"><img alt=\"icon\" data-file-height=\"407\" data-file-width=\"226\" height=\"28\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/15px-Duke_%28Java_mascot%29_waving.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/23px-Duke_%28Java_mascot%29_waving.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/31px-Duke_%28Java_mascot%29_waving.svg.png 2x\" width=\"15\" /></a><a href=\"https://en.wikipedia.org/wiki/Portal:Java\" title=\"Portal:Java\">Java portal</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/File:8bit-dynamiclist_(reversed).gif\"><img alt=\"icon\" data-file-height=\"32\" data-file-width=\"32\" height=\"28\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cc/8bit-dynamiclist_%28reversed%29.gif/28px-8bit-dynamiclist_%28reversed%29.gif\" srcset=\"//upload.wikimedia.org/wikipedia/commons/c/cc/8bit-dynamiclist_%28reversed%29.gif 1.5x\" width=\"28\" /></a><a href=\"https://en.wikipedia.org/wiki/Portal:Computer_programming\" title=\"Portal:Computer programming\">Computer programming portal</a></li>\n</ul>\n\n<table role=\"presentation\">\n	<tbody>\n		<tr>\n			<td><img alt=\"Book icon\" data-file-height=\"48\" data-file-width=\"48\" height=\"30\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Office-book.svg/30px-Office-book.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Office-book.svg/45px-Office-book.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Office-book.svg/60px-Office-book.svg.png 2x\" width=\"30\" /></td>\n			<td>\n			<ul>\n				<li><a href=\"https://en.wikipedia.org/wiki/Book:Programming_for_Students\" title=\"Book:Programming for Students\">Book: Programming for Students</a></li>\n			</ul>\n			</td>\n		</tr>\n	</tbody>\n</table>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Dalvik_(software)\" title=\"Dalvik (software)\">Dalvik</a>&nbsp;– used in old Android versions, replaced by non-JIT&nbsp;<a href=\"https://en.wikipedia.org/wiki/Android_Runtime\" title=\"Android Runtime\">Android Runtime</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/JavaOne\" title=\"JavaOne\">JavaOne</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Java.net#Javapedia\" title=\"Java.net\">Javapedia</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/List_of_Java_virtual_machines\" title=\"List of Java virtual machines\">List of Java virtual machines</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/List_of_Java_APIs\" title=\"List of Java APIs\">List of Java APIs</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/List_of_JVM_languages\" title=\"List of JVM languages\">List of JVM languages</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Graal_(compiler)\" title=\"Graal (compiler)\">Graal (compiler)</a>, a project aiming to implement a high performance Java dynamic compiler and interpreter</li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Spring_Framework\" title=\"Spring Framework\">Spring Framework</a></li>\n</ul>\n\n<h3>Comparison of Java with other languages</h3>\n\n<ul>\n	<li><a href=\"https://en.wikipedia.org/wiki/Comparison_of_programming_languages\" title=\"Comparison of programming languages\">Comparison of programming languages</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Comparison_of_Java_and_C%2B%2B\" title=\"Comparison of Java and C++\">Comparison of Java and C++</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Comparison_of_C_Sharp_and_Java\" title=\"Comparison of C Sharp and Java\">Comparison of C# and Java</a></li>\n</ul>','Test Test','6/12/2017','10',1);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
